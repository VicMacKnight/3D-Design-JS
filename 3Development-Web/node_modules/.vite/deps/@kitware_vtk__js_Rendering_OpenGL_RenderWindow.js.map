{
  "version": 3,
  "sources": ["../../spark-md5/spark-md5.js", "../../@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js", "../../@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js", "../../@kitware/vtk.js/Rendering/OpenGL/OrderIndependentTranslucentPass.js", "../../@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js", "../../@kitware/vtk.js/Rendering/Core/HardwareSelector.js", "../../@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js", "../../@kitware/vtk.js/Common/DataModel/SelectionNode.js", "../../@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js", "../../@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js", "../../@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js", "../../@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js", "../../@kitware/vtk.js/Rendering/OpenGL/RenderWindow/ContextProxy.js", "../../@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js"],
  "sourcesContent": ["(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n", "import { n as newInstance$1, o as obj, r as vtkErrorMacro, k as getArray } from '../../macros2.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport { Filter } from './Texture/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkFramebuffer methods\n// ----------------------------------------------------------------------------\nfunction vtkFramebuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkFramebuffer');\n  publicAPI.getBothMode = () => model.context.FRAMEBUFFER;\n  // publicAPI.getDrawMode = () => model.context.DRAW_FRAMEBUFFER;\n  // publicAPI.getReadMode = () => model.context.READ_FRAMEBUFFER;\n\n  publicAPI.saveCurrentBindingsAndBuffers = modeIn => {\n    const mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.saveCurrentBindings(mode);\n    publicAPI.saveCurrentBuffers(mode);\n  };\n  publicAPI.saveCurrentBindings = modeIn => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling saveCurrentBindings');\n      return;\n    }\n    const gl = model.context;\n    model.previousDrawBinding = gl.getParameter(model.context.FRAMEBUFFER_BINDING);\n    model.previousActiveFramebuffer = model._openGLRenderWindow.getActiveFramebuffer();\n  };\n  publicAPI.saveCurrentBuffers = modeIn => {\n    // noop on webgl 1\n  };\n  publicAPI.restorePreviousBindingsAndBuffers = modeIn => {\n    const mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\n    publicAPI.restorePreviousBindings(mode);\n    publicAPI.restorePreviousBuffers(mode);\n  };\n  publicAPI.restorePreviousBindings = modeIn => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling restorePreviousBindings');\n      return;\n    }\n    const gl = model.context;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, model.previousDrawBinding);\n    model._openGLRenderWindow.setActiveFramebuffer(model.previousActiveFramebuffer);\n  };\n  publicAPI.restorePreviousBuffers = modeIn => {\n    // currently a noop on webgl1\n  };\n  publicAPI.bind = function () {\n    let modeArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let mode = modeArg;\n    if (mode === null) {\n      mode = model.context.FRAMEBUFFER;\n    }\n    model.context.bindFramebuffer(mode, model.glFramebuffer);\n    for (let i = 0; i < model.colorBuffers.length; i++) {\n      model.colorBuffers[i].bind();\n    }\n    model._openGLRenderWindow.setActiveFramebuffer(publicAPI);\n  };\n  publicAPI.create = (width, height) => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling create');\n      return;\n    }\n    model.glFramebuffer = model.context.createFramebuffer();\n    model.glFramebuffer.width = width;\n    model.glFramebuffer.height = height;\n  };\n  publicAPI.setColorBuffer = function (texture) {\n    let attachment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const gl = model.context;\n    if (!gl) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling setColorBuffer');\n      return;\n    }\n    let glAttachment = gl.COLOR_ATTACHMENT0;\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        vtkErrorMacro('Using multiple framebuffer attachments requires WebGL 2');\n        return;\n      }\n    }\n    model.colorBuffers[attachment] = texture;\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, texture.getHandle(), 0);\n  };\n  publicAPI.removeColorBuffer = function () {\n    let attachment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const gl = model.context;\n    if (!gl) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling removeColorBuffer');\n      return;\n    }\n    let glAttachment = gl.COLOR_ATTACHMENT0;\n    if (attachment > 0) {\n      if (model._openGLRenderWindow.getWebgl2()) {\n        glAttachment += attachment;\n      } else {\n        vtkErrorMacro('Using multiple framebuffer attachments requires WebGL 2');\n        return;\n      }\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, null, 0);\n    model.colorBuffers = model.colorBuffers.splice(attachment, 1);\n  };\n  publicAPI.setDepthBuffer = texture => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling setDepthBuffer');\n      return;\n    }\n    if (model._openGLRenderWindow.getWebgl2()) {\n      const gl = model.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, texture.getHandle(), 0);\n    } else {\n      vtkErrorMacro('Attaching depth buffer textures to fbo requires WebGL 2');\n    }\n  };\n  publicAPI.removeDepthBuffer = () => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling removeDepthBuffer');\n      return;\n    }\n    if (model._openGLRenderWindow.getWebgl2()) {\n      const gl = model.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, null, 0);\n    } else {\n      vtkErrorMacro('Attaching depth buffer textures to framebuffers requires WebGL 2');\n    }\n  };\n  publicAPI.getGLFramebuffer = () => model.glFramebuffer;\n  publicAPI.setOpenGLRenderWindow = rw => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.glFramebuffer) {\n      model.context.deleteFramebuffer(model.glFramebuffer);\n    }\n  };\n  publicAPI.getSize = () => {\n    if (model.glFramebuffer == null) return null;\n    return [model.glFramebuffer.width, model.glFramebuffer.height];\n  };\n  publicAPI.populateFramebuffer = () => {\n    if (!model.context) {\n      vtkErrorMacro('you must set the OpenGLRenderWindow before calling populateFrameBuffer');\n      return;\n    }\n    publicAPI.bind();\n    const gl = model.context;\n    const texture = vtkOpenGLTexture.newInstance();\n    texture.setOpenGLRenderWindow(model._openGLRenderWindow);\n    texture.setMinificationFilter(Filter.LINEAR);\n    texture.setMagnificationFilter(Filter.LINEAR);\n    texture.create2DFromRaw(model.glFramebuffer.width, model.glFramebuffer.height, 4, VtkDataTypes.UNSIGNED_CHAR, null);\n    publicAPI.setColorBuffer(texture);\n\n    // for now do not count on having a depth buffer texture\n    // as they are not standard webgl 1\n    model.depthTexture = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, model.depthTexture);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, model.glFramebuffer.width, model.glFramebuffer.height);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, model.depthTexture);\n  };\n\n  // For backwards compatibility. Use getColorBuffers()[0] going forward.\n  publicAPI.getColorTexture = () => model.colorBuffers[0];\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  // _openGLRenderWindow: null,\n  glFramebuffer: null,\n  colorBuffers: null,\n  depthTexture: null,\n  previousDrawBinding: 0,\n  previousReadBinding: 0,\n  previousDrawBuffer: 0,\n  previousReadBuffer: 0,\n  previousActiveFramebuffer: null\n};\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  obj(publicAPI, model);\n  if (model.colorBuffers) {\n    vtkErrorMacro('you cannot initialize colorBuffers through the constructor. You should call setColorBuffer() instead.');\n  }\n  model.colorBuffers = [];\n  getArray(publicAPI, model, ['colorBuffers']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n  vtkFramebuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nconst newInstance = newInstance$1(extend, 'vtkFramebuffer');\n\n// ----------------------------------------------------------------------------\nvar vtkOpenGLFramebuffer = {\n  newInstance,\n  extend\n};\n\nexport { vtkOpenGLFramebuffer as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderPass');\n  publicAPI.getOperation = () => model.currentOperation;\n  publicAPI.setCurrentOperation = val => {\n    model.currentOperation = val;\n    model.currentTraverseOperation = `traverse${macro.capitalize(model.currentOperation)}`;\n  };\n  publicAPI.getTraverseOperation = () => model.currentTraverseOperation;\n\n  // by default this class will traverse all of its\n  // preDelegateOperations, then call its delegate render passes\n  // the traverse all of its postDelegateOperations\n  // any of those three arrays can be empty\n  publicAPI.traverse = function (viewNode) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (model.deleted) {\n      return;\n    }\n\n    // we just render our delegates in order\n    model._currentParent = parent;\n    model.preDelegateOperations.forEach(val => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n    model.delegates.forEach(val => {\n      val.traverse(viewNode, publicAPI);\n    });\n    model.postDelegateOperations.forEach(val => {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  delegates: [],\n  currentOperation: null,\n  preDelegateOperations: [],\n  postDelegateOperations: [],\n  currentParent: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['currentOperation']);\n  macro.setGet(publicAPI, model, ['delegates', '_currentParent', 'preDelegateOperations', 'postDelegateOperations']);\n  macro.moveToProtected(publicAPI, model, ['currentParent']);\n\n  // Object methods\n  vtkRenderPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderPass');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderPass$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkRenderPass$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\n\nconst {\n  Representation\n} = vtkProperty;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n\nfunction translucentShaderReplacement(shaders) {\n  const substituteRes = vtkShaderProgram.substitute(shaders.Fragment, '//VTK::RenderPassFragmentShader::Impl', `\n      float weight = gl_FragData[0].a * pow(max(1.1 - gl_FragCoord.z, 0.0), 2.0);\n      gl_FragData[0] = vec4(gl_FragData[0].rgb*weight, gl_FragData[0].a);\n      gl_FragData[1].r = weight;\n    `, false);\n  shaders.Fragment = substituteRes.result;\n}\nconst oitpFragTemplate = `//VTK::System::Dec\n\nin vec2 tcoord;\n\nuniform sampler2D translucentRTexture;\nuniform sampler2D translucentRGBATexture;\n\n// the output of this shader\n//VTK::Output::Dec\n\nvoid main()\n{\n  vec4 t1Color = texture(translucentRGBATexture, tcoord);\n  float t2Color = texture(translucentRTexture, tcoord).r;\n  gl_FragData[0] = vec4(t1Color.rgb/max(t2Color,0.01), 1.0 - t1Color.a);\n}\n`;\nfunction vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLOrderIndependentTranslucentPass');\n\n  // build vertices etc\n  publicAPI.createVertexBuffer = () => {\n    // 4 corner points in clipping space in order (x, y, z) where z is always set to -1\n    // prettier-ignore\n    const ptsArray = new Float32Array([-1, -1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1]);\n\n    // 4 corresponding corner points in texture space in order (x, y)\n    const tcoordArray = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n\n    // a square defined as cell relation ship in order (cell_size, v1, v2, v3, v4)\n    const cellArray = new Uint16Array([4, 0, 1, 3, 2]);\n    const points = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: ptsArray\n    });\n    points.setName('points');\n    const tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcoordArray\n    });\n    tcoords.setName('tcoords');\n    const cells = vtkDataArray.newInstance({\n      numberOfComponents: 1,\n      values: cellArray\n    });\n    model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n      points,\n      tcoords,\n      cellOffset: 0\n    });\n    model.VBOBuildTime.modified();\n  };\n  publicAPI.createFramebuffer = viewNode => {\n    const size = viewNode.getSize();\n    const gl = viewNode.getContext();\n    model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n    model.framebuffer.setOpenGLRenderWindow(viewNode);\n    model.framebuffer.create(...size);\n    model.framebuffer.saveCurrentBindingsAndBuffers();\n    model.framebuffer.bind();\n    model.translucentRGBATexture = vtkOpenGLTexture.newInstance();\n    model.translucentRGBATexture.setInternalFormat(gl.RGBA16F);\n    model.translucentRGBATexture.setFormat(gl.RGBA);\n    model.translucentRGBATexture.setOpenGLDataType(gl.HALF_FLOAT);\n    model.translucentRGBATexture.setOpenGLRenderWindow(viewNode);\n    model.translucentRGBATexture.create2DFromRaw(size[0], size[1], 4, 'Float32Array', null);\n    model.translucentRTexture = vtkOpenGLTexture.newInstance();\n    model.translucentRTexture.setInternalFormat(gl.R16F);\n    model.translucentRTexture.setFormat(gl.RED);\n    model.translucentRTexture.setOpenGLDataType(gl.HALF_FLOAT);\n    model.translucentRTexture.setOpenGLRenderWindow(viewNode);\n    model.translucentRTexture.create2DFromRaw(size[0], size[1], 1, 'Float32Array', null);\n    model.translucentZTexture = vtkOpenGLTexture.newInstance();\n    model.translucentZTexture.setOpenGLRenderWindow(viewNode);\n    model.translucentZTexture.createDepthFromRaw(size[0], size[1], 'Float32Array', null);\n    model.framebuffer.setColorBuffer(model.translucentRGBATexture, 0);\n    model.framebuffer.setColorBuffer(model.translucentRTexture, 1);\n    model.framebuffer.setDepthBuffer(model.translucentZTexture);\n  };\n  publicAPI.createCopyShader = viewNode => {\n    model.copyShader = viewNode.getShaderCache().readyShaderProgramArray(['//VTK::System::Dec', 'attribute vec4 vertexDC;', 'attribute vec2 tcoordTC;', 'varying vec2 tcoord;', 'void main() { tcoord = tcoordTC; gl_Position = vertexDC; }'].join('\\n'), oitpFragTemplate, '');\n  };\n  publicAPI.createVBO = viewNode => {\n    const gl = viewNode.getContext();\n    model.tris.setOpenGLRenderWindow(viewNode);\n    publicAPI.createVertexBuffer();\n    const program = model.copyShader;\n    // prepare the vertex and triangle data for the image plane to render to\n\n    model.tris.getCABO().bind();\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'vertexDC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 3, gl.FALSE)) {\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n    }\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'tcoordTC', model.tris.getCABO().getTCoordOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 2, gl.FALSE)) {\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n    }\n  };\n  publicAPI.traverse = (viewNode, renNode, forwardPass) => {\n    if (model.deleted) {\n      return;\n    }\n    const size = viewNode.getSize();\n    const gl = viewNode.getContext();\n\n    // if we lack the webgl2 and half floatsupport just do\n    // basic alpha blending\n    model._supported = false;\n    if (renNode.getSelector() || !gl || !viewNode.getWebgl2() || !gl.getExtension('EXT_color_buffer_half_float') && !gl.getExtension('EXT_color_buffer_float')) {\n      publicAPI.setCurrentOperation('translucentPass');\n      renNode.traverse(publicAPI);\n      return;\n    }\n    model._supported = true;\n\n    // prepare framebuffer // allocate framebuffer if needed and bind it\n    if (model.framebuffer === null) {\n      publicAPI.createFramebuffer(viewNode);\n    } else {\n      const fbSize = model.framebuffer.getSize();\n      if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.releaseGraphicsResources();\n        model.translucentRGBATexture.releaseGraphicsResources(viewNode);\n        model.translucentRTexture.releaseGraphicsResources(viewNode);\n        model.translucentZTexture.releaseGraphicsResources(viewNode);\n        publicAPI.createFramebuffer(viewNode);\n      } else {\n        // store framebuffer bindings to restore them later\n        model.framebuffer.saveCurrentBindingsAndBuffers();\n        model.framebuffer.bind();\n      }\n    }\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0]);\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 0.0]);\n    gl.clearBufferfv(gl.DEPTH, 0, [1.0]);\n    gl.colorMask(false, false, false, false);\n\n    // rerender the opaque pass to set the depth buffer\n    // TODO remove when webgl1 is deprecated and instead\n    // have the forward pass use a texture backed zbuffer\n    if (forwardPass.getOpaqueActorCount() > 0) {\n      // Don't use zBufferPass as it will also render the depth of translucent actors\n      forwardPass.setCurrentOperation('opaqueZBufferPass');\n      renNode.traverse(forwardPass);\n    }\n    gl.colorMask(true, true, true, true);\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1]);\n\n    // make sure to clear the entire framebuffer as we will\n    // be blitting the entire thing all of it needs good initial values\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.scissor(0, 0, size[0], size[1]);\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n    gl.clearBufferfv(gl.COLOR, 1, [0.0, 0.0, 0.0, 0.0]);\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n\n    // basic gist is we accumulate color into RGB We compute final opacity\n    // into A We store accumulated opacity into R of the R texture.\n    gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ZERO, gl.ONE_MINUS_SRC_ALPHA);\n\n    // now do the translucent rendering\n    publicAPI.setCurrentOperation('translucentPass');\n    renNode.traverse(publicAPI);\n    gl.drawBuffers([gl.NONE]);\n    model.framebuffer.restorePreviousBindingsAndBuffers();\n    // gl.drawBuffers([gl.BACK]);\n\n    // make sure the copy shader is ready\n    if (model.copyShader === null) {\n      publicAPI.createCopyShader(viewNode);\n    } else {\n      viewNode.getShaderCache().readyShaderProgram(model.copyShader);\n    }\n\n    // make sure we have a VAO\n    if (!model.copyVAO) {\n      model.copyVAO = vtkVertexArrayObject.newInstance();\n      model.copyVAO.setOpenGLRenderWindow(viewNode);\n    }\n    model.copyVAO.bind();\n\n    // make sure the VBO is up to date\n    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime()) {\n      publicAPI.createVBO(viewNode);\n    }\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.depthMask(false);\n    gl.depthFunc(gl.ALWAYS);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.scissor(0, 0, size[0], size[1]);\n\n    // activate texture\n    model.translucentRGBATexture.activate();\n    model.copyShader.setUniformi('translucentRGBATexture', model.translucentRGBATexture.getTextureUnit());\n    model.translucentRTexture.activate();\n    model.copyShader.setUniformi('translucentRTexture', model.translucentRTexture.getTextureUnit());\n\n    // render quad\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n    gl.depthMask(true);\n    gl.depthFunc(gl.LEQUAL);\n    model.translucentRGBATexture.deactivate();\n    model.translucentRTexture.deactivate();\n\n    // restore scissor + viewport from renderer\n    const ts = renNode.getTiledSizeAndOrigin();\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n  };\n  publicAPI.getShaderReplacement = () => {\n    if (model._supported) {\n      return translucentShaderReplacement;\n    }\n    return null;\n  };\n  publicAPI.releaseGraphicsResources = viewNode => {\n    if (model.framebuffer) {\n      model.framebuffer.releaseGraphicsResources(viewNode);\n      model.framebuffer = null;\n    }\n    if (model.translucentRGBATexture) {\n      model.translucentRGBATexture.releaseGraphicsResources(viewNode);\n      model.translucentRGBATexture = null;\n    }\n    if (model.translucentRTexture) {\n      model.translucentRTexture.releaseGraphicsResources(viewNode);\n      model.translucentRTexture = null;\n    }\n    if (model.translucentZTexture) {\n      model.translucentZTexture.releaseGraphicsResources(viewNode);\n      model.translucentZTexture = null;\n    }\n    if (model.copyVAO) {\n      model.copyVAO.releaseGraphicsResources(viewNode);\n      model.copyVAO = null;\n    }\n    if (model.copyShader) {\n      model.copyShader.releaseGraphicsResources(viewNode);\n      model.copyShader = null;\n    }\n    if (model.tris) {\n      model.tris.releaseGraphicsResources(viewNode);\n      model.tris = null;\n    }\n    publicAPI.modified();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  framebuffer: null,\n  copyShader: null,\n  tris: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  model.VBOBuildTime = {};\n  macro.obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n  model.tris = vtkHelper.newInstance();\n  macro.get(publicAPI, model, ['framebuffer']);\n\n  // Object methods\n  vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLOrderIndependentTranslucentPass');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOpenGLOrderIndependentTranslucentPass$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkOpenGLOrderIndependentTranslucentPass$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkOpenGLOrderIndependentTranslucentPass from './OrderIndependentTranslucentPass.js';\n\n// ----------------------------------------------------------------------------\n\nfunction vtkForwardPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkForwardPass');\n\n  // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n  publicAPI.traverse = function (viewNode) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (model.deleted) {\n      return;\n    }\n\n    // we just render our delegates in order\n    model._currentParent = parent;\n\n    // build\n    publicAPI.setCurrentOperation('buildPass');\n    viewNode.traverse(publicAPI);\n    const numlayers = viewNode.getRenderable().getNumberOfLayers();\n\n    // iterate over renderers\n    const renderers = viewNode.getRenderable().getRenderersByReference();\n    for (let i = 0; i < numlayers; i++) {\n      for (let index = 0; index < renderers.length; index++) {\n        const ren = renderers[index];\n        const renNode = viewNode.getViewNodeFor(ren);\n        if (ren.getDraw() && ren.getLayer() === i) {\n          // check for both opaque and volume actors\n          model.opaqueActorCount = 0;\n          model.translucentActorCount = 0;\n          model.volumeCount = 0;\n          model.overlayActorCount = 0;\n          publicAPI.setCurrentOperation('queryPass');\n          renNode.traverse(publicAPI);\n\n          // do we need to capture a zbuffer?\n          if ((model.opaqueActorCount > 0 || model.translucentActorCount > 0) && model.volumeCount > 0 || model.depthRequested) {\n            const size = viewNode.getFramebufferSize();\n            // make sure the framebuffer is setup\n            if (model.framebuffer === null) {\n              model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n            }\n            model.framebuffer.setOpenGLRenderWindow(viewNode);\n            model.framebuffer.saveCurrentBindingsAndBuffers();\n            const fbSize = model.framebuffer.getSize();\n            if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n              model.framebuffer.create(size[0], size[1]);\n              model.framebuffer.populateFramebuffer();\n            }\n            model.framebuffer.bind();\n            // opaqueZBufferPass only renders opaque actors\n            // zBufferPass renders both translucent and opaque actors\n            // we want to be able to pick translucent actors\n            publicAPI.setCurrentOperation('zBufferPass');\n            renNode.traverse(publicAPI);\n            model.framebuffer.restorePreviousBindingsAndBuffers();\n\n            // reset now that we have done it\n            model.depthRequested = false;\n          }\n          publicAPI.setCurrentOperation('cameraPass');\n          renNode.traverse(publicAPI);\n          if (model.opaqueActorCount > 0) {\n            publicAPI.setCurrentOperation('opaquePass');\n            renNode.traverse(publicAPI);\n          }\n          if (model.translucentActorCount > 0) {\n            if (!model.translucentPass) {\n              model.translucentPass = vtkOpenGLOrderIndependentTranslucentPass.newInstance();\n            }\n            model.translucentPass.traverse(viewNode, renNode, publicAPI);\n          }\n          if (model.volumeCount > 0) {\n            publicAPI.setCurrentOperation('volumePass');\n            renNode.traverse(publicAPI);\n          }\n          if (model.overlayActorCount > 0) {\n            publicAPI.setCurrentOperation('overlayPass');\n            renNode.traverse(publicAPI);\n          }\n        }\n      }\n    }\n  };\n  publicAPI.getZBufferTexture = () => {\n    if (model.framebuffer) {\n      return model.framebuffer.getColorTexture();\n    }\n    return null;\n  };\n  publicAPI.requestDepth = () => {\n    model.depthRequested = true;\n  };\n  publicAPI.incrementOpaqueActorCount = () => model.opaqueActorCount++;\n  publicAPI.incrementTranslucentActorCount = () => model.translucentActorCount++;\n  publicAPI.incrementVolumeCount = () => model.volumeCount++;\n  publicAPI.incrementOverlayActorCount = () => model.overlayActorCount++;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  opaqueActorCount: 0,\n  translucentActorCount: 0,\n  volumeCount: 0,\n  overlayActorCount: 0,\n  framebuffer: null,\n  depthRequested: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['framebuffer', 'opaqueActorCount', 'translucentActorCount', 'volumeCount']);\n\n  // Object methods\n  vtkForwardPass(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkForwardPass');\n\n// ----------------------------------------------------------------------------\n\nvar vtkForwardPass$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkForwardPass$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nconst {\n  FieldAssociations\n} = vtkDataSet;\n\n// ----------------------------------------------------------------------------\n// vtkHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkHardwareSelector(publicAPI, model) {\n  model.classHierarchy.push('vtkHardwareSelector');\n\n  // get the source data that is used for generating a selection. This\n  // must be called at least once before calling generateSelection. In\n  // raster based backends this method will capture the buffers. You can\n  // call this once and then make multiple calls to generateSelection.\n  publicAPI.getSourceDataAsync = async (renderer, fx1, fy1, fx2, fy2) => {};\n  publicAPI.selectAsync = async (renderer, fx1, fy1, fx2, fy2) => {\n    const srcData = await publicAPI.getSourceDataAsync(renderer, fx1, fy1, fx2, fy2);\n    if (srcData) {\n      return srcData.generateSelection(fx1, fy1, fx2, fy2);\n    }\n    return [];\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,\n  captureZValues: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['fieldAssociation', 'captureZValues']);\n\n  // Object methods\n  vtkHardwareSelector(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkHardwareSelector');\n\n// ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkHardwareSelector$1 as default, extend, newInstance };\n", "/**\n * The (primary) property that describes the content of a selection\n * node's data. Other auxiliary description properties follow.\n * GLOBALIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * PEDIGREEIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * VALUES means the the selection list contains values from an\n * arbitrary attribute array (ignores any globalids attribute)\n * INDICES means that the selection list contains indexes into the\n * cell or point arrays.\n * FRUSTUM means the set of points and cells inside a frustum\n * LOCATIONS means the set of points and cells near a set of positions\n * THRESHOLDS means the points and cells with values within a set of ranges\n * getContentType() returns -1 if the content type is not set.\n */\n\n// Specify how data arrays can be used by data objects\nconst SelectionContent = {\n  GLOBALIDS: 0,\n  PEDIGREEIDS: 1,\n  VALUES: 2,\n  INDICES: 3,\n  FRUSTUM: 4,\n  LOCATIONS: 5,\n  THRESHOLDS: 6,\n  BLOCKS: 7,\n  QUERY: 8\n};\nconst SelectionField = {\n  CELL: 0,\n  POINT: 1,\n  FIELD: 2,\n  VERTEX: 3,\n  EDGE: 4,\n  ROW: 5\n};\nvar Constants = {\n  SelectionContent,\n  SelectionField\n};\n\nexport { SelectionContent, SelectionField, Constants as default };\n", "import { m as macro } from '../../macros2.js';\nimport Constants from './SelectionNode/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkSelectionNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSelectionNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSelectionNode');\n  publicAPI.getBounds = () => model.points.getBounds();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  contentType: -1,\n  fieldType: -1,\n  properties: null,\n  selectionList: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  model.properties = {};\n  macro.setGet(publicAPI, model, ['contentType', 'fieldType', 'properties', 'selectionList']);\n\n  // Object specific methods\n  vtkSelectionNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkSelectionNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkSelectionNode$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkSelectionNode$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport Constants from './HardwareSelector/Constants.js';\nimport vtkHardwareSelector$1 from '../Core/HardwareSelector.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkSelectionNode from '../../Common/DataModel/SelectionNode.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nconst {\n  PassTypes\n} = Constants;\nconst {\n  SelectionContent,\n  SelectionField\n} = vtkSelectionNode;\nconst {\n  FieldAssociations\n} = vtkDataSet;\nconst {\n  vtkErrorMacro\n} = macro;\nconst idOffset = 1;\nfunction getInfoHash(info) {\n  return `${info.propID} ${info.compositeID}`;\n}\nfunction getAlpha(xx, yy, pb, area) {\n  if (!pb) {\n    return 0;\n  }\n  const offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\n  return pb[offset + 3];\n}\nfunction convert(xx, yy, pb, area) {\n  if (!pb) {\n    return 0;\n  }\n  const offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\n  const r = pb[offset];\n  const g = pb[offset + 1];\n  const b = pb[offset + 2];\n  return (b * 256 + g) * 256 + r;\n}\nfunction getID(low24, high8) {\n  /* eslint-disable no-bitwise */\n  let val = high8;\n  val <<= 24;\n  val |= low24;\n  return val;\n  /* eslint-enable no-bitwise */\n}\n\nfunction getPixelInformationWithData(buffdata, inDisplayPosition, maxDistance, outSelectedPosition) {\n  // Base case\n  const maxDist = maxDistance < 0 ? 0 : maxDistance;\n  if (maxDist === 0) {\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n    if (inDisplayPosition[0] < buffdata.area[0] || inDisplayPosition[0] > buffdata.area[2] || inDisplayPosition[1] < buffdata.area[1] || inDisplayPosition[1] > buffdata.area[3]) {\n      return null;\n    }\n\n    // offset inDisplayPosition based on the lower-left-corner of the Area.\n    const displayPosition = [inDisplayPosition[0] - buffdata.area[0], inDisplayPosition[1] - buffdata.area[1]];\n    const actorid = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ACTOR_PASS], buffdata.area);\n    if (actorid <= 0 || actorid - idOffset >= buffdata.props.length) {\n      // the pixel did not hit any actor.\n      return null;\n    }\n    const info = {};\n    info.valid = true;\n    info.propID = actorid - idOffset;\n    info.prop = buffdata.props[info.propID];\n    let compositeID = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], buffdata.area);\n    if (compositeID < 0 || compositeID > 0xffffff) {\n      compositeID = 0;\n    }\n    info.compositeID = compositeID - idOffset;\n    if (buffdata.captureZValues) {\n      const offset = (displayPosition[1] * (buffdata.area[2] - buffdata.area[0] + 1) + displayPosition[0]) * 4;\n      info.zValue = (256 * buffdata.zBuffer[offset] + buffdata.zBuffer[offset + 1]) / 65535.0;\n      info.displayPosition = inDisplayPosition;\n    }\n    if (buffdata.pixBuffer[PassTypes.ID_LOW24]) {\n      if (getAlpha(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_LOW24], buffdata.area) === 0.0) {\n        return info;\n      }\n    }\n    const low24 = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_LOW24], buffdata.area);\n    const high24 = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_HIGH24], buffdata.area);\n    info.attributeID = getID(low24, high24);\n    return info;\n  }\n\n  // Iterate over successively growing boxes.\n  // They recursively call the base case to handle single pixels.\n  const dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n  const curPos = [0, 0];\n  let info = getPixelInformationWithData(buffdata, inDisplayPosition, 0, outSelectedPosition);\n  if (info && info.valid) {\n    return info;\n  }\n  for (let dist = 1; dist < maxDist; ++dist) {\n    // Vertical sides of box.\n    for (let y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n      curPos[1] = y;\n      if (dispPos[0] >= dist) {\n        curPos[0] = dispPos[0] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n      curPos[0] = dispPos[0] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n      if (info && info.valid) {\n        return info;\n      }\n    }\n    // Horizontal sides of box.\n    for (let x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n      curPos[0] = x;\n      if (dispPos[1] >= dist) {\n        curPos[1] = dispPos[1] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n      curPos[1] = dispPos[1] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n      if (info && info.valid) {\n        return info;\n      }\n    }\n  }\n\n  // nothing hit.\n  outSelectedPosition[0] = inDisplayPosition[0];\n  outSelectedPosition[1] = inDisplayPosition[1];\n  return null;\n}\n\n//-----------------------------------------------------------------------------\nfunction convertSelection(fieldassociation, dataMap, captureZValues, renderer, openGLRenderWindow) {\n  const sel = [];\n  let count = 0;\n  dataMap.forEach((value, key) => {\n    const child = vtkSelectionNode.newInstance();\n    child.setContentType(SelectionContent.INDICES);\n    switch (fieldassociation) {\n      case FieldAssociations.FIELD_ASSOCIATION_CELLS:\n        child.setFieldType(SelectionField.CELL);\n        break;\n      case FieldAssociations.FIELD_ASSOCIATION_POINTS:\n        child.setFieldType(SelectionField.POINT);\n        break;\n      default:\n        vtkErrorMacro('Unknown field association');\n    }\n    child.getProperties().propID = value.info.propID;\n    child.getProperties().prop = value.info.prop;\n    child.getProperties().compositeID = value.info.compositeID;\n    child.getProperties().attributeID = value.info.attributeID;\n    child.getProperties().pixelCount = value.pixelCount;\n    if (captureZValues) {\n      child.getProperties().displayPosition = [value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue];\n      child.getProperties().worldPosition = openGLRenderWindow.displayToWorld(value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue, renderer);\n    }\n    child.setSelectionList(value.attributeIDs);\n    sel[count] = child;\n    count++;\n  });\n  return sel;\n}\n\n//----------------------------------------------------------------------------\nfunction generateSelectionWithData(buffdata, fx1, fy1, fx2, fy2) {\n  const x1 = Math.floor(fx1);\n  const y1 = Math.floor(fy1);\n  const x2 = Math.floor(fx2);\n  const y2 = Math.floor(fy2);\n  const dataMap = new Map();\n  const outSelectedPosition = [0, 0];\n  for (let yy = y1; yy <= y2; yy++) {\n    for (let xx = x1; xx <= x2; xx++) {\n      const pos = [xx, yy];\n      const info = getPixelInformationWithData(buffdata, pos, 0, outSelectedPosition);\n      if (info && info.valid) {\n        const hash = getInfoHash(info);\n        if (!dataMap.has(hash)) {\n          dataMap.set(hash, {\n            info,\n            pixelCount: 1,\n            attributeIDs: [info.attributeID]\n          });\n        } else {\n          const dmv = dataMap.get(hash);\n          dmv.pixelCount++;\n          if (buffdata.captureZValues) {\n            if (info.zValue < dmv.info.zValue) {\n              dmv.info = info;\n            }\n          }\n          if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n            dmv.attributeIDs.push(info.attributeID);\n          }\n        }\n      }\n    }\n  }\n  return convertSelection(buffdata.fieldAssociation, dataMap, buffdata.captureZValues, buffdata.renderer, buffdata.openGLRenderWindow);\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLHardwareSelector(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHardwareSelector');\n\n  //----------------------------------------------------------------------------\n  publicAPI.releasePixBuffers = () => {\n    model.rawPixBuffer = [];\n    model.pixBuffer = [];\n    model.zBuffer = null;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.beginSelection = () => {\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model._renderer);\n    model.maxAttributeId = 0;\n    const size = model._openGLRenderWindow.getSize();\n    if (!model.framebuffer) {\n      model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      model.framebuffer.create(size[0], size[1]);\n      // this calls model.framebuffer.bind()\n      model.framebuffer.populateFramebuffer();\n    } else {\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      const fbSize = model.framebuffer.getSize();\n      if (!fbSize || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.create(size[0], size[1]);\n        // this calls model.framebuffer.bind()\n        model.framebuffer.populateFramebuffer();\n      } else {\n        model.framebuffer.bind();\n      }\n    }\n    model._openGLRenderer.clear();\n    model._openGLRenderer.setSelector(publicAPI);\n    model.hitProps = {};\n    model.propPixels = {};\n    model.props = [];\n    publicAPI.releasePixBuffers();\n    if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n      const gl = model._openGLRenderWindow.getContext();\n      const originalBlending = gl.isEnabled(gl.BLEND);\n      gl.disable(gl.BLEND);\n      model._openGLRenderWindow.traverseAllPasses();\n      if (originalBlending) {\n        gl.enable(gl.BLEND);\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.endSelection = () => {\n    model.hitProps = {};\n    model._openGLRenderer.setSelector(null);\n    model.framebuffer.restorePreviousBindingsAndBuffers();\n  };\n  publicAPI.preCapturePass = () => {\n    const gl = model._openGLRenderWindow.getContext();\n    // Disable blending\n    model.originalBlending = gl.isEnabled(gl.BLEND);\n    gl.disable(gl.BLEND);\n  };\n  publicAPI.postCapturePass = () => {\n    const gl = model._openGLRenderWindow.getContext();\n    // Restore blending if it was enabled prior to the capture\n    if (model.originalBlending) {\n      gl.enable(gl.BLEND);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.select = () => {\n    let sel = null;\n    if (publicAPI.captureBuffers()) {\n      sel = publicAPI.generateSelection(model.area[0], model.area[1], model.area[2], model.area[3]);\n      publicAPI.releasePixBuffers();\n    }\n    return sel;\n  };\n  publicAPI.getSourceDataAsync = async (renderer, fx1, fy1, fx2, fy2) => {\n    // assign the renderer\n    model._renderer = renderer;\n\n    // set area to all if no arguments provided\n    if (fx1 === undefined) {\n      const size = model._openGLRenderWindow.getSize();\n      publicAPI.setArea(0, 0, size[0] - 1, size[1] - 1);\n    } else {\n      publicAPI.setArea(fx1, fy1, fx2, fy2);\n    }\n    // just do capture buffers and package up the result\n    if (!publicAPI.captureBuffers()) {\n      return false;\n    }\n    const result = {\n      area: [...model.area],\n      pixBuffer: [...model.pixBuffer],\n      captureZValues: model.captureZValues,\n      zBuffer: model.zBuffer,\n      props: [...model.props],\n      fieldAssociation: model.fieldAssociation,\n      renderer,\n      openGLRenderWindow: model._openGLRenderWindow\n    };\n    result.generateSelection = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return generateSelectionWithData(result, ...args);\n    };\n    return result;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.captureBuffers = () => {\n    if (!model._renderer || !model._openGLRenderWindow) {\n      vtkErrorMacro('Renderer and view must be set before calling Select.');\n      return false;\n    }\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model._renderer);\n\n    // todo revisit making selection part of core\n    // then we can do this in core\n    model._openGLRenderWindow.getRenderable().preRender();\n\n    // int rgba[4];\n    // rwin.getColorBufferSizes(rgba);\n    // if (rgba[0] < 8 || rgba[1] < 8 || rgba[2] < 8) {\n    //   vtkErrorMacro(\"Color buffer depth must be at least 8 bit. \"\n    //     \"Currently: \" << rgba[0] << \", \" << rgba[1] << \", \" <<rgba[2]);\n    //   return false;\n    // }\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    });\n\n    // Initialize renderer for selection.\n    // change the renderer's background to black, which will indicate a miss\n    model.originalBackground = model._renderer.getBackgroundByReference();\n    model._renderer.setBackground(0.0, 0.0, 0.0, 0.0);\n    const rpasses = model._openGLRenderWindow.getRenderPasses();\n    publicAPI.beginSelection();\n    const pixelBufferSavedPasses = [];\n    for (model.currentPass = PassTypes.MIN_KNOWN_PASS; model.currentPass <= PassTypes.MAX_KNOWN_PASS; model.currentPass++) {\n      if (publicAPI.passRequired(model.currentPass)) {\n        publicAPI.preCapturePass(model.currentPass);\n        if (model.captureZValues && model.currentPass === PassTypes.ACTOR_PASS && typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\n          rpasses[0].requestDepth();\n          model._openGLRenderWindow.traverseAllPasses();\n        } else {\n          model._openGLRenderWindow.traverseAllPasses();\n        }\n        publicAPI.postCapturePass(model.currentPass);\n        publicAPI.savePixelBuffer(model.currentPass);\n        pixelBufferSavedPasses.push(model.currentPass);\n      }\n    }\n\n    // Process pixel buffers\n    pixelBufferSavedPasses.forEach(pass => {\n      model.currentPass = pass;\n      publicAPI.processPixelBuffers();\n    });\n    model.currentPass = PassTypes.MAX_KNOWN_PASS;\n    publicAPI.endSelection();\n\n    // restore original background\n    model._renderer.setBackground(model.originalBackground);\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    });\n\n    // restore image, not needed?\n    // model._openGLRenderWindow.traverseAllPasses();\n    return true;\n  };\n  publicAPI.processPixelBuffers = () => {\n    model.props.forEach((prop, index) => {\n      if (publicAPI.isPropHit(index)) {\n        prop.processSelectorPixelBuffers(publicAPI, model.propPixels[index]);\n      }\n    });\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.passRequired = pass => {\n    if (pass === PassTypes.ID_HIGH24) {\n      if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n        return model.maximumPointId > 0x00ffffff;\n      }\n      if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_CELLS) {\n        return model.maximumCellId > 0x00ffffff;\n      }\n    }\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.savePixelBuffer = passNo => {\n    model.pixBuffer[passNo] = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\n    if (!model.rawPixBuffer[passNo]) {\n      const size = (model.area[2] - model.area[0] + 1) * (model.area[3] - model.area[1] + 1) * 4;\n      model.rawPixBuffer[passNo] = new Uint8Array(size);\n      model.rawPixBuffer[passNo].set(model.pixBuffer[passNo]);\n    }\n    if (passNo === PassTypes.ACTOR_PASS) {\n      if (model.captureZValues) {\n        const rpasses = model._openGLRenderWindow.getRenderPasses();\n        if (typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\n          const fb = rpasses[0].getFramebuffer();\n          fb.saveCurrentBindingsAndBuffers();\n          fb.bind();\n          model.zBuffer = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\n          fb.restorePreviousBindingsAndBuffers();\n        }\n      }\n      publicAPI.buildPropHitList(model.rawPixBuffer[passNo]);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildPropHitList = pixelbuffer => {\n    let offset = 0;\n    for (let yy = 0; yy <= model.area[3] - model.area[1]; yy++) {\n      for (let xx = 0; xx <= model.area[2] - model.area[0]; xx++) {\n        let val = convert(xx, yy, pixelbuffer, model.area);\n        if (val > 0) {\n          val--;\n          if (!(val in model.hitProps)) {\n            model.hitProps[val] = true;\n            model.propPixels[val] = [];\n          }\n          model.propPixels[val].push(offset * 4);\n        }\n        ++offset;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.renderProp = prop => {\n    if (model.currentPass === PassTypes.ACTOR_PASS) {\n      publicAPI.setPropColorValueFromInt(model.props.length + idOffset);\n      model.props.push(prop);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.renderCompositeIndex = index => {\n    if (model.currentPass === PassTypes.COMPOSITE_INDEX_PASS) {\n      publicAPI.setPropColorValueFromInt(index + idOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // TODO: make inline\n  publicAPI.renderAttributeId = attribid => {\n    if (attribid < 0) {\n      // negative attribid is valid. It happens when rendering higher order\n      // elements where new points are added for rendering smooth surfaces.\n      return;\n    }\n    model.maxAttributeId = attribid > model.maxAttributeId ? attribid : model.maxAttributeId;\n\n    // if (model.currentPass < PassTypes.ID_LOW24) {\n    //   return; // useless...\n    // }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.passTypeToString = type => macro.enumToString(PassTypes, type);\n\n  //----------------------------------------------------------------------------\n  publicAPI.isPropHit = id => Boolean(model.hitProps[id]);\n  publicAPI.setPropColorValueFromInt = val => {\n    model.propColorValue[0] = val % 256 / 255.0;\n    model.propColorValue[1] = Math.floor(val / 256) % 256 / 255.0;\n    model.propColorValue[2] = Math.floor(val / 65536) % 256 / 255.0;\n  };\n\n  // info has\n  //   valid\n  //   propId\n  //   prop\n  //   compositeID\n  //   attributeID\n\n  //----------------------------------------------------------------------------\n  publicAPI.getPixelInformation = (inDisplayPosition, maxDistance, outSelectedPosition) => {\n    // Base case\n    const maxDist = maxDistance < 0 ? 0 : maxDistance;\n    if (maxDist === 0) {\n      outSelectedPosition[0] = inDisplayPosition[0];\n      outSelectedPosition[1] = inDisplayPosition[1];\n      if (inDisplayPosition[0] < model.area[0] || inDisplayPosition[0] > model.area[2] || inDisplayPosition[1] < model.area[1] || inDisplayPosition[1] > model.area[3]) {\n        return null;\n      }\n\n      // offset inDisplayPosition based on the lower-left-corner of the Area.\n      const displayPosition = [inDisplayPosition[0] - model.area[0], inDisplayPosition[1] - model.area[1]];\n      const actorid = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ACTOR_PASS], model.area);\n      if (actorid <= 0 || actorid - idOffset >= model.props.length) {\n        // the pixel did not hit any actor.\n        return null;\n      }\n      const info = {};\n      info.valid = true;\n      info.propID = actorid - idOffset;\n      info.prop = model.props[info.propID];\n      let compositeID = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], model.area);\n      if (compositeID < 0 || compositeID > 0xffffff) {\n        compositeID = 0;\n      }\n      info.compositeID = compositeID - idOffset;\n      if (model.captureZValues) {\n        const offset = (displayPosition[1] * (model.area[2] - model.area[0] + 1) + displayPosition[0]) * 4;\n        info.zValue = (256 * model.zBuffer[offset] + model.zBuffer[offset + 1]) / 65535.0;\n        info.displayPosition = inDisplayPosition;\n      }\n\n      // Skip attribute ids if alpha is zero (missed)\n      if (model.pixBuffer[PassTypes.ID_LOW24]) {\n        if (getAlpha(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24], model.area) === 0.0) {\n          return info;\n        }\n      }\n      const low24 = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24], model.area);\n      const high24 = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_HIGH24], model.area);\n      info.attributeID = getID(low24, high24);\n      return info;\n    }\n\n    // Iterate over successively growing boxes.\n    // They recursively call the base case to handle single pixels.\n    const dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n    const curPos = [0, 0];\n    let info = publicAPI.getPixelInformation(inDisplayPosition, 0, outSelectedPosition);\n    if (info && info.valid) {\n      return info;\n    }\n    for (let dist = 1; dist < maxDist; ++dist) {\n      // Vertical sides of box.\n      for (let y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n        curPos[1] = y;\n        if (dispPos[0] >= dist) {\n          curPos[0] = dispPos[0] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n          if (info && info.valid) {\n            return info;\n          }\n        }\n        curPos[0] = dispPos[0] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n      // Horizontal sides of box.\n      for (let x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n        curPos[0] = x;\n        if (dispPos[1] >= dist) {\n          curPos[1] = dispPos[1] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n          if (info && info.valid) {\n            return info;\n          }\n        }\n        curPos[1] = dispPos[1] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          return info;\n        }\n      }\n    }\n\n    // nothing hit.\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n    return null;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.generateSelection = (fx1, fy1, fx2, fy2) => {\n    const x1 = Math.floor(fx1);\n    const y1 = Math.floor(fy1);\n    const x2 = Math.floor(fx2);\n    const y2 = Math.floor(fy2);\n    const dataMap = new Map();\n    const outSelectedPosition = [0, 0];\n    for (let yy = y1; yy <= y2; yy++) {\n      for (let xx = x1; xx <= x2; xx++) {\n        const pos = [xx, yy];\n        const info = publicAPI.getPixelInformation(pos, 0, outSelectedPosition);\n        if (info && info.valid) {\n          const hash = getInfoHash(info);\n          if (!dataMap.has(hash)) {\n            dataMap.set(hash, {\n              info,\n              pixelCount: 1,\n              attributeIDs: [info.attributeID]\n            });\n          } else {\n            const dmv = dataMap.get(hash);\n            dmv.pixelCount++;\n            if (model.captureZValues) {\n              if (info.zValue < dmv.info.zValue) {\n                dmv.info = info;\n              }\n            }\n            if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n              dmv.attributeIDs.push(info.attributeID);\n            }\n          }\n        }\n      }\n    }\n    return convertSelection(model.fieldAssociation, dataMap, model.captureZValues, model._renderer, model._openGLRenderWindow);\n  };\n  publicAPI.getRawPixelBuffer = passNo => model.rawPixBuffer[passNo];\n  publicAPI.getPixelBuffer = passNo => model.pixBuffer[passNo];\n\n  //----------------------------------------------------------------------------\n\n  publicAPI.attach = (openGLRenderWindow, renderer) => {\n    model._openGLRenderWindow = openGLRenderWindow;\n    model._renderer = renderer;\n  };\n\n  // override\n  const superSetArea = publicAPI.setArea;\n  publicAPI.setArea = function () {\n    if (superSetArea(...arguments)) {\n      model.area[0] = Math.floor(model.area[0]);\n      model.area[1] = Math.floor(model.area[1]);\n      model.area[2] = Math.floor(model.area[2]);\n      model.area[3] = Math.floor(model.area[3]);\n      return true;\n    }\n    return false;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  area: undefined,\n  // _renderer: null,\n  // _openGLRenderWindow: null,\n  // _openGLRenderer: null,\n  currentPass: -1,\n  propColorValue: null,\n  props: null,\n  maximumPointId: 0,\n  maximumCellId: 0,\n  idOffset: 1\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkHardwareSelector$1.extend(publicAPI, model, initialValues);\n  model.propColorValue = [0, 0, 0];\n  model.props = [];\n  if (!model.area) {\n    model.area = [0, 0, 0, 0];\n  }\n  macro.setGetArray(publicAPI, model, ['area'], 4);\n  macro.setGet(publicAPI, model, ['_renderer', 'currentPass', '_openGLRenderWindow', 'maximumPointId', 'maximumCellId']);\n  macro.setGetArray(publicAPI, model, ['propColorValue'], 3);\n  macro.moveToProtected(publicAPI, model, ['renderer', 'openGLRenderWindow']);\n  macro.event(publicAPI, model, 'event');\n\n  // Object methods\n  vtkOpenGLHardwareSelector(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLHardwareSelector');\n\n// ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkHardwareSelector as default, extend, newInstance };\n", "import Md5 from 'spark-md5';\nimport { m as macro } from '../../macros2.js';\nimport vtkShaderProgram from './ShaderProgram.js';\n\n// ----------------------------------------------------------------------------\n\nconst SET_GET_FIELDS = ['lastShaderProgramBound', 'context', '_openGLRenderWindow'];\n\n// ----------------------------------------------------------------------------\n// vtkShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderCache');\n  publicAPI.replaceShaderValues = (VSSource, FSSource, GSSource) => {\n    // first handle renaming any Fragment shader inputs\n    // if we have a geometry shader. By default fragment shaders\n    // assume their inputs come from a Vertex Shader. When we\n    // have a Geometry shader we rename the frament shader inputs\n    // to come from the geometry shader\n\n    let nFSSource = FSSource;\n    if (GSSource.length > 0) {\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'VSOut', 'GSOut').result;\n    }\n    const gl2 = model._openGLRenderWindow.getWebgl2();\n    let fragDepthString = '\\n';\n    let version = '#version 100\\n';\n    if (gl2) {\n      version = '#version 300 es\\n' + '#define attribute in\\n' + '#define textureCube texture\\n' + '#define texture2D texture\\n' + '#define textureCubeLod textureLod\\n' + '#define texture2DLod textureLod\\n';\n    } else {\n      model.context.getExtension('OES_standard_derivatives');\n      if (model.context.getExtension('EXT_frag_depth')) {\n        fragDepthString = '#extension GL_EXT_frag_depth : enable\\n';\n      }\n      if (model.context.getExtension('EXT_shader_texture_lod')) {\n        fragDepthString += '#extension GL_EXT_shader_texture_lod : enable\\n' + '#define textureCubeLod textureCubeLodEXT\\n' + '#define texture2DLod texture2DLodEXT';\n      }\n    }\n    nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::System::Dec', [`${version}\\n`, gl2 ? '' : '#extension GL_OES_standard_derivatives : enable\\n', fragDepthString, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\n    let nVSSource = vtkShaderProgram.substitute(VSSource, '//VTK::System::Dec', [`${version}\\n`, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\n    if (gl2) {\n      nVSSource = vtkShaderProgram.substitute(nVSSource, 'varying', 'out').result;\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'varying', 'in').result;\n      let shaderOutputs = '';\n      let outputCount = 0;\n      while (nFSSource.includes(`gl_FragData[${outputCount}]`)) {\n        nFSSource = vtkShaderProgram.substitute(nFSSource, `gl_FragData\\\\[${outputCount}\\\\]`, `fragOutput${outputCount}`).result;\n        shaderOutputs += `layout(location = ${outputCount}) out vec4 fragOutput${outputCount};\\n`;\n        outputCount++;\n      }\n      nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::Output::Dec', shaderOutputs).result;\n    }\n\n    // nFSSource = ShaderProgram.substitute(nFSSource, 'gl_FragData\\\\[0\\\\]',\n    //   'gl_FragColor').result;\n\n    const nGSSource = vtkShaderProgram.substitute(GSSource, '//VTK::System::Dec', version).result;\n    return {\n      VSSource: nVSSource,\n      FSSource: nFSSource,\n      GSSource: nGSSource\n    };\n  };\n\n  // return NULL if there is an issue\n  publicAPI.readyShaderProgramArray = (vertexCode, fragmentCode, geometryCode) => {\n    const data = publicAPI.replaceShaderValues(vertexCode, fragmentCode, geometryCode);\n    const shaderProgram = publicAPI.getShaderProgram(data.VSSource, data.FSSource, data.GSSource);\n    return publicAPI.readyShaderProgram(shaderProgram);\n  };\n  publicAPI.readyShaderProgram = program => {\n    if (!program) {\n      return null;\n    }\n\n    // compile if needed\n    if (!program.getCompiled() && !program.compileShader()) {\n      return null;\n    }\n\n    // bind if needed\n    if (!publicAPI.bindShaderProgram(program)) {\n      return null;\n    }\n    return program;\n  };\n  publicAPI.getShaderProgram = (vertexCode, fragmentCode, geometryCode) => {\n    // compute the MD5 and the check the map\n    const hashInput = `${vertexCode}${fragmentCode}${geometryCode}`;\n    const result = Md5.hash(hashInput);\n\n    // does it already exist?\n    if (!(result in model.shaderPrograms)) {\n      // create one\n      const sps = vtkShaderProgram.newInstance();\n      sps.setContext(model.context);\n      sps.getVertexShader().setSource(vertexCode);\n      sps.getFragmentShader().setSource(fragmentCode);\n      if (geometryCode) {\n        sps.getGeometryShader().setSource(geometryCode);\n      }\n      sps.setMd5Hash(result);\n      model.shaderPrograms[result] = sps;\n      return sps;\n    }\n    return model.shaderPrograms[result];\n  };\n  publicAPI.releaseGraphicsResources = win => {\n    // NOTE:\n    // In the current implementation as of October 26th, if a shader\n    // program is created by ShaderCache then it should make sure\n    // that it releases the graphics resources used by these programs.\n    // It is not wisely for callers to do that since then they would\n    // have to loop over all the programs were in use and invoke\n    // release graphics resources individually.\n\n    publicAPI.releaseCurrentShaderProgram();\n    Object.keys(model.shaderPrograms).map(key => model.shaderPrograms[key]).forEach(sp => sp.cleanup());\n    model.shaderPrograms = {};\n  };\n  publicAPI.releaseCurrentShaderProgram = () => {\n    // release prior shader\n    if (model.lastShaderProgramBound) {\n      model.lastShaderProgramBound.cleanup();\n      model.lastShaderProgramBound = null;\n    }\n  };\n  publicAPI.bindShaderProgram = program => {\n    if (model.lastShaderProgramBound === program) {\n      return 1;\n    }\n\n    // release prior program\n    if (model.lastShaderProgramBound) {\n      model.lastShaderProgramBound.release();\n    }\n    program.bind();\n    model.lastShaderProgramBound = program;\n    return 1;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  lastShaderProgramBound: null,\n  shaderPrograms: null,\n  context: null\n  // _openGLRenderWindow: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects\n  model.shaderPrograms = {};\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, SET_GET_FIELDS);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n\n  // Object methods\n  vtkShaderCache(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkShaderCache');\n\n// ----------------------------------------------------------------------------\n\nvar vtkShaderCache$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkShaderCache$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLTextureUnitManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTextureUnitManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTextureUnitManager');\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Delete the allocation table and check if it is not called before\n  // all the texture units have been released.\n  publicAPI.deleteTable = () => {\n    for (let i = 0; i < model.numberOfTextureUnits; ++i) {\n      if (model.textureUnits[i] === true) {\n        vtkErrorMacro('some texture units  were not properly released');\n      }\n    }\n    model.textureUnits = [];\n    model.numberOfTextureUnits = 0;\n  };\n\n  // ----------------------------------------------------------------------------\n  publicAPI.setContext = ctx => {\n    if (model.context !== ctx) {\n      if (model.context !== 0) {\n        publicAPI.deleteTable();\n      }\n      model.context = ctx;\n      if (model.context) {\n        model.numberOfTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n        for (let i = 0; i < model.numberOfTextureUnits; ++i) {\n          model.textureUnits[i] = false;\n        }\n      }\n      publicAPI.modified();\n    }\n  };\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Reserve a texture unit. It returns its number.\n  // It returns -1 if the allocation failed (because there are no more\n  // texture units left).\n  // \\post valid_result: result==-1 || result>=0 && result<this->GetNumberOfTextureUnits())\n  // \\post allocated: result==-1 || this->IsAllocated(result)\n  publicAPI.allocate = () => {\n    for (let i = 0; i < model.numberOfTextureUnits; i++) {\n      if (!publicAPI.isAllocated(i)) {\n        model.textureUnits[i] = true;\n        return i;\n      }\n    }\n    return -1;\n  };\n  publicAPI.allocateUnit = unit => {\n    if (publicAPI.isAllocated(unit)) {\n      return -1;\n    }\n    model.textureUnits[unit] = true;\n    return unit;\n  };\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Tell if texture unit `textureUnitId' is already allocated.\n  // \\pre valid_id_range : textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n  publicAPI.isAllocated = textureUnitId => model.textureUnits[textureUnitId];\n\n  // ----------------------------------------------------------------------------\n  // Description:\n  // Release a texture unit.\n  // \\pre valid_id: textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n  // \\pre allocated_id: this->IsAllocated(textureUnitId)\n  publicAPI.free = val => {\n    model.textureUnits[val] = false;\n  };\n  publicAPI.freeAll = () => {\n    for (let i = 0; i < model.numberOfTextureUnits; ++i) {\n      model.textureUnits[i] = false;\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  numberOfTextureUnits: 0,\n  textureUnits: 0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  model.textureUnits = [];\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['numberOfTextureUnits']);\n  macro.setGet(publicAPI, model, ['context']);\n\n  // Object methods\n  vtkOpenGLTextureUnitManager(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLTextureUnitManager');\n\n// ----------------------------------------------------------------------------\n\nvar vtkTextureUnitManager = {\n  newInstance,\n  extend\n};\n\nexport { vtkTextureUnitManager as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkViewNode from './ViewNode.js';\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode is intended to be a superclass for all api specific\n// RenderWindows. It is intended to define a common API that can be invoked\n// upon an api specific render window and provide some common method\n// implementations. If your application requires communicating with an api specific\n// view try to limit such interactions to methods defined in this class.\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowViewNode');\n  publicAPI.getViewNodeFactory = () => null;\n  publicAPI.getAspectRatio = () => model.size[0] / model.size[1];\n  publicAPI.getAspectRatioForRenderer = renderer => {\n    const viewport = renderer.getViewportByReference();\n    return model.size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * model.size[1]);\n  };\n  publicAPI.isInViewport = (x, y, viewport) => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    if (vCoords[0] * size[0] <= x && vCoords[2] * size[0] >= x && vCoords[1] * size[1] <= y && vCoords[3] * size[1] >= y) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getViewportSize = viewport => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    return [(vCoords[2] - vCoords[0]) * size[0], (vCoords[3] - vCoords[1]) * size[1]];\n  };\n  publicAPI.getViewportCenter = viewport => {\n    const size = publicAPI.getViewportSize(viewport);\n    return [size[0] * 0.5, size[1] * 0.5];\n  };\n  publicAPI.displayToNormalizedDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x / size[0], y / size[1], z];\n  };\n  publicAPI.normalizedDisplayToDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x * size[0], y * size[1], z];\n  };\n  publicAPI.worldToView = (x, y, z, renderer) => renderer.worldToView(x, y, z);\n  publicAPI.viewToWorld = (x, y, z, renderer) => renderer.viewToWorld(x, y, z);\n  publicAPI.worldToDisplay = (x, y, z, renderer) => {\n    const val = renderer.worldToView(x, y, z);\n    const dims = publicAPI.getViewportSize(renderer);\n    const val2 = renderer.viewToProjection(val[0], val[1], val[2], dims[0] / dims[1]);\n    const val3 = renderer.projectionToNormalizedDisplay(val2[0], val2[1], val2[2]);\n    return publicAPI.normalizedDisplayToDisplay(val3[0], val3[1], val3[2]);\n  };\n  publicAPI.displayToWorld = (x, y, z, renderer) => {\n    const val = publicAPI.displayToNormalizedDisplay(x, y, z);\n    const val2 = renderer.normalizedDisplayToProjection(val[0], val[1], val[2]);\n    const dims = publicAPI.getViewportSize(renderer);\n    const val3 = renderer.projectionToView(val2[0], val2[1], val2[2], dims[0] / dims[1]);\n    return renderer.viewToWorld(val3[0], val3[1], val3[2]);\n  };\n  publicAPI.normalizedDisplayToViewport = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const coords = publicAPI.normalizedDisplayToDisplay(x, y, z);\n    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];\n  };\n  publicAPI.viewportToNormalizedViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    if (size && size[0] !== 0 && size[1] !== 0) {\n      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];\n    }\n    return [x, y, z];\n  };\n  publicAPI.normalizedViewportToViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];\n  };\n  publicAPI.displayToLocalDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x, size[1] - y - 1, z];\n  };\n  publicAPI.viewportToNormalizedDisplay = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const x2 = x + vCoords[0] + 0.5;\n    const y2 = y + vCoords[1] + 0.5;\n    return publicAPI.displayToNormalizedDisplay(x2, y2, z);\n  };\n  publicAPI.getComputedDevicePixelRatio = () => model.size[0] / publicAPI.getContainerSize()[0];\n  publicAPI.getContainerSize = () => {\n    macro.vtkErrorMacro('not implemented');\n  };\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\n    macro.vtkErrorMacro('not implemented');\n  };\n  publicAPI.createSelector = () => {\n    macro.vtkErrorMacro('not implemented');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  size: undefined,\n  selector: undefined\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  if (!model.size) {\n    model.size = [300, 300];\n  }\n  macro.getArray(publicAPI, model, ['size'], 2);\n  macro.get(publicAPI, model, ['selector']);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkRenderWindowViewNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowViewNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowViewNode$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkRenderWindowViewNode$1 as default, extend, newInstance };\n", "// This is used to access the underlying 3D context\nconst GET_UNDERLYING_CONTEXT = '__getUnderlyingContext';\nfunction createContextProxyHandler() {\n  const cache = new Map();\n  const getParameterHandler = {\n    apply(target, gl, args) {\n      if (cache.has(args[0])) {\n        return cache.get(args[0]);\n      }\n      return target.apply(gl, args);\n    }\n  };\n\n  // only supports single-value setters\n  function cachedSetterHandler(key) {\n    return {\n      apply(target, gl, args) {\n        cache.set(key, args[0]);\n        return target.apply(gl, args);\n      }\n    };\n  }\n\n  // When a property is accessed on the webgl context proxy,\n  // it's accessed is intercepted. If the property name matches\n  // any of the keys of `propHandlers`, then that handler is called\n  // with the following arguments: (gl, prop, receiver, propValue)\n  // - gl (WebGL2RenderingContext): the underlying webgl context\n  // - propName (string): the property name\n  // - receiver (Proxy): the webgl context proxy\n  // - propValue (unknown): the value of `gl[propName]`\n\n  const propHandlers = Object.create(null);\n\n  // Sets getParameter(property) as a cached getter proxy.\n  // propValue.bind(gl) is to avoid Illegal Invocation errors.\n  propHandlers.getParameter = (gl, prop, receiver, propValue) => new Proxy(propValue.bind(gl), getParameterHandler);\n\n  // Sets depthMask(flag) as a cached setter proxy.\n  propHandlers.depthMask = (gl, prop, receiver, propValue) => new Proxy(propValue.bind(gl), cachedSetterHandler(gl.DEPTH_WRITEMASK));\n  return {\n    get(gl, prop, receiver) {\n      if (prop === GET_UNDERLYING_CONTEXT) return () => gl;\n      let value = Reflect.get(gl, prop, gl);\n      if (value instanceof Function) {\n        // prevents Illegal Invocation errors\n        value = value.bind(gl);\n      }\n      const propHandler = propHandlers[prop];\n      if (propHandler) {\n        return propHandler(gl, prop, receiver, value);\n      }\n      return value;\n    }\n  };\n}\nvar ContextProxy = {\n  createContextProxyHandler\n};\n\nexport { GET_UNDERLYING_CONTEXT, createContextProxyHandler, ContextProxy as default };\n", "import { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkHardwareSelector from './HardwareSelector.js';\nimport vtkShaderCache from './ShaderCache.js';\nimport vtkTextureUnitManager from './TextureUnitManager.js';\nimport vtkViewNodeFactory, { registerOverride } from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\nimport { createContextProxyHandler } from './RenderWindow/ContextProxy.js';\n\nconst {\n  vtkDebugMacro,\n  vtkErrorMacro\n} = macro;\nconst SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n};\nconst parentMethodsToProxy = ['activateTexture', 'deactivateTexture', 'disableCullFace', 'enableCullFace', 'get3DContext', 'getActiveFramebuffer', 'getContext', 'getDefaultTextureByteSize', 'getDefaultTextureInternalFormat', 'getDefaultToWebgl2', 'getGLInformations', 'getGraphicsMemoryInfo', 'getGraphicsResourceForObject', 'getHardwareMaximumLineWidth', 'getPixelData', 'getShaderCache', 'getTextureUnitForTexture', 'getTextureUnitManager', 'getWebgl2', 'makeCurrent', 'releaseGraphicsResources', 'registerGraphicsResourceUser', 'unregisterGraphicsResourceUser', 'restoreContext', 'setActiveFramebuffer', 'setContext', 'setDefaultToWebgl2', 'setGraphicsResourceForObject'];\nfunction checkRenderTargetSupport(gl, format, type) {\n  // create temporary frame buffer and texture\n  const framebuffer = gl.createFramebuffer();\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n  // check frame buffer status\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n  // clean up\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return status === gl.FRAMEBUFFER_COMPLETE;\n}\n\n// ----------------------------------------------------------------------------\n// Monitor the usage of GL context across vtkOpenGLRenderWindow instances\n// ----------------------------------------------------------------------------\n\nlet GL_CONTEXT_COUNT = 0;\nconst GL_CONTEXT_LISTENERS = [];\nfunction createGLContext() {\n  GL_CONTEXT_COUNT++;\n  GL_CONTEXT_LISTENERS.forEach(cb => cb(GL_CONTEXT_COUNT));\n}\nfunction deleteGLContext() {\n  GL_CONTEXT_COUNT--;\n  GL_CONTEXT_LISTENERS.forEach(cb => cb(GL_CONTEXT_COUNT));\n}\nfunction pushMonitorGLContextCount(cb) {\n  GL_CONTEXT_LISTENERS.push(cb);\n}\nfunction popMonitorGLContextCount(cb) {\n  return GL_CONTEXT_LISTENERS.pop();\n}\nfunction _preventDefault(e) {\n  e.preventDefault();\n}\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderWindow');\n\n  // Only create a cachingContextHandler if needed\n  let cachingContextHandler;\n  function getCachingContextHandler() {\n    if (!cachingContextHandler) {\n      cachingContextHandler = createContextProxyHandler();\n    }\n    return cachingContextHandler;\n  }\n  publicAPI.getViewNodeFactory = () => model.myFactory;\n\n  // prevent default context lost handler\n  model.canvas.addEventListener('webglcontextlost', _preventDefault, false);\n  model.canvas.addEventListener('webglcontextrestored', publicAPI.restoreContext, false);\n\n  // Auto update style\n  const previousSize = [0, 0];\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n      }\n    }\n\n    // ImageStream size\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    }\n\n    // Offscreen ?\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block';\n\n    // Cursor type\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    }\n\n    // Invalidate cached DOM container size\n    model.containerSize = null;\n  }\n  publicAPI.onModified(updateWindow);\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.addMissingNodes(model.renderable.getChildRenderWindowsByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n      model.children.forEach(child => {\n        // Children can be openGl renderer or openGl render windows\n        // Only openGl renderers have a method setOpenGLRenderWindow\n        child.setOpenGLRenderWindow?.(publicAPI);\n      });\n    }\n  };\n  publicAPI.initialize = () => {\n    if (!model.initialized) {\n      // Set root parent if there is one\n      // Some methods of the root parent are proxied (see parentMethodsToProxy)\n      model.rootOpenGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      if (model.rootOpenGLRenderWindow) {\n        // Initialize a 2D context that will copy the content of the root parent\n        model.context2D = publicAPI.get2DContext();\n      } else {\n        // Initialize a 3D context that may be used by child render windows\n        model.context = publicAPI.get3DContext();\n        publicAPI.resizeFromChildRenderWindows();\n        if (model.context) {\n          createGLContext();\n        }\n        model.textureUnitManager = vtkTextureUnitManager.newInstance();\n        model.textureUnitManager.setContext(model.context);\n        model.shaderCache.setContext(model.context);\n        // initialize blending for transparency\n        const gl = model.context;\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.depthFunc(gl.LEQUAL);\n        gl.enable(gl.BLEND);\n      }\n      model.initialized = true;\n    }\n  };\n  publicAPI.makeCurrent = () => {\n    model.context.makeCurrent();\n  };\n  publicAPI.setContainer = el => {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      }\n\n      // Remove canvas from previous container\n      model.el.removeChild(model.canvas);\n\n      // If the renderer has previously added\n      // a background image, remove it from the DOM.\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n    if (model.el !== el) {\n      model.el = el;\n      if (model.el) {\n        model.el.appendChild(model.canvas);\n\n        // If the renderer is set to use a background\n        // image, attach it to the DOM.\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      }\n\n      // Trigger modified()\n      publicAPI.modified();\n    }\n  };\n  publicAPI.getContainer = () => model.el;\n  publicAPI.getContainerSize = () => {\n    if (!model.containerSize && model.el) {\n      const {\n        width,\n        height\n      } = model.el.getBoundingClientRect();\n      model.containerSize = [width, height];\n    }\n    return model.containerSize || model.size;\n  };\n  publicAPI.getFramebufferSize = () => {\n    const fbSize = model.activeFramebuffer?.getSize();\n    return fbSize || model.size;\n  };\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\n    const pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);\n    model.context.readPixels(x1, y1, x2 - x1 + 1, y2 - y1 + 1, model.context.RGBA, model.context.UNSIGNED_BYTE, pixels);\n    return pixels;\n  };\n  publicAPI.get3DContext = function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      preserveDrawingBuffer: false,\n      depth: true,\n      alpha: true,\n      powerPreference: 'high-performance'\n    };\n    let result = null;\n    const webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';\n    model.webgl2 = false;\n    if (model.defaultToWebgl2 && webgl2Supported) {\n      result = model.canvas.getContext('webgl2', options);\n      if (result) {\n        model.webgl2 = true;\n        vtkDebugMacro('using webgl2');\n      }\n    }\n    if (!result) {\n      vtkDebugMacro('using webgl1');\n      result = model.canvas.getContext('webgl', options) || model.canvas.getContext('experimental-webgl', options);\n    }\n    return new Proxy(result, getCachingContextHandler());\n  };\n  publicAPI.get2DContext = function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return model.canvas.getContext('2d', options);\n  };\n  publicAPI.restoreContext = () => {\n    const rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n  };\n  publicAPI.activateTexture = texture => {\n    // Only add if it isn't already there\n    const result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      model.context.activeTexture(model.context.TEXTURE0 + result);\n      return;\n    }\n    const activeUnit = publicAPI.getTextureUnitManager().allocate();\n    if (activeUnit < 0) {\n      vtkErrorMacro('Hardware does not support the number of textures defined.');\n      return;\n    }\n    model._textureResourceIds.set(texture, activeUnit);\n    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);\n  };\n  publicAPI.deactivateTexture = texture => {\n    // Only deactivate if it isn't already there\n    const result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      publicAPI.getTextureUnitManager().free(result);\n      model._textureResourceIds.delete(texture);\n    }\n  };\n  publicAPI.getTextureUnitForTexture = texture => {\n    const result = model._textureResourceIds.get(texture);\n    if (result !== undefined) {\n      return result;\n    }\n    return -1;\n  };\n  publicAPI.getDefaultTextureByteSize = function (vtkType) {\n    let oglNorm16Ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let useHalfFloat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (model.webgl2) {\n      switch (vtkType) {\n        case VtkDataTypes.CHAR:\n        case VtkDataTypes.SIGNED_CHAR:\n        case VtkDataTypes.UNSIGNED_CHAR:\n          return 1;\n        case oglNorm16Ext:\n        case useHalfFloat:\n        case VtkDataTypes.UNSIGNED_SHORT:\n        case VtkDataTypes.SHORT:\n        case VtkDataTypes.VOID:\n          // Used for unsigned int depth\n          return 2;\n        default:\n          // For all other cases, assume float\n          return 4;\n      }\n    }\n\n    // webgl1 type support is limited to 1 byte\n    return 1;\n  };\n  publicAPI.getDefaultTextureInternalFormat = function (vtktype, numComps) {\n    let oglNorm16Ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let useHalfFloat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (model.webgl2) {\n      switch (vtktype) {\n        case VtkDataTypes.UNSIGNED_CHAR:\n          switch (numComps) {\n            case 1:\n              return model.context.R8;\n            case 2:\n              return model.context.RG8;\n            case 3:\n              return model.context.RGB8;\n            case 4:\n            default:\n              return model.context.RGBA8;\n          }\n        case oglNorm16Ext && !useHalfFloat && VtkDataTypes.UNSIGNED_SHORT:\n          switch (numComps) {\n            case 1:\n              return oglNorm16Ext.R16_EXT;\n            case 2:\n              return oglNorm16Ext.RG16_EXT;\n            case 3:\n              return oglNorm16Ext.RGB16_EXT;\n            case 4:\n            default:\n              return oglNorm16Ext.RGBA16_EXT;\n          }\n        // prioritize norm16 over float\n        case oglNorm16Ext && !useHalfFloat && VtkDataTypes.SHORT:\n          switch (numComps) {\n            case 1:\n              return oglNorm16Ext.R16_SNORM_EXT;\n            case 2:\n              return oglNorm16Ext.RG16_SNORM_EXT;\n            case 3:\n              return oglNorm16Ext.RGB16_SNORM_EXT;\n            case 4:\n            default:\n              return oglNorm16Ext.RGBA16_SNORM_EXT;\n          }\n        case VtkDataTypes.UNSIGNED_SHORT:\n        case VtkDataTypes.SHORT:\n        case VtkDataTypes.FLOAT:\n        default:\n          // useHalfFloat tells us if the texture can be accurately\n          // rendered with 16 bits or not.\n          switch (numComps) {\n            case 1:\n              return useHalfFloat ? model.context.R16F : model.context.R32F;\n            case 2:\n              return useHalfFloat ? model.context.RG16F : model.context.RG32F;\n            case 3:\n              return useHalfFloat ? model.context.RGB16F : model.context.RGB32F;\n            case 4:\n            default:\n              return useHalfFloat ? model.context.RGBA16F : model.context.RGBA32F;\n          }\n      }\n    }\n\n    // webgl1 only supports four types\n    switch (numComps) {\n      case 1:\n        return model.context.LUMINANCE;\n      case 2:\n        return model.context.LUMINANCE_ALPHA;\n      case 3:\n        return model.context.RGB;\n      case 4:\n      default:\n        return model.context.RGBA;\n    }\n  };\n  publicAPI.setBackgroundImage = img => {\n    model.bgImage.src = img.src;\n  };\n  publicAPI.setUseBackgroundImage = value => {\n    model.useBackgroundImage = value;\n\n    // Add or remove the background image from the\n    // DOM as specified.\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n  function getCanvasDataURL() {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;\n    // Copy current canvas to not modify the original\n    const temporaryCanvas = document.createElement('canvas');\n    const temporaryContext = temporaryCanvas.getContext('2d');\n    temporaryCanvas.width = model.canvas.width;\n    temporaryCanvas.height = model.canvas.height;\n    temporaryContext.drawImage(model.canvas, 0, 0);\n\n    // Get current client rect to place canvas\n    const mainBoundingClientRect = model.canvas.getBoundingClientRect();\n    const renderWindow = model.renderable;\n    const renderers = renderWindow.getRenderers();\n    renderers.forEach(renderer => {\n      const viewProps = renderer.getViewProps();\n      viewProps.forEach(viewProp => {\n        // Check if the prop has a container that should have canvas\n        if (viewProp.getContainer) {\n          const container = viewProp.getContainer();\n          const canvasList = container.getElementsByTagName('canvas');\n          // Go throughout all canvas and copy it into temporary main canvas\n          for (let i = 0; i < canvasList.length; i++) {\n            const currentCanvas = canvasList[i];\n            const boundingClientRect = currentCanvas.getBoundingClientRect();\n            const newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n            const newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n          }\n        }\n      });\n    });\n    const screenshot = temporaryCanvas.toDataURL(format);\n    temporaryCanvas.remove();\n    publicAPI.invokeImageReady(screenshot);\n  }\n  publicAPI.captureNextImage = function () {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    let {\n      resetCamera = false,\n      size = null,\n      scale = 1\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (model.deleted) {\n      return null;\n    }\n    model.imageFormat = format;\n    const previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(val => val * scale) : null\n    };\n    return new Promise((resolve, reject) => {\n      const subscription = publicAPI.onImageReady(imageURL => {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize;\n\n            // process the resize\n            publicAPI.modified();\n\n            // restore the saved camera parameters, if applicable\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(_ref => {\n                let {\n                  restoreParamsFn,\n                  arg\n                } = _ref;\n                return restoreParamsFn(arg);\n              });\n            }\n\n            // Trigger a render at the original size\n            publicAPI.traverseAllPasses();\n\n            // Remove and clean up the placeholder, revealing the original\n            model.el.removeChild(model._screenshot.placeHolder);\n            model._screenshot.placeHolder.remove();\n            model._screenshot = null;\n          }\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          const tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg);\n\n          // hide the main canvas\n          model.canvas.style.display = 'none';\n\n          // remember the main canvas original size, then resize it\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model.rootOpenGLRenderWindow?.resizeFromChildRenderWindows();\n          model._screenshot.size = null;\n\n          // process the resize\n          publicAPI.modified();\n          if (resetCamera) {\n            const isUserResetCamera = resetCamera !== true;\n\n            // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n            model._screenshot.cameras = model.renderable.getRenderers().map(renderer => {\n              const camera = renderer.getActiveCamera();\n              const params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            });\n\n            // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n            model._screenshot.cameras.forEach(_ref2 => {\n              let {\n                resetCameraFn,\n                resetCameraArgs\n              } = _ref2;\n              return resetCameraFn(resetCameraArgs);\n            });\n          }\n\n          // Trigger a render at the custom size\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n  let hardwareMaximumLineWidth;\n  publicAPI.getHardwareMaximumLineWidth = () => {\n    // We cache the result of this function because `getParameter` is slow\n    if (hardwareMaximumLineWidth != null) {\n      return hardwareMaximumLineWidth;\n    }\n    const gl = publicAPI.get3DContext();\n    const lineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE);\n    hardwareMaximumLineWidth = lineWidthRange[1];\n    return lineWidthRange[1];\n  };\n  publicAPI.getGLInformations = () => {\n    if (model._glInformation) {\n      return model._glInformation;\n    }\n    const gl = publicAPI.get3DContext();\n    const glTextureFloat = gl.getExtension('OES_texture_float');\n    const glTextureHalfFloat = gl.getExtension('OES_texture_half_float');\n    const glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    const glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\n    const glAnisotropic = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n    const params = [['Max Vertex Attributes', 'MAX_VERTEX_ATTRIBS', gl.getParameter(gl.MAX_VERTEX_ATTRIBS)], ['Max Varying Vectors', 'MAX_VARYING_VECTORS', gl.getParameter(gl.MAX_VARYING_VECTORS)], ['Max Vertex Uniform Vectors', 'MAX_VERTEX_UNIFORM_VECTORS', gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)], ['Max Fragment Uniform Vectors', 'MAX_FRAGMENT_UNIFORM_VECTORS', gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)], ['Max Fragment Texture Image Units', 'MAX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)], ['Max Vertex Texture Image Units', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)], ['Max Combined Texture Image Units', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)], ['Max 2D Texture Size', 'MAX_TEXTURE_SIZE', gl.getParameter(gl.MAX_TEXTURE_SIZE)], ['Max Cube Texture Size', 'MAX_CUBE_MAP_TEXTURE_SIZE', gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)], ['Max Texture Anisotropy', 'MAX_TEXTURE_MAX_ANISOTROPY_EXT', glAnisotropic && gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)], ['Point Size Range', 'ALIASED_POINT_SIZE_RANGE', gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - ')], ['Line Width Range', 'ALIASED_LINE_WIDTH_RANGE', gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - ')], ['Max Viewport Dimensions', 'MAX_VIEWPORT_DIMS', gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - ')], ['Max Renderbuffer Size', 'MAX_RENDERBUFFER_SIZE', gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)], ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)], ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)], ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)], ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)], ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)], ['Framebuffer Stencil Bits', 'STENCIL_BITS', gl.getParameter(gl.STENCIL_BITS)], ['Framebuffer Subpixel Bits', 'SUBPIXEL_BITS', gl.getParameter(gl.SUBPIXEL_BITS)], ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)], ['MSAA Sample Buffers', 'SAMPLE_BUFFERS', gl.getParameter(gl.SAMPLE_BUFFERS)], ['Supported Formats for UByte Render Targets     ', 'UNSIGNED_BYTE RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Half Float Render Targets', 'HALF FLOAT RENDER TARGET FORMATS', [glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGBA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGBA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGB, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGB' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'ALPHA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Full Float Render Targets', 'FLOAT RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Max Multiple Render Targets Buffers', 'MAX_DRAW_BUFFERS_WEBGL', glDrawBuffers ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL) : 0], ['High Float Precision in Vertex Shader', 'HIGH_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Vertex Shader', 'MEDIUM_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Vertex Shader', 'LOW_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Float Precision in Fragment Shader', 'HIGH_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Fragment Shader', 'MEDIUM_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Fragment Shader', 'LOW_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Vertex Shader', 'HIGH_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Vertex Shader', 'MEDIUM_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Vertex Shader', 'LOW_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Fragment Shader', 'HIGH_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Fragment Shader', 'MEDIUM_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Fragment Shader', 'LOW_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['Supported Extensions', 'EXTENSIONS', gl.getSupportedExtensions().join('<br/>\\t\\t\\t\\t\\t    ')], ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)], ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)], ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)], ['Shading Language Version', 'SHADING_LANGUAGE_VERSION', gl.getParameter(gl.SHADING_LANGUAGE_VERSION)], ['Unmasked Renderer', 'UNMASKED_RENDERER', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL)], ['Unmasked Vendor', 'UNMASKED_VENDOR', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL)], ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1]];\n    const result = {};\n    while (params.length) {\n      const [label, key, value] = params.pop();\n      if (key) {\n        result[key] = {\n          label,\n          value\n        };\n      }\n    }\n    model._glInformation = result;\n    return result;\n  };\n  publicAPI.traverseAllPasses = () => {\n    if (model.renderPasses) {\n      for (let index = 0; index < model.renderPasses.length; ++index) {\n        model.renderPasses[index].traverse(publicAPI, null);\n      }\n    }\n    publicAPI.copyParentContent();\n    if (model.notifyStartCaptureImage) {\n      getCanvasDataURL();\n    }\n    const childrenRW = model.renderable.getChildRenderWindowsByReference();\n    for (let i = 0; i < childrenRW.length; ++i) {\n      publicAPI.getViewNodeFor(childrenRW[i])?.traverseAllPasses();\n    }\n  };\n  publicAPI.copyParentContent = () => {\n    const rootParent = model.rootOpenGLRenderWindow;\n    if (!rootParent || !model.context2D || model.children.some(oglRenderer => !!oglRenderer.getSelector?.())) {\n      return;\n    }\n    const parentCanvas = rootParent.getCanvas();\n    const selfCanvas = model.canvas;\n    model.context2D.drawImage(parentCanvas, 0, parentCanvas.height - selfCanvas.height,\n    // source y axis is inverted\n    selfCanvas.width, selfCanvas.height, 0, 0, selfCanvas.width, selfCanvas.height);\n  };\n  publicAPI.resizeFromChildRenderWindows = () => {\n    // Adapt the size of the parent render window to the child render windows\n    const childrenRW = model.renderable.getChildRenderWindowsByReference();\n    if (childrenRW.length > 0) {\n      const maxSize = [0, 0];\n      for (let i = 0; i < childrenRW.length; ++i) {\n        const childSize = publicAPI.getViewNodeFor(childrenRW[i])?.getSize();\n        if (childSize) {\n          maxSize[0] = childSize[0] > maxSize[0] ? childSize[0] : maxSize[0];\n          maxSize[1] = childSize[1] > maxSize[1] ? childSize[1] : maxSize[1];\n        }\n      }\n      publicAPI.setSize(...maxSize);\n    }\n  };\n  publicAPI.disableCullFace = () => {\n    if (model.cullFaceEnabled) {\n      model.context.disable(model.context.CULL_FACE);\n      model.cullFaceEnabled = false;\n    }\n  };\n  publicAPI.enableCullFace = () => {\n    if (!model.cullFaceEnabled) {\n      model.context.enable(model.context.CULL_FACE);\n      model.cullFaceEnabled = true;\n    }\n  };\n  publicAPI.setViewStream = stream => {\n    if (model.viewStream === stream) {\n      return false;\n    }\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n    model.viewStream = stream;\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      const mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0;\n\n      // Enable display of the background image\n      publicAPI.setUseBackgroundImage(true);\n\n      // Bind to remote stream\n      model.subscription = model.viewStream.onImageReady(e => publicAPI.setBackgroundImage(e.image));\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n    return true;\n  };\n  publicAPI.createSelector = () => {\n    const ret = vtkHardwareSelector.newInstance();\n    ret.setOpenGLRenderWindow(publicAPI);\n    return ret;\n  };\n  function clearEvents() {\n    model.canvas.removeEventListener('webglcontextlost', _preventDefault);\n    model.canvas.removeEventListener('webglcontextrestored', publicAPI.restoreContext);\n  }\n  publicAPI.delete = macro.chain(() => {\n    if (model.context) {\n      deleteGLContext();\n    }\n    publicAPI.setContainer();\n    publicAPI.setViewStream();\n  }, clearEvents, publicAPI.delete);\n\n  // Do not trigger modified for performance reasons\n  publicAPI.setActiveFramebuffer = newActiveFramebuffer => {\n    model.activeFramebuffer = newActiveFramebuffer;\n  };\n  const superSetSize = publicAPI.setSize;\n  publicAPI.setSize = (width, height) => {\n    const modified = superSetSize(width, height);\n    if (modified) {\n      publicAPI.invokeWindowResizeEvent({\n        width,\n        height\n      });\n    }\n    return modified;\n  };\n  publicAPI.registerGraphicsResourceUser = (coreObject, newUser) => {\n    // Try to create the graphics resource if it doesn't exist\n    if (!model._graphicsResources.has(coreObject)) {\n      publicAPI.setGraphicsResourceForObject(coreObject, null, null);\n    }\n    // Add newUser to the set of users\n    const sharedResource = model._graphicsResources.get(coreObject);\n    sharedResource?.users.add(newUser);\n  };\n  publicAPI.unregisterGraphicsResourceUser = (coreObject, oldUser) => {\n    const sharedResource = model._graphicsResources.get(coreObject);\n    if (!sharedResource) {\n      return;\n    }\n    sharedResource.users.delete(oldUser);\n    // Release graphics resources when the number of users reaches 0\n    if (!sharedResource.users.size) {\n      sharedResource.oglObject?.releaseGraphicsResources(publicAPI);\n      model._graphicsResources.delete(coreObject);\n    }\n  };\n  publicAPI.getGraphicsResourceForObject = coreObject => model._graphicsResources.get(coreObject);\n  publicAPI.setGraphicsResourceForObject = (coreObject, oglObject, hash) => {\n    if (!coreObject) {\n      return;\n    }\n    const sharedResource = model._graphicsResources.get(coreObject);\n    // Release the old resource\n    sharedResource?.oglObject?.releaseGraphicsResources(publicAPI);\n    // Keep the same users that have registered for this coreObject\n    model._graphicsResources.set(coreObject, {\n      coreObject,\n      oglObject,\n      hash,\n      users: sharedResource?.users ?? new Set()\n    });\n  };\n  publicAPI.getGraphicsMemoryInfo = () => {\n    let memUsed = 0;\n    model._graphicsResources.forEach(_ref3 => {\n      let {\n        oglObject\n      } = _ref3;\n      memUsed += oglObject.getAllocatedGPUMemoryInBytes();\n    });\n    return memUsed;\n  };\n  publicAPI.releaseGraphicsResources = () => {\n    // Clear the shader cache\n    if (model.shaderCache !== null) {\n      model.shaderCache.releaseGraphicsResources(publicAPI);\n    }\n    // Free cached graphics resources at the context level\n    model._graphicsResources.forEach(_ref4 => {\n      let {\n        oglObject\n      } = _ref4;\n      oglObject.releaseGraphicsResources(publicAPI);\n    });\n    model._graphicsResources.clear();\n    if (model.textureUnitManager !== null) {\n      model.textureUnitManager.freeAll();\n    }\n    // Finally, ask the renderers to release prop resources\n    model.renderable.getRenderersByReference().forEach(ren => {\n      const glRen = publicAPI.getViewNodeFor(ren);\n      glRen?.releaseGraphicsResources();\n    });\n  };\n\n  // Proxy some methods if needed\n  const publicAPIBeforeProxy = {\n    ...publicAPI\n  };\n  parentMethodsToProxy.forEach(methodName => {\n    publicAPI[methodName] = function () {\n      if (model.rootOpenGLRenderWindow) {\n        // Proxy only methods when the render window has a parent\n        return model.rootOpenGLRenderWindow[methodName](...arguments);\n      }\n      return publicAPIBeforeProxy[methodName](...arguments);\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  cullFaceEnabled: false,\n  shaderCache: null,\n  initialized: false,\n  context: null,\n  context2D: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  textureUnitManager: null,\n  textureResourceIds: null,\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  webgl2: false,\n  defaultToWebgl2: true,\n  // attempt webgl2 on by default\n  activeFramebuffer: null,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues);\n\n  // Create internal instances\n  if (!model.canvas) {\n    model.canvas = document.createElement('canvas');\n    model.canvas.style.width = '100%';\n  }\n  if (!model.selector) {\n    model.selector = vtkHardwareSelector.newInstance();\n    model.selector.setOpenGLRenderWindow(publicAPI);\n  }\n\n  // Create internal bgImage\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1';\n  model._textureResourceIds = new Map();\n  model._graphicsResources = new Map();\n  model._glInformation = null;\n  model.myFactory = vtkViewNodeFactory.newInstance();\n  model.shaderCache = vtkShaderCache.newInstance();\n  model.shaderCache.setOpenGLRenderWindow(publicAPI);\n\n  // setup default forward pass rendering\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['shaderCache', 'textureUnitManager', 'webgl2', 'useBackgroundImage', 'activeFramebuffer', 'rootOpenGLRenderWindow']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'context2D', 'canvas', 'renderPasses', 'notifyStartCaptureImage', 'defaultToWebgl2', 'cursor', 'useOffScreen']);\n  macro.setGetArray(publicAPI, model, ['size'], 2);\n  macro.event(publicAPI, model, 'imageReady');\n  macro.event(publicAPI, model, 'windowResizeEvent');\n\n  // Object methods\n  vtkOpenGLRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOpenGLRenderWindow');\n\n// ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGL', newInstance);\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance,\n  extend,\n  pushMonitorGLContextCount,\n  popMonitorGLContextCount\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkRenderWindow', newInstance);\n\nexport { vtkRenderWindow as default, extend, newInstance, popMonitorGLContextCount, pushMonitorGLContextCount };\n"],
  "mappings": "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",
  "names": ["undefined", "hex", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "SelectionContent", "SelectionField", "FieldAssociations", "vtkErrorMacro", "info", "DEFAULT_VALUES", "extend", "newInstance", "vtkHardwareSelector", "Md5", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "vtkHardwareSelector", "DEFAULT_VALUES", "extend", "newInstance"]
}
