{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/RenderWindow.js"],
  "sourcesContent": ["import { m as macro } from '../../macros2.js';\n\nconst DEFAULT_VIEW_API = 'WebGL';\nconst VIEW_CONSTRUCTORS = Object.create(null);\n\n// ----------------------------------------------------------------------------\n// static methods\n// ----------------------------------------------------------------------------\n\nfunction registerViewConstructor(name, constructor) {\n  VIEW_CONSTRUCTORS[name] = constructor;\n}\nfunction listViewAPIs() {\n  return Object.keys(VIEW_CONSTRUCTORS);\n}\nfunction newAPISpecificView(name) {\n  let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow');\n\n  // Add renderer\n  publicAPI.addRenderer = renderer => {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer);\n\n    // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeRenderer = renderer => {\n    model.renderers = model.renderers.filter(r => r !== renderer);\n    publicAPI.modified();\n  };\n  publicAPI.hasRenderer = ren => model.renderers.indexOf(ren) !== -1;\n\n  // get an API specific view of this data\n  publicAPI.newAPISpecificView = function (name) {\n    let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return newAPISpecificView(name || model.defaultViewAPI, initialValues);\n  };\n\n  // Add renderer\n  publicAPI.addView = view => {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n    view.setRenderable(publicAPI);\n    model._views.push(view);\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeView = view => {\n    model._views = model._views.filter(r => r !== view);\n    publicAPI.modified();\n  };\n  publicAPI.hasView = view => model._views.indexOf(view) !== -1;\n\n  // handle any pre render initializations\n  publicAPI.preRender = () => {\n    model.renderers.forEach(ren => {\n      // make sure we have a camera\n      if (!ren.isActiveCameraCreated()) {\n        ren.resetCamera();\n      }\n    });\n  };\n  publicAPI.render = () => {\n    publicAPI.preRender();\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model._views.forEach(view => view.traverseAllPasses());\n    }\n  };\n  publicAPI.getStatistics = () => {\n    const results = {\n      propCount: 0,\n      invisiblePropCount: 0,\n      gpuMemoryMB: 0\n    };\n    model._views.forEach(v => {\n      if (v.getGraphicsMemoryInfo) results.gpuMemoryMB += v.getGraphicsMemoryInfo() / 1e6;\n    });\n    model.renderers.forEach(ren => {\n      const props = ren.getViewProps();\n      const gren = model._views[0].getViewNodeFor(ren);\n      props.forEach(prop => {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          const mpr = prop.getMapper && prop.getMapper();\n          if (mpr && mpr.getPrimitiveCount) {\n            const gmpr = gren.getViewNodeFor(mpr);\n            if (gmpr) {\n              if (gmpr.getAllocatedGPUMemoryInBytes) {\n                results.gpuMemoryMB += gmpr.getAllocatedGPUMemoryInBytes() / 1e6;\n              }\n              const pcount = mpr.getPrimitiveCount();\n              Object.keys(pcount).forEach(keyName => {\n                if (!results[keyName]) {\n                  results[keyName] = 0;\n                }\n                results[keyName] += pcount[keyName];\n              });\n            }\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results).map(keyName => `${keyName}: ${results[keyName]}`).join('\\n');\n    return results;\n  };\n  publicAPI.captureImages = function () {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    macro.setImmediate(publicAPI.render);\n    return model._views.map(view => view.captureNextImage ? view.captureNextImage(format, opts) : undefined).filter(i => !!i);\n  };\n  publicAPI.addRenderWindow = child => {\n    if (model.childRenderWindows.includes(child)) {\n      return false;\n    }\n    model.childRenderWindows.push(child);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.removeRenderWindow = child => {\n    const childIndex = model.childRenderWindows.findIndex(x => x === child);\n    if (childIndex < 0) {\n      return false;\n    }\n    model.childRenderWindows.splice(childIndex, 1);\n    publicAPI.modified();\n    return true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  defaultViewAPI: DEFAULT_VIEW_API,\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1,\n  childRenderWindows: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['interactor', 'numberOfLayers', '_views', 'defaultViewAPI']);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers', 'childRenderWindows']);\n  macro.moveToProtected(publicAPI, model, ['views']);\n  macro.event(publicAPI, model, 'completion');\n\n  // Object methods\n  vtkRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindow');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindow$1 = {\n  newInstance,\n  extend,\n  registerViewConstructor,\n  listViewAPIs,\n  newAPISpecificView\n};\n\nexport { vtkRenderWindow$1 as default, extend, listViewAPIs, newAPISpecificView, newInstance, registerViewConstructor };\n"],
  "mappings": "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",
  "names": []
}
