{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/Prop/Constants.js", "../../@kitware/vtk.js/Rendering/Core/Prop.js", "../../@kitware/vtk.js/Rendering/Core/Prop3D.js", "../../@kitware/vtk.js/Rendering/Core/Actor.js"],
  "sourcesContent": ["const CoordinateSystem = {\n  DISPLAY: 0,\n  WORLD: 1\n};\nvar Constants = {\n  CoordinateSystem\n};\n\nexport { CoordinateSystem, Constants as default };\n", "import { m as macro } from '../../macros2.js';\nimport Constants from './Prop/Constants.js';\n\nconst {\n  CoordinateSystem\n} = Constants;\nfunction notImplemented(method) {\n  return () => macro.vtkErrorMacro(`vtkProp::${method} - NOT IMPLEMENTED`);\n}\n\n// ----------------------------------------------------------------------------\n// vtkProp methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp');\n  publicAPI.getMTime = () => {\n    let m1 = model.mtime;\n    for (let index = 0; index < model.textures.length; ++index) {\n      const m2 = model.textures[index].getMTime();\n      if (m2 > m1) {\n        m1 = m2;\n      }\n    }\n    return m1;\n  };\n  publicAPI.processSelectorPixelBuffers = (selector, pixeloffsets) => {};\n  publicAPI.getNestedProps = () => null;\n  publicAPI.getActors = () => [];\n  publicAPI.getActors2D = () => [];\n  publicAPI.getVolumes = () => [];\n  publicAPI.pick = notImplemented('pick');\n  publicAPI.hasKey = notImplemented('hasKey');\n  publicAPI.getNestedVisibility = () => model.visibility && (!model._parentProp || model._parentProp.getNestedVisibility());\n  publicAPI.getNestedPickable = () => model.pickable && (!model._parentProp || model._parentProp.getNestedPickable());\n  publicAPI.getNestedDragable = () => model.dragable && (!model._parentProp || model._parentProp.getNestedDragable());\n  publicAPI.getRedrawMTime = () => model.mtime;\n  publicAPI.setEstimatedRenderTime = t => {\n    model.estimatedRenderTime = t;\n    model.savedEstimatedRenderTime = t;\n  };\n  publicAPI.restoreEstimatedRenderTime = () => {\n    model.estimatedRenderTime = model.savedEstimatedRenderTime;\n  };\n  publicAPI.addEstimatedRenderTime = t => {\n    model.estimatedRenderTime += t;\n  };\n  publicAPI.setAllocatedRenderTime = t => {\n    model.allocatedRenderTime = t;\n    model.savedEstimatedRenderTime = model.estimatedRenderTime;\n    model.estimatedRenderTime = 0;\n  };\n  publicAPI.getSupportsSelection = () => false;\n  publicAPI.getTextures = () => model.textures;\n  publicAPI.hasTexture = texture => model.textures.indexOf(texture) !== -1;\n  publicAPI.addTexture = texture => {\n    if (texture && !publicAPI.hasTexture(texture)) {\n      model.textures = model.textures.concat(texture);\n      publicAPI.modified();\n    }\n  };\n  publicAPI.removeTexture = texture => {\n    const newTextureList = model.textures.filter(item => item !== texture);\n    if (model.textures.length !== newTextureList.length) {\n      model.textures = newTextureList;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.removeAllTextures = () => {\n    model.textures = [];\n    publicAPI.modified();\n  };\n\n  // not all mappers support all coordinate systems\n  publicAPI.setCoordinateSystemToWorld = () => publicAPI.setCoordinateSystem(CoordinateSystem.WORLD);\n  publicAPI.setCoordinateSystemToDisplay = () => publicAPI.setCoordinateSystem(CoordinateSystem.DISPLAY);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // _parentProp: null,\n  allocatedRenderTime: 10,\n  coordinateSystem: CoordinateSystem.WORLD,\n  dragable: true,\n  estimatedRenderTime: 0,\n  paths: null,\n  pickable: true,\n  renderTimeMultiplier: 1,\n  savedEstimatedRenderTime: 0,\n  textures: [],\n  useBounds: true,\n  visibility: true\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['estimatedRenderTime', 'allocatedRenderTime']);\n  macro.setGet(publicAPI, model, ['_parentProp', 'coordinateSystem', 'dragable', 'pickable', 'renderTimeMultiplier', 'useBounds', 'visibility']);\n  macro.moveToProtected(publicAPI, model, ['parentProp']);\n\n  // Object methods\n  vtkProp(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProp');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProp$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkProp$1 as default, extend, newInstance };\n", "import { mat4, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport { A as degreesFromRadians, r as radiansFromDegrees, a as areMatricesEqual } from '../../Common/Core/Math/index.js';\nimport vtkProp from './Prop.js';\n\nconst VTK_EPSILON = 1e-6;\n\n// ----------------------------------------------------------------------------\n// vtkProp3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp3D');\n  publicAPI.addPosition = deltaXYZ => {\n    model.position = model.position.map((value, index) => value + deltaXYZ[index]);\n    publicAPI.modified();\n  };\n  publicAPI.getOrientationWXYZ = () => {\n    const q = quat.create();\n    mat4.getRotation(q, model.rotation);\n    const oaxis = new Float64Array(3);\n    const w = quat.getAxisAngle(oaxis, q);\n    return [degreesFromRadians(w), oaxis[0], oaxis[1], oaxis[2]];\n  };\n  publicAPI.getOrientationQuaternion = function () {\n    let out = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return mat4.getRotation(out, model.rotation);\n  };\n  publicAPI.rotateX = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateX(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateY = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateY(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateZ = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateZ(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateWXYZ = (degrees, x, y, z) => {\n    if (degrees === 0.0 || x === 0.0 && y === 0.0 && z === 0.0) {\n      return;\n    }\n\n    // convert to radians\n    const angle = radiansFromDegrees(degrees);\n    const q = quat.create();\n    quat.setAxisAngle(q, [x, y, z], angle);\n    const quatMat = new Float64Array(16);\n    mat4.fromQuat(quatMat, q);\n    mat4.multiply(model.rotation, model.rotation, quatMat);\n    publicAPI.modified();\n  };\n  publicAPI.rotateQuaternion = orientationQuaternion => {\n    if (Math.abs(orientationQuaternion[3]) >= 1 - VTK_EPSILON) {\n      return;\n    }\n    const oriQuatMat = mat4.fromQuat(new Float64Array(16), orientationQuaternion);\n    mat4.multiply(model.rotation, model.rotation, oriQuatMat);\n    publicAPI.modified();\n  };\n  publicAPI.setOrientation = (x, y, z) => {\n    if (x === model.orientation[0] && y === model.orientation[1] && z === model.orientation[2]) {\n      return false;\n    }\n    model.orientation = [x, y, z];\n    mat4.identity(model.rotation);\n    publicAPI.rotateZ(z);\n    publicAPI.rotateX(x);\n    publicAPI.rotateY(y);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.setUserMatrix = matrix => {\n    if (areMatricesEqual(model.userMatrix, matrix)) {\n      return false;\n    }\n    mat4.copy(model.userMatrix, matrix);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.getMatrix = () => {\n    publicAPI.computeMatrix();\n    return model.matrix;\n  };\n  publicAPI.computeMatrix = () => {\n    // check whether or not need to rebuild the matrix\n    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {\n      mat4.identity(model.matrix);\n      if (model.userMatrix) {\n        mat4.multiply(model.matrix, model.matrix, model.userMatrix);\n      }\n      mat4.translate(model.matrix, model.matrix, model.origin);\n      mat4.translate(model.matrix, model.matrix, model.position);\n      mat4.multiply(model.matrix, model.matrix, model.rotation);\n      mat4.scale(model.matrix, model.matrix, model.scale);\n      mat4.translate(model.matrix, model.matrix, [-model.origin[0], -model.origin[1], -model.origin[2]]);\n      mat4.transpose(model.matrix, model.matrix);\n\n      // check for identity\n      model.isIdentity = true;\n      for (let i = 0; i < 4; ++i) {\n        for (let j = 0; j < 4; ++j) {\n          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {\n            model.isIdentity = false;\n          }\n        }\n      }\n      model.matrixMTime.modified();\n    }\n  };\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(model.bounds);\n  publicAPI.getLength = () => vtkBoundingBox.getLength(model.bounds);\n  publicAPI.getXRange = () => vtkBoundingBox.getXRange(model.bounds);\n  publicAPI.getYRange = () => vtkBoundingBox.getYRange(model.bounds);\n  publicAPI.getZRange = () => vtkBoundingBox.getZRange(model.bounds);\n  publicAPI.getUserMatrix = () => model.userMatrix;\n  function updateIdentityFlag() {\n    publicAPI.computeMatrix();\n  }\n  publicAPI.onModified(updateIdentityFlag);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  origin: [0, 0, 0],\n  position: [0, 0, 0],\n  orientation: [0, 0, 0],\n  rotation: null,\n  scale: [1, 1, 1],\n  bounds: [1, -1, 1, -1, 1, -1],\n  userMatrix: null,\n  userMatrixMTime: null,\n  cachedProp3D: null,\n  isIdentity: true,\n  matrixMTime: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp.extend(publicAPI, model, initialValues);\n  model.matrixMTime = {};\n  macro.obj(model.matrixMTime);\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['bounds', 'isIdentity']);\n  macro.getArray(publicAPI, model, ['orientation']);\n  macro.setGetArray(publicAPI, model, ['origin', 'position', 'scale'], 3);\n\n  // Object internal instance\n  model.matrix = mat4.identity(new Float64Array(16));\n  model.rotation = mat4.identity(new Float64Array(16));\n  model.userMatrix = mat4.identity(new Float64Array(16));\n  model.transform = null; // FIXME\n\n  // Object methods\n  vtkProp3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProp3D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProp3D$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkProp3D$1 as default, extend, newInstance };\n", "import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkProperty from './Property.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkActor');\n\n  // Capture 'parentClass' api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.getActors = () => [publicAPI];\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque texture, if any?\n    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent());\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n  publicAPI.hasTranslucentPolygonalGeometry = () => {\n    if (model.mapper === null) {\n      return false;\n    }\n    // make sure we have a property\n    if (model.property === null) {\n      // force creation of a property\n      publicAPI.setProperty(publicAPI.makeProperty());\n    }\n\n    // is this actor opaque ?\n    return !publicAPI.getIsOpaque();\n  };\n  publicAPI.makeProperty = vtkProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    if (!model.mapperBounds || bds[0] !== model.mapperBounds[0] || bds[1] !== model.mapperBounds[1] || bds[2] !== model.mapperBounds[2] || bds[3] !== model.mapperBounds[3] || bds[4] !== model.mapperBounds[4] || bds[5] !== model.mapperBounds[5] || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      const bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(pt => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map((d, i) => i % 2 === 0 ? bbox.reduce((a, b) => a > b[i / 2] ? b[i / 2] : a, d) : bbox.reduce((a, b) => a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a, d));\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getMTime = () => {\n    let mt = superClass.getMTime();\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    if (model.backfaceProperty !== null) {\n      const time = model.backfaceProperty.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n  publicAPI.processSelectorPixelBuffers = (selector, pixelOffsets) => {\n    if (model.mapper && model.mapper.processSelectorPixelBuffers) {\n      model.mapper.processSelectorPixelBuffers(selector, pixelOffsets);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  backfaceProperty: null,\n  forceOpaque: false,\n  forceTranslucent: false,\n  bounds: [1, -1, 1, -1, 1, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['backfaceProperty', 'forceOpaque', 'forceTranslucent', 'mapper']);\n\n  // Object methods\n  vtkActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkActor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkActor$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkActor$1 as default, extend, newInstance };\n"],
  "mappings": "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",
  "names": ["CoordinateSystem", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance"]
}
