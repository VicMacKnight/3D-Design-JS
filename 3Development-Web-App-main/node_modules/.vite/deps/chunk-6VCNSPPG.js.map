{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js", "../../@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js"],
  "sourcesContent": ["const Device = {\n  Unknown: 0,\n  LeftController: 1,\n  RightController: 2\n};\nconst Input = {\n  Unknown: 0,\n  Trigger: 1,\n  TrackPad: 2,\n  Grip: 3,\n  Thumbstick: 4,\n  A: 5,\n  B: 6,\n  ApplicationMenu: 7 // Not exposed in WebXR API\n};\n\nconst Axis = {\n  Unknown: 0,\n  TouchpadX: 1,\n  TouchpadY: 2,\n  ThumbstickX: 3,\n  ThumbstickY: 4\n};\nvar Constants = {\n  Device,\n  Input,\n  Axis\n};\n\nexport { Axis, Device, Input, Constants as default };\n", "import { m as macro } from '../../macros2.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport Constants from './RenderWindowInteractor/Constants.js';\n\nconst {\n  Device,\n  Input\n} = Constants;\nconst {\n  vtkWarningMacro,\n  vtkErrorMacro,\n  normalizeWheel,\n  vtkOnceErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst EMPTY_MOUSE_EVENT = {\n  ctrlKey: false,\n  altKey: false,\n  shiftKey: false\n};\nconst deviceInputMap = {\n  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]\n};\nconst handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'PointerEnter', 'PointerLeave', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction pointerCacheToPositions(cache) {\n  const positions = Object.create(null);\n  cache.forEach(_ref => {\n    let {\n      pointerId,\n      position\n    } = _ref;\n    positions[pointerId] = position;\n  });\n  return positions;\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowInteractor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowInteractor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowInteractor');\n\n  // Capture \"parentClass\" api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n\n  // Initialize list of requesters\n  const animationRequesters = new Set();\n\n  // map from pointerId to { pointerId: number, position: [x, y] }\n  const pointerCache = new Map();\n\n  // Factor to apply on wheel spin.\n  let wheelCoefficient = 1;\n\n  // Public API methods\n\n  //----------------------------------------------------------------------\n  publicAPI.start = () => {\n    // Let the compositing handle the event loop if it wants to.\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\n    //   return;\n    // }\n\n    // As a convenience, initialize if we aren't initialized yet.\n    if (!model.initialized) {\n      publicAPI.initialize();\n      if (!model.initialized) {\n        return;\n      }\n    }\n    // Pass execution to the subclass which will run the event loop,\n    // this will not return until TerminateApp is called.\n    publicAPI.startEventLoop();\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setRenderWindow = aren => {\n    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setInteractorStyle = style => {\n    if (model.interactorStyle !== style) {\n      if (model.interactorStyle != null) {\n        model.interactorStyle.setInteractor(null);\n      }\n      model.interactorStyle = style;\n      if (model.interactorStyle != null) {\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\n          model.interactorStyle.setInteractor(publicAPI);\n        }\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------\n  publicAPI.initialize = () => {\n    model.initialized = true;\n    publicAPI.enable();\n    publicAPI.render();\n  };\n  publicAPI.enable = () => publicAPI.setEnabled(true);\n  publicAPI.disable = () => publicAPI.setEnabled(false);\n  publicAPI.startEventLoop = () => vtkWarningMacro('empty event loop');\n  function updateCurrentRenderer(x, y) {\n    if (!model._forcedRenderer) {\n      model.currentRenderer = publicAPI.findPokedRenderer(x, y);\n    }\n  }\n  publicAPI.getCurrentRenderer = () => {\n    if (model.currentRenderer) {\n      return model.currentRenderer;\n    }\n    updateCurrentRenderer(0, 0);\n    return model.currentRenderer;\n  };\n  function _getScreenEventPositionFor(source) {\n    const canvas = model._view.getCanvas();\n    const bounds = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / bounds.width;\n    const scaleY = canvas.height / bounds.height;\n    const position = {\n      x: scaleX * (source.clientX - bounds.left),\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\n      z: 0\n    };\n\n    // if multitouch, do not update the current renderer\n    if (pointerCache.size <= 1 || !model.currentRenderer) {\n      updateCurrentRenderer(position.x, position.y);\n    }\n    return position;\n  }\n  // Allow user to override it\n  const getScreenEventPositionFor = model._getScreenEventPositionFor || _getScreenEventPositionFor;\n  function getModifierKeysFor(event) {\n    return {\n      controlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey\n    };\n  }\n  function getKeysFor(event) {\n    const modifierKeys = getModifierKeysFor(event);\n    const keys = {\n      key: event.key,\n      keyCode: event.charCode,\n      ...modifierKeys\n    };\n    return keys;\n  }\n  function getDeviceTypeFor(event) {\n    return event.pointerType || '';\n  }\n  const _bindEvents = () => {\n    if (model.container === null) {\n      return;\n    }\n    const {\n      container\n    } = model;\n    container.addEventListener('contextmenu', preventDefault);\n    container.addEventListener('wheel', publicAPI.handleWheel);\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.addEventListener('pointerenter', publicAPI.handlePointerEnter);\n    container.addEventListener('pointerleave', publicAPI.handlePointerLeave);\n    container.addEventListener('pointermove', publicAPI.handlePointerMove, {\n      passive: false\n    });\n    container.addEventListener('pointerdown', publicAPI.handlePointerDown, {\n      passive: false\n    });\n    container.addEventListener('pointerup', publicAPI.handlePointerUp);\n    container.addEventListener('pointercancel', publicAPI.handlePointerCancel);\n    document.addEventListener('keypress', publicAPI.handleKeyPress);\n    document.addEventListener('keydown', publicAPI.handleKeyDown);\n    document.addEventListener('keyup', publicAPI.handleKeyUp);\n    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n\n    // using touchAction is more performant than preventDefault\n    // in a touchstart handler.\n    container.style.touchAction = 'none';\n    container.style.userSelect = 'none';\n    // disables tap highlight for when cursor is pointer\n    container.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n  };\n\n  // For backward compatibility.\n  // Necessary for using unbind/bindEvent without calling setContainer.\n  publicAPI.bindEvents = container => {\n    if (container === null) {\n      return;\n    }\n    const res = superClass.setContainer(container);\n    if (res) {\n      _bindEvents();\n    }\n  };\n  const _unbindEvents = () => {\n    // Clear any previous timeouts and state variables that control mouse / touchpad behavior.\n    clearTimeout(model.moveTimeoutID);\n    clearTimeout(model.wheelTimeoutID);\n    model.moveTimeoutID = 0;\n    model.wheelTimeoutID = 0;\n    wheelCoefficient = 1.0;\n    const {\n      container\n    } = model;\n    if (container) {\n      container.removeEventListener('contextmenu', preventDefault);\n      container.removeEventListener('wheel', publicAPI.handleWheel);\n      container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);\n      container.removeEventListener('pointerenter', publicAPI.handlePointerEnter);\n      container.removeEventListener('pointerleave', publicAPI.handlePointerLeave);\n      container.removeEventListener('pointermove', publicAPI.handlePointerMove, {\n        passive: false\n      });\n      container.removeEventListener('pointerdown', publicAPI.handlePointerDown, {\n        passive: false\n      });\n      container.removeEventListener('pointerup', publicAPI.handlePointerUp);\n      container.removeEventListener('pointercancel', publicAPI.handlePointerCancel);\n    }\n    document.removeEventListener('keypress', publicAPI.handleKeyPress);\n    document.removeEventListener('keydown', publicAPI.handleKeyDown);\n    document.removeEventListener('keyup', publicAPI.handleKeyUp);\n    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n    pointerCache.clear();\n  };\n  publicAPI.unbindEvents = () => {\n    _unbindEvents();\n    superClass.setContainer(null);\n  };\n  publicAPI.handleKeyPress = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyPressEvent(data);\n  };\n  publicAPI.handleKeyDown = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyDownEvent(data);\n  };\n  publicAPI.handleKeyUp = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyUpEvent(data);\n  };\n  publicAPI.handlePointerEnter = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerEnterEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseEnterEvent(callData);\n    }\n  };\n  publicAPI.handlePointerLeave = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerLeaveEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseLeaveEvent(callData);\n    }\n  };\n  publicAPI.handlePointerDown = event => {\n    if (event.button > 2 || publicAPI.isPointerLocked()) {\n      // ignore events from extra mouse buttons such as `back` and `forward`\n      return;\n    }\n    if (model.preventDefaultOnPointerDown) {\n      preventDefault(event);\n    }\n    if (event.target.hasPointerCapture(event.pointerId)) {\n      event.target.releasePointerCapture(event.pointerId);\n    }\n    model.container.setPointerCapture(event.pointerId);\n    if (pointerCache.has(event.pointerId)) {\n      vtkWarningMacro('[RenderWindowInteractor] duplicate pointerId detected');\n    }\n    pointerCache.set(event.pointerId, {\n      pointerId: event.pointerId,\n      position: getScreenEventPositionFor(event)\n    });\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchStart(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseDown(event);\n        break;\n    }\n  };\n  publicAPI.handlePointerUp = event => {\n    if (pointerCache.has(event.pointerId)) {\n      if (model.preventDefaultOnPointerUp) {\n        preventDefault(event);\n      }\n      pointerCache.delete(event.pointerId);\n      model.container.releasePointerCapture(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerCancel = event => {\n    if (pointerCache.has(event.pointerId)) {\n      pointerCache.delete(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerMove = event => {\n    if (pointerCache.has(event.pointerId)) {\n      const pointer = pointerCache.get(event.pointerId);\n      pointer.position = getScreenEventPositionFor(event);\n    }\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchMove(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseMove(event);\n        break;\n    }\n  };\n  publicAPI.handleMouseDown = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonPressEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonPressEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonPressEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button pressed: ${event.button}`);\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.requestPointerLock = () => {\n    if (model.container) {\n      model.container.requestPointerLock();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.exitPointerLock = () => document.exitPointerLock?.();\n\n  //----------------------------------------------------------------------\n  publicAPI.isPointerLocked = () => !!model.container && document.pointerLockElement === model.container;\n\n  //----------------------------------------------------------------------\n  publicAPI.handlePointerLockChange = () => {\n    if (publicAPI.isPointerLocked()) {\n      publicAPI.startPointerLockEvent();\n    } else {\n      publicAPI.endPointerLockEvent();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  function forceRender() {\n    if (model._view && model.enabled && model.enableRender) {\n      model.inRender = true;\n      model._view.traverseAllPasses();\n      model.inRender = false;\n    }\n    // outside the above test so that third-party code can redirect\n    // the render to the appropriate class\n    publicAPI.invokeRenderEvent();\n  }\n  publicAPI.requestAnimation = requestor => {\n    if (requestor === undefined) {\n      vtkErrorMacro(`undefined requester, can not start animating`);\n      return;\n    }\n    if (animationRequesters.has(requestor)) {\n      vtkWarningMacro(`requester is already registered for animating`);\n      return;\n    }\n    animationRequesters.add(requestor);\n    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n\n  // continue animating for at least the specified duration of\n  // milliseconds.\n  publicAPI.extendAnimation = duration => {\n    const newEnd = Date.now() + duration;\n    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);\n    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n  publicAPI.isAnimating = () => model.xrAnimation || model.animationRequest !== null;\n  publicAPI.cancelAnimation = function (requestor) {\n    let skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!animationRequesters.has(requestor)) {\n      if (!skipWarning) {\n        const requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;\n        vtkWarningMacro(`${requestStr} did not request an animation`);\n      }\n      return;\n    }\n    animationRequesters.delete(requestor);\n    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.switchToXRAnimation = () => {\n    // cancel existing animation if any\n    if (model.animationRequest) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n    }\n    model.xrAnimation = true;\n  };\n  publicAPI.returnFromXRAnimation = () => {\n    model.xrAnimation = false;\n    if (animationRequesters.size !== 0) {\n      model.recentAnimationFrameRate = 10.0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    }\n  };\n  publicAPI.updateXRGamepads = (xrSession, xrFrame, xrRefSpace) => {\n    // watch for when buttons change state and fire events\n    xrSession.inputSources.forEach(inputSource => {\n      const gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);\n      const targetRayPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.targetRaySpace, xrRefSpace);\n      const gamepad = inputSource.gamepad;\n      const hand = inputSource.handedness;\n      if (!gamepad) {\n        return;\n      }\n      if (!(gamepad.index in model.lastGamepadValues)) {\n        model.lastGamepadValues[gamepad.index] = {\n          left: {\n            buttons: {}\n          },\n          right: {\n            buttons: {}\n          },\n          none: {\n            buttons: {}\n          }\n        };\n      }\n      for (let buttonIdx = 0; buttonIdx < gamepad.buttons.length; ++buttonIdx) {\n        if (!(buttonIdx in model.lastGamepadValues[gamepad.index][hand].buttons)) {\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = false;\n        }\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] !== gamepad.buttons[buttonIdx].pressed && gripPose != null) {\n          publicAPI.button3DEvent({\n            gamepad,\n            position: gripPose.transform.position,\n            orientation: gripPose.transform.orientation,\n            targetPosition: targetRayPose.transform.position,\n            targetOrientation: targetRayPose.transform.orientation,\n            pressed: gamepad.buttons[buttonIdx].pressed,\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,\n            input: deviceInputMap[gamepad.mapping] && deviceInputMap[gamepad.mapping][buttonIdx] ? deviceInputMap[gamepad.mapping][buttonIdx] : Input.Trigger\n          });\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = gamepad.buttons[buttonIdx].pressed;\n        }\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] && gripPose != null) {\n          publicAPI.move3DEvent({\n            gamepad,\n            position: gripPose.transform.position,\n            orientation: gripPose.transform.orientation,\n            targetPosition: targetRayPose.transform.position,\n            targetOrientation: targetRayPose.transform.orientation,\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController\n          });\n        }\n      }\n    });\n  };\n  publicAPI.handleMouseMove = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    if (model.moveTimeoutID === 0) {\n      publicAPI.startMouseMoveEvent(callData);\n    } else {\n      publicAPI.mouseMoveEvent(callData);\n      clearTimeout(model.moveTimeoutID);\n    }\n\n    // start a timer to keep us animating while we get mouse move events\n    model.moveTimeoutID = setTimeout(() => {\n      publicAPI.endMouseMoveEvent();\n      model.moveTimeoutID = 0;\n    }, 200);\n  };\n  publicAPI.handleAnimation = () => {\n    const currTime = Date.now();\n    model._animationFrameCount++;\n    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {\n      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);\n      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;\n      publicAPI.animationFrameRateUpdateEvent();\n      model._animationStartTime = currTime;\n      model._animationFrameCount = 1;\n    }\n    publicAPI.animationEvent();\n    forceRender();\n    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    } else {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.handleWheel = event => {\n    preventDefault(event);\n\n    /**\n     * wheel event values can vary significantly across browsers, platforms\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\n     * fixed-data-table repository [2].\n     *\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     *\n     * This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     */\n    const callData = {\n      ...normalizeWheel(event),\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n\n    // Wheel events are thought to scroll pages (i.e. multiple lines at once).\n    // See normalizeWheel() documentation for more context.\n    // While trackpad wheel events are many small (<1) wheel spins,\n    // mouse wheel events have absolute spin values higher than 1.\n    // Here the first spin value is \"recorded\", and used to normalize\n    // all the following mouse wheel events.\n    if (model.wheelTimeoutID === 0) {\n      // we attempt to distinguish between trackpads and mice\n      // .3 will be larger than the first trackpad event,\n      // but small enough to detect some common edge case mice\n      if (Math.abs(callData.spinY) >= 0.3) {\n        // Event is coming from mouse wheel\n        wheelCoefficient = Math.abs(callData.spinY);\n      } else {\n        // Event is coming from trackpad\n        wheelCoefficient = 1;\n      }\n    }\n    callData.spinY /= wheelCoefficient;\n    if (model.wheelTimeoutID === 0) {\n      publicAPI.startMouseWheelEvent(callData);\n      publicAPI.mouseWheelEvent(callData);\n    } else {\n      publicAPI.mouseWheelEvent(callData);\n      clearTimeout(model.wheelTimeoutID);\n    }\n    if (model.mouseScrollDebounceByPass) {\n      publicAPI.extendAnimation(600);\n      publicAPI.endMouseWheelEvent();\n      model.wheelTimeoutID = 0;\n    } else {\n      // start a timer to keep us animating while we get wheel events\n      model.wheelTimeoutID = setTimeout(() => {\n        publicAPI.extendAnimation(600);\n        publicAPI.endMouseWheelEvent();\n        model.wheelTimeoutID = 0;\n      }, 200);\n    }\n  };\n  publicAPI.handleMouseUp = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonReleaseEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonReleaseEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonReleaseEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button released: ${event.button}`);\n        break;\n    }\n  };\n  publicAPI.handleTouchStart = event => {\n    const pointers = [...pointerCache.values()];\n    // If multitouch\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      // did we just transition to multitouch?\n      if (pointers.length === 2) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      }\n      // handle the gesture\n      publicAPI.recognizeGesture('TouchStart', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: getScreenEventPositionFor(event),\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonPressEvent(callData);\n    }\n  };\n  publicAPI.handleTouchMove = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      publicAPI.recognizeGesture('TouchMove', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.mouseMoveEvent(callData);\n    }\n  };\n  publicAPI.handleTouchEnd = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures) {\n      // No more fingers down\n      if (pointers.length === 0) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: getScreenEventPositionFor(event),\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      } else if (pointers.length === 1) {\n        // If one finger left, end touch and start button press\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchEnd', positions);\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonPressEvent(callData);\n      } else {\n        // If more than one finger left, keep touch move\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchMove', positions);\n      }\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonReleaseEvent(callData);\n    }\n  };\n  publicAPI.setView = val => {\n    if (model._view === val) {\n      return;\n    }\n    model._view = val;\n    model._view.getRenderable().setInteractor(publicAPI);\n    publicAPI.modified();\n  };\n  publicAPI.getFirstRenderer = () => model._view?.getRenderable()?.getRenderersByReference()?.[0];\n  publicAPI.findPokedRenderer = function () {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!model._view) {\n      return null;\n    }\n    // The original order of renderers needs to remain as\n    // the first one is the one we want to manipulate the camera on.\n    const rc = model._view?.getRenderable()?.getRenderers();\n    if (!rc || rc.length === 0) {\n      return null;\n    }\n    rc.sort((a, b) => a.getLayer() - b.getLayer());\n    let interactiveren = null;\n    let viewportren = null;\n    let currentRenderer = null;\n    let count = rc.length;\n    while (count--) {\n      const aren = rc[count];\n      if (model._view.isInViewport(x, y, aren) && aren.getInteractive()) {\n        currentRenderer = aren;\n        break;\n      }\n      if (interactiveren === null && aren.getInteractive()) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        interactiveren = aren;\n      }\n      if (viewportren === null && model._view.isInViewport(x, y, aren)) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        viewportren = aren;\n      }\n    }\n\n    // We must have a value.  If we found an interactive renderer before, that's\n    // better than a non-interactive renderer.\n    if (currentRenderer === null) {\n      currentRenderer = interactiveren;\n    }\n\n    // We must have a value.  If we found a renderer that is in the viewport,\n    // that is better than any old viewport (but not as good as an interactive\n    // one).\n    if (currentRenderer === null) {\n      currentRenderer = viewportren;\n    }\n\n    // We must have a value - take anything.\n    if (currentRenderer == null) {\n      currentRenderer = rc[0];\n    }\n    return currentRenderer;\n  };\n\n  // only render if we are not animating. If we are animating\n  // then renders will happen naturally anyhow and we definitely\n  // do not want extra renders as the make the apparent interaction\n  // rate slower.\n  publicAPI.render = () => {\n    if (!publicAPI.isAnimating() && !model.inRender) {\n      forceRender();\n    }\n  };\n\n  // create the generic Event methods\n  handledEvents.forEach(eventName => {\n    const lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n    publicAPI[`${lowerFirst}Event`] = arg => {\n      // Check that interactor enabled\n      if (!model.enabled) {\n        return;\n      }\n\n      // Check that a poked renderer exists\n      const renderer = publicAPI.getCurrentRenderer();\n      if (!renderer) {\n        vtkOnceErrorMacro(`\n          Can not forward events without a current renderer on the interactor.\n        `);\n        return;\n      }\n\n      // Pass the eventName and the poked renderer\n      const callData = {\n        type: eventName,\n        pokedRenderer: model.currentRenderer,\n        firstRenderer: publicAPI.getFirstRenderer(),\n        // Add the arguments to the call data\n        ...arg\n      };\n\n      // Call invoke\n      publicAPI[`invoke${eventName}`](callData);\n    };\n  });\n\n  // we know we are in multitouch now, so start recognizing\n  publicAPI.recognizeGesture = (event, positions) => {\n    // more than two pointers we ignore\n    if (Object.keys(positions).length > 2) {\n      return;\n    }\n    if (!model.startingEventPositions) {\n      model.startingEventPositions = {};\n    }\n\n    // store the initial positions\n    if (event === 'TouchStart') {\n      Object.keys(positions).forEach(key => {\n        model.startingEventPositions[key] = positions[key];\n      });\n      // we do not know what the gesture is yet\n      model.currentGesture = 'Start';\n      return;\n    }\n\n    // end the gesture if needed\n    if (event === 'TouchEnd') {\n      if (model.currentGesture === 'Pinch') {\n        publicAPI.render();\n        publicAPI.endPinchEvent();\n      }\n      if (model.currentGesture === 'Rotate') {\n        publicAPI.render();\n        publicAPI.endRotateEvent();\n      }\n      if (model.currentGesture === 'Pan') {\n        publicAPI.render();\n        publicAPI.endPanEvent();\n      }\n      model.currentGesture = 'Start';\n      model.startingEventPositions = {};\n      return;\n    }\n\n    // what are the two pointers we are working with\n    let count = 0;\n    const posVals = [];\n    const startVals = [];\n    Object.keys(positions).forEach(key => {\n      posVals[count] = positions[key];\n      startVals[count] = model.startingEventPositions[key];\n      count++;\n    });\n\n    // The meat of the algorithm\n    // on move events we analyze them to determine what type\n    // of movement it is and then deal with it.\n    // calculate the distances\n    const originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));\n    const newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y));\n\n    // calculate rotations\n    let originalAngle = degreesFromRadians(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));\n    let newAngle = degreesFromRadians(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x));\n\n    // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\n    let angleDeviation = newAngle - originalAngle;\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\n    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\n      angleDeviation = newAngle - originalAngle;\n    }\n\n    // calculate the translations\n    const trans = [];\n    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\n    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\n    if (event === 'TouchMove') {\n      // OK we want to\n      // - immediately respond to the user\n      // - allow the user to zoom without panning (saves focal point)\n      // - allow the user to rotate without panning (saves focal point)\n\n      // do we know what gesture we are doing yet? If not\n      // see if we can figure it out\n      if (model.currentGesture === 'Start') {\n        // pinch is a move to/from the center point\n        // rotate is a move along the circumference\n        // pan is a move of the center point\n        // compute the distance along each of these axes in pixels\n        // the first to break thresh wins\n        let thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);\n        if (thresh < 15.0) {\n          thresh = 15.0;\n        }\n        const pinchDistance = Math.abs(newDistance - originalDistance);\n        const rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;\n        const panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);\n        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {\n          model.currentGesture = 'Pinch';\n          const callData = {\n            scale: 1.0,\n            touches: positions\n          };\n          publicAPI.startPinchEvent(callData);\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\n          model.currentGesture = 'Rotate';\n          const callData = {\n            rotation: 0.0,\n            touches: positions\n          };\n          publicAPI.startRotateEvent(callData);\n        } else if (panDistance > thresh) {\n          model.currentGesture = 'Pan';\n          const callData = {\n            translation: [0, 0],\n            touches: positions\n          };\n          publicAPI.startPanEvent(callData);\n        }\n      } else {\n        // if we have found a specific type of movement then\n        // handle it\n        if (model.currentGesture === 'Rotate') {\n          const callData = {\n            rotation: angleDeviation,\n            touches: positions\n          };\n          publicAPI.rotateEvent(callData);\n        }\n        if (model.currentGesture === 'Pinch') {\n          const callData = {\n            scale: newDistance / originalDistance,\n            touches: positions\n          };\n          publicAPI.pinchEvent(callData);\n        }\n        if (model.currentGesture === 'Pan') {\n          const callData = {\n            translation: trans,\n            touches: positions\n          };\n          publicAPI.panEvent(callData);\n        }\n      }\n    }\n  };\n  publicAPI.handleVisibilityChange = () => {\n    model._animationStartTime = Date.now();\n    model._animationFrameCount = 0;\n  };\n  publicAPI.setCurrentRenderer = r => {\n    model._forcedRenderer = !!r;\n    model.currentRenderer = r;\n  };\n  publicAPI.setContainer = container => {\n    _unbindEvents();\n    const res = superClass.setContainer(container ?? null);\n    if (res) {\n      _bindEvents();\n    }\n    return res;\n  };\n\n  // Stop animating if the renderWindowInteractor is deleted.\n  publicAPI.delete = () => {\n    while (animationRequesters.size) {\n      publicAPI.cancelAnimation(animationRequesters.values().next().value);\n    }\n    if (typeof document.hidden !== 'undefined') {\n      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);\n    }\n    if (model.container) {\n      publicAPI.setContainer(null);\n    }\n    superClass.delete();\n  };\n\n  // Use the Page Visibility API to detect when we switch away from or back to\n  // this tab, and reset the animationFrameStart. When tabs are not active, browsers\n  // will stop calling requestAnimationFrame callbacks.\n  if (typeof document.hidden !== 'undefined') {\n    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  renderWindow: null,\n  interactorStyle: null,\n  picker: null,\n  pickingManager: null,\n  initialized: false,\n  enabled: false,\n  enableRender: true,\n  currentRenderer: null,\n  lightFollowCamera: true,\n  desiredUpdateRate: 30.0,\n  stillUpdateRate: 2.0,\n  container: null,\n  // _view: null,\n  recognizeGestures: true,\n  currentGesture: 'Start',\n  animationRequest: null,\n  lastFrameTime: 0.1,\n  recentAnimationFrameRate: 10.0,\n  wheelTimeoutID: 0,\n  moveTimeoutID: 0,\n  lastGamepadValues: {},\n  preventDefaultOnPointerDown: false,\n  preventDefaultOnPointerUp: false,\n  mouseScrollDebounceByPass: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  // run animation at least until this time\n  model._animationExtendedEnd = 0;\n  macro.event(publicAPI, model, 'RenderEvent');\n  handledEvents.forEach(eventName => macro.event(publicAPI, model, eventName));\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['initialized', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', '_view']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['container', 'lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker', 'preventDefaultOnPointerDown', 'preventDefaultOnPointerUp', 'mouseScrollDebounceByPass']);\n  macro.moveToProtected(publicAPI, model, ['view']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkRenderWindowInteractor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowInteractor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowInteractor$1 = {\n  newInstance,\n  extend,\n  handledEvents,\n  ...Constants\n};\n\nexport { vtkRenderWindowInteractor$1 as default, extend, newInstance };\n"],
  "mappings": ";;;;;;;;AAAA,IAAM,SAAS;AAAA,EACb,SAAS;AAAA,EACT,gBAAgB;AAAA,EAChB,iBAAiB;AACnB;AACA,IAAM,QAAQ;AAAA,EACZ,SAAS;AAAA,EACT,SAAS;AAAA,EACT,UAAU;AAAA,EACV,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,GAAG;AAAA,EACH,GAAG;AAAA,EACH,iBAAiB;AAAA;AACnB;AAEA,IAAM,OAAO;AAAA,EACX,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,aAAa;AAAA,EACb,aAAa;AACf;AACA,IAAI,YAAY;AAAA,EACd;AAAA,EACA;AAAA,EACA;AACF;;;ACvBA,IAAM;AAAA,EACJ,QAAAA;AAAA,EACA,OAAAC;AACF,IAAI;AACJ,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;AAMJ,IAAM,oBAAoB;AAAA,EACxB,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,UAAU;AACZ;AACA,IAAM,iBAAiB;AAAA,EACrB,eAAe,CAACA,OAAM,SAASA,OAAM,MAAMA,OAAM,UAAUA,OAAM,YAAYA,OAAM,GAAGA,OAAM,CAAC;AAC/F;AACA,IAAM,gBAAgB,CAAC,kBAAkB,aAAa,gBAAgB,gBAAgB,gBAAgB,cAAc,cAAc,kBAAkB,aAAa,gBAAgB,mBAAmB,qBAAqB,qBAAqB,uBAAuB,oBAAoB,sBAAsB,YAAY,WAAW,SAAS,mBAAmB,cAAc,iBAAiB,cAAc,SAAS,YAAY,YAAY,OAAO,UAAU,eAAe,UAAU,aAAa,YAAY,UAAU,oBAAoB,kBAAkB,oBAAoB,eAAe,kBAAkB,0BAA0B;AAClnB,SAAS,eAAe,OAAO;AAC7B,MAAI,MAAM,YAAY;AACpB,UAAM,eAAe;AAAA,EACvB;AACF;AACA,SAAS,wBAAwB,OAAO;AACtC,QAAM,YAAY,uBAAO,OAAO,IAAI;AACpC,QAAM,QAAQ,UAAQ;AACpB,QAAI;AAAA,MACF;AAAA,MACA;AAAA,IACF,IAAI;AACJ,cAAU,SAAS,IAAI;AAAA,EACzB,CAAC;AACD,SAAO;AACT;AAMA,SAAS,0BAA0B,WAAW,OAAO;AAEnD,QAAM,eAAe,KAAK,2BAA2B;AAGrD,QAAM,aAAa;AAAA,IACjB,GAAG;AAAA,EACL;AAGA,QAAM,sBAAsB,oBAAI,IAAI;AAGpC,QAAM,eAAe,oBAAI,IAAI;AAG7B,MAAI,mBAAmB;AAKvB,YAAU,QAAQ,MAAM;AAQtB,QAAI,CAAC,MAAM,aAAa;AACtB,gBAAU,WAAW;AACrB,UAAI,CAAC,MAAM,aAAa;AACtB;AAAA,MACF;AAAA,IACF;AAGA,cAAU,eAAe;AAAA,EAC3B;AAGA,YAAU,kBAAkB,UAAQ;AAClC,kBAAc,kFAAkF;AAAA,EAClG;AAGA,YAAU,qBAAqB,WAAS;AACtC,QAAI,MAAM,oBAAoB,OAAO;AACnC,UAAI,MAAM,mBAAmB,MAAM;AACjC,cAAM,gBAAgB,cAAc,IAAI;AAAA,MAC1C;AACA,YAAM,kBAAkB;AACxB,UAAI,MAAM,mBAAmB,MAAM;AACjC,YAAI,MAAM,gBAAgB,cAAc,MAAM,WAAW;AACvD,gBAAM,gBAAgB,cAAc,SAAS;AAAA,QAC/C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,YAAU,aAAa,MAAM;AAC3B,UAAM,cAAc;AACpB,cAAU,OAAO;AACjB,cAAU,OAAO;AAAA,EACnB;AACA,YAAU,SAAS,MAAM,UAAU,WAAW,IAAI;AAClD,YAAU,UAAU,MAAM,UAAU,WAAW,KAAK;AACpD,YAAU,iBAAiB,MAAM,gBAAgB,kBAAkB;AACnE,WAAS,sBAAsB,GAAG,GAAG;AACnC,QAAI,CAAC,MAAM,iBAAiB;AAC1B,YAAM,kBAAkB,UAAU,kBAAkB,GAAG,CAAC;AAAA,IAC1D;AAAA,EACF;AACA,YAAU,qBAAqB,MAAM;AACnC,QAAI,MAAM,iBAAiB;AACzB,aAAO,MAAM;AAAA,IACf;AACA,0BAAsB,GAAG,CAAC;AAC1B,WAAO,MAAM;AAAA,EACf;AACA,WAAS,2BAA2B,QAAQ;AAC1C,UAAM,SAAS,MAAM,MAAM,UAAU;AACrC,UAAM,SAAS,OAAO,sBAAsB;AAC5C,UAAM,SAAS,OAAO,QAAQ,OAAO;AACrC,UAAM,SAAS,OAAO,SAAS,OAAO;AACtC,UAAM,WAAW;AAAA,MACf,GAAG,UAAU,OAAO,UAAU,OAAO;AAAA,MACrC,GAAG,UAAU,OAAO,SAAS,OAAO,UAAU,OAAO;AAAA,MACrD,GAAG;AAAA,IACL;AAGA,QAAI,aAAa,QAAQ,KAAK,CAAC,MAAM,iBAAiB;AACpD,4BAAsB,SAAS,GAAG,SAAS,CAAC;AAAA,IAC9C;AACA,WAAO;AAAA,EACT;AAEA,QAAM,4BAA4B,MAAM,8BAA8B;AACtE,WAAS,mBAAmB,OAAO;AACjC,WAAO;AAAA,MACL,YAAY,MAAM;AAAA,MAClB,QAAQ,MAAM;AAAA,MACd,UAAU,MAAM;AAAA,IAClB;AAAA,EACF;AACA,WAAS,WAAW,OAAO;AACzB,UAAM,eAAe,mBAAmB,KAAK;AAC7C,UAAM,OAAO;AAAA,MACX,KAAK,MAAM;AAAA,MACX,SAAS,MAAM;AAAA,MACf,GAAG;AAAA,IACL;AACA,WAAO;AAAA,EACT;AACA,WAAS,iBAAiB,OAAO;AAC/B,WAAO,MAAM,eAAe;AAAA,EAC9B;AACA,QAAM,cAAc,MAAM;AACxB,QAAI,MAAM,cAAc,MAAM;AAC5B;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,cAAU,iBAAiB,eAAe,cAAc;AACxD,cAAU,iBAAiB,SAAS,UAAU,WAAW;AACzD,cAAU,iBAAiB,kBAAkB,UAAU,WAAW;AAClE,cAAU,iBAAiB,gBAAgB,UAAU,kBAAkB;AACvE,cAAU,iBAAiB,gBAAgB,UAAU,kBAAkB;AACvE,cAAU,iBAAiB,eAAe,UAAU,mBAAmB;AAAA,MACrE,SAAS;AAAA,IACX,CAAC;AACD,cAAU,iBAAiB,eAAe,UAAU,mBAAmB;AAAA,MACrE,SAAS;AAAA,IACX,CAAC;AACD,cAAU,iBAAiB,aAAa,UAAU,eAAe;AACjE,cAAU,iBAAiB,iBAAiB,UAAU,mBAAmB;AACzE,aAAS,iBAAiB,YAAY,UAAU,cAAc;AAC9D,aAAS,iBAAiB,WAAW,UAAU,aAAa;AAC5D,aAAS,iBAAiB,SAAS,UAAU,WAAW;AACxD,aAAS,iBAAiB,qBAAqB,UAAU,uBAAuB;AAIhF,cAAU,MAAM,cAAc;AAC9B,cAAU,MAAM,aAAa;AAE7B,cAAU,MAAM,0BAA0B;AAAA,EAC5C;AAIA,YAAU,aAAa,eAAa;AAClC,QAAI,cAAc,MAAM;AACtB;AAAA,IACF;AACA,UAAM,MAAM,WAAW,aAAa,SAAS;AAC7C,QAAI,KAAK;AACP,kBAAY;AAAA,IACd;AAAA,EACF;AACA,QAAM,gBAAgB,MAAM;AAE1B,iBAAa,MAAM,aAAa;AAChC,iBAAa,MAAM,cAAc;AACjC,UAAM,gBAAgB;AACtB,UAAM,iBAAiB;AACvB,uBAAmB;AACnB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,WAAW;AACb,gBAAU,oBAAoB,eAAe,cAAc;AAC3D,gBAAU,oBAAoB,SAAS,UAAU,WAAW;AAC5D,gBAAU,oBAAoB,kBAAkB,UAAU,WAAW;AACrE,gBAAU,oBAAoB,gBAAgB,UAAU,kBAAkB;AAC1E,gBAAU,oBAAoB,gBAAgB,UAAU,kBAAkB;AAC1E,gBAAU,oBAAoB,eAAe,UAAU,mBAAmB;AAAA,QACxE,SAAS;AAAA,MACX,CAAC;AACD,gBAAU,oBAAoB,eAAe,UAAU,mBAAmB;AAAA,QACxE,SAAS;AAAA,MACX,CAAC;AACD,gBAAU,oBAAoB,aAAa,UAAU,eAAe;AACpE,gBAAU,oBAAoB,iBAAiB,UAAU,mBAAmB;AAAA,IAC9E;AACA,aAAS,oBAAoB,YAAY,UAAU,cAAc;AACjE,aAAS,oBAAoB,WAAW,UAAU,aAAa;AAC/D,aAAS,oBAAoB,SAAS,UAAU,WAAW;AAC3D,aAAS,oBAAoB,qBAAqB,UAAU,uBAAuB;AACnF,iBAAa,MAAM;AAAA,EACrB;AACA,YAAU,eAAe,MAAM;AAC7B,kBAAc;AACd,eAAW,aAAa,IAAI;AAAA,EAC9B;AACA,YAAU,iBAAiB,WAAS;AAClC,UAAM,OAAO,WAAW,KAAK;AAC7B,cAAU,cAAc,IAAI;AAAA,EAC9B;AACA,YAAU,gBAAgB,WAAS;AACjC,UAAM,OAAO,WAAW,KAAK;AAC7B,cAAU,aAAa,IAAI;AAAA,EAC7B;AACA,YAAU,cAAc,WAAS;AAC/B,UAAM,OAAO,WAAW,KAAK;AAC7B,cAAU,WAAW,IAAI;AAAA,EAC3B;AACA,YAAU,qBAAqB,WAAS;AACtC,UAAM,WAAW;AAAA,MACf,GAAG,mBAAmB,KAAK;AAAA,MAC3B,UAAU,0BAA0B,KAAK;AAAA,MACzC,YAAY,iBAAiB,KAAK;AAAA,IACpC;AACA,cAAU,kBAAkB,QAAQ;AACpC,QAAI,SAAS,eAAe,SAAS;AACnC,gBAAU,gBAAgB,QAAQ;AAAA,IACpC;AAAA,EACF;AACA,YAAU,qBAAqB,WAAS;AACtC,UAAM,WAAW;AAAA,MACf,GAAG,mBAAmB,KAAK;AAAA,MAC3B,UAAU,0BAA0B,KAAK;AAAA,MACzC,YAAY,iBAAiB,KAAK;AAAA,IACpC;AACA,cAAU,kBAAkB,QAAQ;AACpC,QAAI,SAAS,eAAe,SAAS;AACnC,gBAAU,gBAAgB,QAAQ;AAAA,IACpC;AAAA,EACF;AACA,YAAU,oBAAoB,WAAS;AACrC,QAAI,MAAM,SAAS,KAAK,UAAU,gBAAgB,GAAG;AAEnD;AAAA,IACF;AACA,QAAI,MAAM,6BAA6B;AACrC,qBAAe,KAAK;AAAA,IACtB;AACA,QAAI,MAAM,OAAO,kBAAkB,MAAM,SAAS,GAAG;AACnD,YAAM,OAAO,sBAAsB,MAAM,SAAS;AAAA,IACpD;AACA,UAAM,UAAU,kBAAkB,MAAM,SAAS;AACjD,QAAI,aAAa,IAAI,MAAM,SAAS,GAAG;AACrC,sBAAgB,uDAAuD;AAAA,IACzE;AACA,iBAAa,IAAI,MAAM,WAAW;AAAA,MAChC,WAAW,MAAM;AAAA,MACjB,UAAU,0BAA0B,KAAK;AAAA,IAC3C,CAAC;AACD,YAAQ,MAAM,aAAa;AAAA,MACzB,KAAK;AAAA,MACL,KAAK;AACH,kBAAU,iBAAiB,KAAK;AAChC;AAAA,MACF,KAAK;AAAA,MACL;AACE,kBAAU,gBAAgB,KAAK;AAC/B;AAAA,IACJ;AAAA,EACF;AACA,YAAU,kBAAkB,WAAS;AACnC,QAAI,aAAa,IAAI,MAAM,SAAS,GAAG;AACrC,UAAI,MAAM,2BAA2B;AACnC,uBAAe,KAAK;AAAA,MACtB;AACA,mBAAa,OAAO,MAAM,SAAS;AACnC,YAAM,UAAU,sBAAsB,MAAM,SAAS;AACrD,cAAQ,MAAM,aAAa;AAAA,QACzB,KAAK;AAAA,QACL,KAAK;AACH,oBAAU,eAAe,KAAK;AAC9B;AAAA,QACF,KAAK;AAAA,QACL;AACE,oBAAU,cAAc,KAAK;AAC7B;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACA,YAAU,sBAAsB,WAAS;AACvC,QAAI,aAAa,IAAI,MAAM,SAAS,GAAG;AACrC,mBAAa,OAAO,MAAM,SAAS;AACnC,cAAQ,MAAM,aAAa;AAAA,QACzB,KAAK;AAAA,QACL,KAAK;AACH,oBAAU,eAAe,KAAK;AAC9B;AAAA,QACF,KAAK;AAAA,QACL;AACE,oBAAU,cAAc,KAAK;AAC7B;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACA,YAAU,oBAAoB,WAAS;AACrC,QAAI,aAAa,IAAI,MAAM,SAAS,GAAG;AACrC,YAAM,UAAU,aAAa,IAAI,MAAM,SAAS;AAChD,cAAQ,WAAW,0BAA0B,KAAK;AAAA,IACpD;AACA,YAAQ,MAAM,aAAa;AAAA,MACzB,KAAK;AAAA,MACL,KAAK;AACH,kBAAU,gBAAgB,KAAK;AAC/B;AAAA,MACF,KAAK;AAAA,MACL;AACE,kBAAU,gBAAgB,KAAK;AAC/B;AAAA,IACJ;AAAA,EACF;AACA,YAAU,kBAAkB,WAAS;AACnC,UAAM,WAAW;AAAA,MACf,GAAG,mBAAmB,KAAK;AAAA,MAC3B,UAAU,0BAA0B,KAAK;AAAA,MACzC,YAAY,iBAAiB,KAAK;AAAA,IACpC;AACA,YAAQ,MAAM,QAAQ;AAAA,MACpB,KAAK;AACH,kBAAU,qBAAqB,QAAQ;AACvC;AAAA,MACF,KAAK;AACH,kBAAU,uBAAuB,QAAQ;AACzC;AAAA,MACF,KAAK;AACH,kBAAU,sBAAsB,QAAQ;AACxC;AAAA,MACF;AACE,sBAAc,iCAAiC,MAAM,MAAM,EAAE;AAC7D;AAAA,IACJ;AAAA,EACF;AAGA,YAAU,qBAAqB,MAAM;AACnC,QAAI,MAAM,WAAW;AACnB,YAAM,UAAU,mBAAmB;AAAA,IACrC;AAAA,EACF;AAGA,YAAU,kBAAkB,MAAG;AAvYjC;AAuYoC,0BAAS,oBAAT;AAAA;AAGlC,YAAU,kBAAkB,MAAM,CAAC,CAAC,MAAM,aAAa,SAAS,uBAAuB,MAAM;AAG7F,YAAU,0BAA0B,MAAM;AACxC,QAAI,UAAU,gBAAgB,GAAG;AAC/B,gBAAU,sBAAsB;AAAA,IAClC,OAAO;AACL,gBAAU,oBAAoB;AAAA,IAChC;AAAA,EACF;AAGA,WAAS,cAAc;AACrB,QAAI,MAAM,SAAS,MAAM,WAAW,MAAM,cAAc;AACtD,YAAM,WAAW;AACjB,YAAM,MAAM,kBAAkB;AAC9B,YAAM,WAAW;AAAA,IACnB;AAGA,cAAU,kBAAkB;AAAA,EAC9B;AACA,YAAU,mBAAmB,eAAa;AACxC,QAAI,cAAc,QAAW;AAC3B,oBAAc,8CAA8C;AAC5D;AAAA,IACF;AACA,QAAI,oBAAoB,IAAI,SAAS,GAAG;AACtC,sBAAgB,+CAA+C;AAC/D;AAAA,IACF;AACA,wBAAoB,IAAI,SAAS;AACjC,QAAI,CAAC,MAAM,oBAAoB,oBAAoB,SAAS,KAAK,CAAC,MAAM,aAAa;AACnF,YAAM,sBAAsB,KAAK,IAAI;AACrC,YAAM,uBAAuB;AAC7B,YAAM,mBAAmB,sBAAsB,UAAU,eAAe;AACxE,gBAAU,oBAAoB;AAAA,IAChC;AAAA,EACF;AAIA,YAAU,kBAAkB,cAAY;AACtC,UAAM,SAAS,KAAK,IAAI,IAAI;AAC5B,UAAM,wBAAwB,KAAK,IAAI,MAAM,uBAAuB,MAAM;AAC1E,QAAI,CAAC,MAAM,oBAAoB,oBAAoB,SAAS,KAAK,CAAC,MAAM,aAAa;AACnF,YAAM,sBAAsB,KAAK,IAAI;AACrC,YAAM,uBAAuB;AAC7B,YAAM,mBAAmB,sBAAsB,UAAU,eAAe;AACxE,gBAAU,oBAAoB;AAAA,IAChC;AAAA,EACF;AACA,YAAU,cAAc,MAAM,MAAM,eAAe,MAAM,qBAAqB;AAC9E,YAAU,kBAAkB,SAAU,WAAW;AAC/C,QAAI,cAAc,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AACtF,QAAI,CAAC,oBAAoB,IAAI,SAAS,GAAG;AACvC,UAAI,CAAC,aAAa;AAChB,cAAM,aAAa,aAAa,UAAU,eAAe,UAAU,aAAa,IAAI;AACpF,wBAAgB,GAAG,UAAU,+BAA+B;AAAA,MAC9D;AACA;AAAA,IACF;AACA,wBAAoB,OAAO,SAAS;AACpC,QAAI,MAAM,oBAAoB,oBAAoB,SAAS,KAAK,KAAK,IAAI,IAAI,MAAM,uBAAuB;AACxG,2BAAqB,MAAM,gBAAgB;AAC3C,YAAM,mBAAmB;AACzB,gBAAU,kBAAkB;AAC5B,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AACA,YAAU,sBAAsB,MAAM;AAEpC,QAAI,MAAM,kBAAkB;AAC1B,2BAAqB,MAAM,gBAAgB;AAC3C,YAAM,mBAAmB;AAAA,IAC3B;AACA,UAAM,cAAc;AAAA,EACtB;AACA,YAAU,wBAAwB,MAAM;AACtC,UAAM,cAAc;AACpB,QAAI,oBAAoB,SAAS,GAAG;AAClC,YAAM,2BAA2B;AACjC,YAAM,mBAAmB,sBAAsB,UAAU,eAAe;AAAA,IAC1E;AAAA,EACF;AACA,YAAU,mBAAmB,CAAC,WAAW,SAAS,eAAe;AAE/D,cAAU,aAAa,QAAQ,iBAAe;AAC5C,YAAM,WAAW,YAAY,aAAa,OAAO,OAAO,QAAQ,QAAQ,YAAY,WAAW,UAAU;AACzG,YAAM,gBAAgB,YAAY,aAAa,OAAO,OAAO,QAAQ,QAAQ,YAAY,gBAAgB,UAAU;AACnH,YAAM,UAAU,YAAY;AAC5B,YAAM,OAAO,YAAY;AACzB,UAAI,CAAC,SAAS;AACZ;AAAA,MACF;AACA,UAAI,EAAE,QAAQ,SAAS,MAAM,oBAAoB;AAC/C,cAAM,kBAAkB,QAAQ,KAAK,IAAI;AAAA,UACvC,MAAM;AAAA,YACJ,SAAS,CAAC;AAAA,UACZ;AAAA,UACA,OAAO;AAAA,YACL,SAAS,CAAC;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,YACJ,SAAS,CAAC;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AACA,eAAS,YAAY,GAAG,YAAY,QAAQ,QAAQ,QAAQ,EAAE,WAAW;AACvE,YAAI,EAAE,aAAa,MAAM,kBAAkB,QAAQ,KAAK,EAAE,IAAI,EAAE,UAAU;AACxE,gBAAM,kBAAkB,QAAQ,KAAK,EAAE,IAAI,EAAE,QAAQ,SAAS,IAAI;AAAA,QACpE;AACA,YAAI,MAAM,kBAAkB,QAAQ,KAAK,EAAE,IAAI,EAAE,QAAQ,SAAS,MAAM,QAAQ,QAAQ,SAAS,EAAE,WAAW,YAAY,MAAM;AAC9H,oBAAU,cAAc;AAAA,YACtB;AAAA,YACA,UAAU,SAAS,UAAU;AAAA,YAC7B,aAAa,SAAS,UAAU;AAAA,YAChC,gBAAgB,cAAc,UAAU;AAAA,YACxC,mBAAmB,cAAc,UAAU;AAAA,YAC3C,SAAS,QAAQ,QAAQ,SAAS,EAAE;AAAA,YACpC,QAAQ,YAAY,eAAe,SAASD,QAAO,iBAAiBA,QAAO;AAAA,YAC3E,OAAO,eAAe,QAAQ,OAAO,KAAK,eAAe,QAAQ,OAAO,EAAE,SAAS,IAAI,eAAe,QAAQ,OAAO,EAAE,SAAS,IAAIC,OAAM;AAAA,UAC5I,CAAC;AACD,gBAAM,kBAAkB,QAAQ,KAAK,EAAE,IAAI,EAAE,QAAQ,SAAS,IAAI,QAAQ,QAAQ,SAAS,EAAE;AAAA,QAC/F;AACA,YAAI,MAAM,kBAAkB,QAAQ,KAAK,EAAE,IAAI,EAAE,QAAQ,SAAS,KAAK,YAAY,MAAM;AACvF,oBAAU,YAAY;AAAA,YACpB;AAAA,YACA,UAAU,SAAS,UAAU;AAAA,YAC7B,aAAa,SAAS,UAAU;AAAA,YAChC,gBAAgB,cAAc,UAAU;AAAA,YACxC,mBAAmB,cAAc,UAAU;AAAA,YAC3C,QAAQ,YAAY,eAAe,SAASD,QAAO,iBAAiBA,QAAO;AAAA,UAC7E,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACA,YAAU,kBAAkB,WAAS;AACnC,UAAM,WAAW;AAAA,MACf,GAAG,mBAAmB,KAAK;AAAA,MAC3B,UAAU,0BAA0B,KAAK;AAAA,MACzC,YAAY,iBAAiB,KAAK;AAAA,IACpC;AACA,QAAI,MAAM,kBAAkB,GAAG;AAC7B,gBAAU,oBAAoB,QAAQ;AAAA,IACxC,OAAO;AACL,gBAAU,eAAe,QAAQ;AACjC,mBAAa,MAAM,aAAa;AAAA,IAClC;AAGA,UAAM,gBAAgB,WAAW,MAAM;AACrC,gBAAU,kBAAkB;AAC5B,YAAM,gBAAgB;AAAA,IACxB,GAAG,GAAG;AAAA,EACR;AACA,YAAU,kBAAkB,MAAM;AAChC,UAAM,WAAW,KAAK,IAAI;AAC1B,UAAM;AACN,QAAI,WAAW,MAAM,sBAAsB,OAAU,MAAM,uBAAuB,GAAG;AACnF,YAAM,2BAA2B,OAAU,MAAM,uBAAuB,MAAM,WAAW,MAAM;AAC/F,YAAM,gBAAgB,IAAM,MAAM;AAClC,gBAAU,8BAA8B;AACxC,YAAM,sBAAsB;AAC5B,YAAM,uBAAuB;AAAA,IAC/B;AACA,cAAU,eAAe;AACzB,gBAAY;AACZ,QAAI,oBAAoB,OAAO,KAAK,KAAK,IAAI,IAAI,MAAM,uBAAuB;AAC5E,YAAM,mBAAmB,sBAAsB,UAAU,eAAe;AAAA,IAC1E,OAAO;AACL,2BAAqB,MAAM,gBAAgB;AAC3C,YAAM,mBAAmB;AACzB,gBAAU,kBAAkB;AAC5B,gBAAU,OAAO;AAAA,IACnB;AAAA,EACF;AACA,YAAU,cAAc,WAAS;AAC/B,mBAAe,KAAK;AAkBpB,UAAM,WAAW;AAAA,MACf,GAAG,eAAe,KAAK;AAAA,MACvB,GAAG,mBAAmB,KAAK;AAAA,MAC3B,UAAU,0BAA0B,KAAK;AAAA,MACzC,YAAY,iBAAiB,KAAK;AAAA,IACpC;AAQA,QAAI,MAAM,mBAAmB,GAAG;AAI9B,UAAI,KAAK,IAAI,SAAS,KAAK,KAAK,KAAK;AAEnC,2BAAmB,KAAK,IAAI,SAAS,KAAK;AAAA,MAC5C,OAAO;AAEL,2BAAmB;AAAA,MACrB;AAAA,IACF;AACA,aAAS,SAAS;AAClB,QAAI,MAAM,mBAAmB,GAAG;AAC9B,gBAAU,qBAAqB,QAAQ;AACvC,gBAAU,gBAAgB,QAAQ;AAAA,IACpC,OAAO;AACL,gBAAU,gBAAgB,QAAQ;AAClC,mBAAa,MAAM,cAAc;AAAA,IACnC;AACA,QAAI,MAAM,2BAA2B;AACnC,gBAAU,gBAAgB,GAAG;AAC7B,gBAAU,mBAAmB;AAC7B,YAAM,iBAAiB;AAAA,IACzB,OAAO;AAEL,YAAM,iBAAiB,WAAW,MAAM;AACtC,kBAAU,gBAAgB,GAAG;AAC7B,kBAAU,mBAAmB;AAC7B,cAAM,iBAAiB;AAAA,MACzB,GAAG,GAAG;AAAA,IACR;AAAA,EACF;AACA,YAAU,gBAAgB,WAAS;AACjC,UAAM,WAAW;AAAA,MACf,GAAG,mBAAmB,KAAK;AAAA,MAC3B,UAAU,0BAA0B,KAAK;AAAA,MACzC,YAAY,iBAAiB,KAAK;AAAA,IACpC;AACA,YAAQ,MAAM,QAAQ;AAAA,MACpB,KAAK;AACH,kBAAU,uBAAuB,QAAQ;AACzC;AAAA,MACF,KAAK;AACH,kBAAU,yBAAyB,QAAQ;AAC3C;AAAA,MACF,KAAK;AACH,kBAAU,wBAAwB,QAAQ;AAC1C;AAAA,MACF;AACE,sBAAc,kCAAkC,MAAM,MAAM,EAAE;AAC9D;AAAA,IACJ;AAAA,EACF;AACA,YAAU,mBAAmB,WAAS;AACpC,UAAM,WAAW,CAAC,GAAG,aAAa,OAAO,CAAC;AAE1C,QAAI,MAAM,qBAAqB,SAAS,SAAS,GAAG;AAClD,YAAM,YAAY,wBAAwB,YAAY;AAEtD,UAAI,SAAS,WAAW,GAAG;AACzB,cAAM,WAAW;AAAA,UACf,GAAG,mBAAmB,iBAAiB;AAAA,UACvC,UAAU,SAAS,CAAC,EAAE;AAAA,UACtB,YAAY,iBAAiB,KAAK;AAAA,QACpC;AACA,kBAAU,uBAAuB,QAAQ;AAAA,MAC3C;AAEA,gBAAU,iBAAiB,cAAc,SAAS;AAAA,IACpD,WAAW,SAAS,WAAW,GAAG;AAChC,YAAM,WAAW;AAAA,QACf,GAAG,mBAAmB,iBAAiB;AAAA,QACvC,UAAU,0BAA0B,KAAK;AAAA,QACzC,YAAY,iBAAiB,KAAK;AAAA,MACpC;AACA,gBAAU,qBAAqB,QAAQ;AAAA,IACzC;AAAA,EACF;AACA,YAAU,kBAAkB,WAAS;AACnC,UAAM,WAAW,CAAC,GAAG,aAAa,OAAO,CAAC;AAC1C,QAAI,MAAM,qBAAqB,SAAS,SAAS,GAAG;AAClD,YAAM,YAAY,wBAAwB,YAAY;AACtD,gBAAU,iBAAiB,aAAa,SAAS;AAAA,IACnD,WAAW,SAAS,WAAW,GAAG;AAChC,YAAM,WAAW;AAAA,QACf,GAAG,mBAAmB,iBAAiB;AAAA,QACvC,UAAU,SAAS,CAAC,EAAE;AAAA,QACtB,YAAY,iBAAiB,KAAK;AAAA,MACpC;AACA,gBAAU,eAAe,QAAQ;AAAA,IACnC;AAAA,EACF;AACA,YAAU,iBAAiB,WAAS;AAClC,UAAM,WAAW,CAAC,GAAG,aAAa,OAAO,CAAC;AAC1C,QAAI,MAAM,mBAAmB;AAE3B,UAAI,SAAS,WAAW,GAAG;AACzB,cAAM,WAAW;AAAA,UACf,GAAG,mBAAmB,iBAAiB;AAAA,UACvC,UAAU,0BAA0B,KAAK;AAAA,UACzC,YAAY,iBAAiB,KAAK;AAAA,QACpC;AACA,kBAAU,uBAAuB,QAAQ;AAAA,MAC3C,WAAW,SAAS,WAAW,GAAG;AAEhC,cAAM,YAAY,wBAAwB,YAAY;AACtD,kBAAU,iBAAiB,YAAY,SAAS;AAChD,cAAM,WAAW;AAAA,UACf,GAAG,mBAAmB,iBAAiB;AAAA,UACvC,UAAU,SAAS,CAAC,EAAE;AAAA,UACtB,YAAY,iBAAiB,KAAK;AAAA,QACpC;AACA,kBAAU,qBAAqB,QAAQ;AAAA,MACzC,OAAO;AAEL,cAAM,YAAY,wBAAwB,YAAY;AACtD,kBAAU,iBAAiB,aAAa,SAAS;AAAA,MACnD;AAAA,IACF,WAAW,SAAS,WAAW,GAAG;AAChC,YAAM,WAAW;AAAA,QACf,GAAG,mBAAmB,iBAAiB;AAAA,QACvC,UAAU,SAAS,CAAC,EAAE;AAAA,QACtB,YAAY,iBAAiB,KAAK;AAAA,MACpC;AACA,gBAAU,uBAAuB,QAAQ;AAAA,IAC3C;AAAA,EACF;AACA,YAAU,UAAU,SAAO;AACzB,QAAI,MAAM,UAAU,KAAK;AACvB;AAAA,IACF;AACA,UAAM,QAAQ;AACd,UAAM,MAAM,cAAc,EAAE,cAAc,SAAS;AACnD,cAAU,SAAS;AAAA,EACrB;AACA,YAAU,mBAAmB,MAAG;AApuBlC;AAouBqC,mCAAM,UAAN,mBAAa,oBAAb,mBAA8B,8BAA9B,mBAA0D;AAAA;AAC7F,YAAU,oBAAoB,WAAY;AAruB5C;AAsuBI,QAAI,IAAI,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAC5E,QAAI,IAAI,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAC5E,QAAI,CAAC,MAAM,OAAO;AAChB,aAAO;AAAA,IACT;AAGA,UAAM,MAAK,iBAAM,UAAN,mBAAa,oBAAb,mBAA8B;AACzC,QAAI,CAAC,MAAM,GAAG,WAAW,GAAG;AAC1B,aAAO;AAAA,IACT;AACA,OAAG,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,IAAI,EAAE,SAAS,CAAC;AAC7C,QAAI,iBAAiB;AACrB,QAAI,cAAc;AAClB,QAAI,kBAAkB;AACtB,QAAI,QAAQ,GAAG;AACf,WAAO,SAAS;AACd,YAAM,OAAO,GAAG,KAAK;AACrB,UAAI,MAAM,MAAM,aAAa,GAAG,GAAG,IAAI,KAAK,KAAK,eAAe,GAAG;AACjE,0BAAkB;AAClB;AAAA,MACF;AACA,UAAI,mBAAmB,QAAQ,KAAK,eAAe,GAAG;AAGpD,yBAAiB;AAAA,MACnB;AACA,UAAI,gBAAgB,QAAQ,MAAM,MAAM,aAAa,GAAG,GAAG,IAAI,GAAG;AAGhE,sBAAc;AAAA,MAChB;AAAA,IACF;AAIA,QAAI,oBAAoB,MAAM;AAC5B,wBAAkB;AAAA,IACpB;AAKA,QAAI,oBAAoB,MAAM;AAC5B,wBAAkB;AAAA,IACpB;AAGA,QAAI,mBAAmB,MAAM;AAC3B,wBAAkB,GAAG,CAAC;AAAA,IACxB;AACA,WAAO;AAAA,EACT;AAMA,YAAU,SAAS,MAAM;AACvB,QAAI,CAAC,UAAU,YAAY,KAAK,CAAC,MAAM,UAAU;AAC/C,kBAAY;AAAA,IACd;AAAA,EACF;AAGA,gBAAc,QAAQ,eAAa;AACjC,UAAM,aAAa,UAAU,OAAO,CAAC,EAAE,YAAY,IAAI,UAAU,MAAM,CAAC;AACxE,cAAU,GAAG,UAAU,OAAO,IAAI,SAAO;AAEvC,UAAI,CAAC,MAAM,SAAS;AAClB;AAAA,MACF;AAGA,YAAM,WAAW,UAAU,mBAAmB;AAC9C,UAAI,CAAC,UAAU;AACb,0BAAkB;AAAA;AAAA,SAEjB;AACD;AAAA,MACF;AAGA,YAAM,WAAW;AAAA,QACf,MAAM;AAAA,QACN,eAAe,MAAM;AAAA,QACrB,eAAe,UAAU,iBAAiB;AAAA;AAAA,QAE1C,GAAG;AAAA,MACL;AAGA,gBAAU,SAAS,SAAS,EAAE,EAAE,QAAQ;AAAA,IAC1C;AAAA,EACF,CAAC;AAGD,YAAU,mBAAmB,CAAC,OAAO,cAAc;AAEjD,QAAI,OAAO,KAAK,SAAS,EAAE,SAAS,GAAG;AACrC;AAAA,IACF;AACA,QAAI,CAAC,MAAM,wBAAwB;AACjC,YAAM,yBAAyB,CAAC;AAAA,IAClC;AAGA,QAAI,UAAU,cAAc;AAC1B,aAAO,KAAK,SAAS,EAAE,QAAQ,SAAO;AACpC,cAAM,uBAAuB,GAAG,IAAI,UAAU,GAAG;AAAA,MACnD,CAAC;AAED,YAAM,iBAAiB;AACvB;AAAA,IACF;AAGA,QAAI,UAAU,YAAY;AACxB,UAAI,MAAM,mBAAmB,SAAS;AACpC,kBAAU,OAAO;AACjB,kBAAU,cAAc;AAAA,MAC1B;AACA,UAAI,MAAM,mBAAmB,UAAU;AACrC,kBAAU,OAAO;AACjB,kBAAU,eAAe;AAAA,MAC3B;AACA,UAAI,MAAM,mBAAmB,OAAO;AAClC,kBAAU,OAAO;AACjB,kBAAU,YAAY;AAAA,MACxB;AACA,YAAM,iBAAiB;AACvB,YAAM,yBAAyB,CAAC;AAChC;AAAA,IACF;AAGA,QAAI,QAAQ;AACZ,UAAM,UAAU,CAAC;AACjB,UAAM,YAAY,CAAC;AACnB,WAAO,KAAK,SAAS,EAAE,QAAQ,SAAO;AACpC,cAAQ,KAAK,IAAI,UAAU,GAAG;AAC9B,gBAAU,KAAK,IAAI,MAAM,uBAAuB,GAAG;AACnD;AAAA,IACF,CAAC;AAMD,UAAM,mBAAmB,KAAK,MAAM,UAAU,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,MAAM,UAAU,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,MAAM,UAAU,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,MAAM,UAAU,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE;AAChL,UAAM,cAAc,KAAK,MAAM,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,MAAM,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,MAAM,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,MAAM,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,EAAE;AAG3J,QAAI,gBAAgB,mBAAmB,KAAK,MAAM,UAAU,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;AACnH,QAAI,WAAW,mBAAmB,KAAK,MAAM,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;AAGtG,QAAI,iBAAiB,WAAW;AAChC,eAAW,WAAW,OAAS,MAAQ,WAAW,MAAQ,WAAW;AACrE,oBAAgB,gBAAgB,OAAS,MAAQ,gBAAgB,MAAQ,gBAAgB;AACzF,QAAI,KAAK,IAAI,WAAW,aAAa,IAAI,KAAK,IAAI,cAAc,GAAG;AACjE,uBAAiB,WAAW;AAAA,IAC9B;AAGA,UAAM,QAAQ,CAAC;AACf,UAAM,CAAC,KAAK,QAAQ,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,KAAK;AAC7E,UAAM,CAAC,KAAK,QAAQ,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,KAAK;AAC7E,QAAI,UAAU,aAAa;AAQzB,UAAI,MAAM,mBAAmB,SAAS;AAMpC,YAAI,SAAS,OAAO,KAAK,KAAK,MAAM,UAAU,cAAc,MAAM,UAAU,cAAc,MAAM,UAAU,eAAe,MAAM,UAAU,YAAY;AACrJ,YAAI,SAAS,IAAM;AACjB,mBAAS;AAAA,QACX;AACA,cAAM,gBAAgB,KAAK,IAAI,cAAc,gBAAgB;AAC7D,cAAM,iBAAiB,cAAc,YAAY,KAAK,IAAI,cAAc,IAAI;AAC5E,cAAM,cAAc,KAAK,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC;AACvE,YAAI,gBAAgB,UAAU,gBAAgB,kBAAkB,gBAAgB,aAAa;AAC3F,gBAAM,iBAAiB;AACvB,gBAAM,WAAW;AAAA,YACf,OAAO;AAAA,YACP,SAAS;AAAA,UACX;AACA,oBAAU,gBAAgB,QAAQ;AAAA,QACpC,WAAW,iBAAiB,UAAU,iBAAiB,aAAa;AAClE,gBAAM,iBAAiB;AACvB,gBAAM,WAAW;AAAA,YACf,UAAU;AAAA,YACV,SAAS;AAAA,UACX;AACA,oBAAU,iBAAiB,QAAQ;AAAA,QACrC,WAAW,cAAc,QAAQ;AAC/B,gBAAM,iBAAiB;AACvB,gBAAM,WAAW;AAAA,YACf,aAAa,CAAC,GAAG,CAAC;AAAA,YAClB,SAAS;AAAA,UACX;AACA,oBAAU,cAAc,QAAQ;AAAA,QAClC;AAAA,MACF,OAAO;AAGL,YAAI,MAAM,mBAAmB,UAAU;AACrC,gBAAM,WAAW;AAAA,YACf,UAAU;AAAA,YACV,SAAS;AAAA,UACX;AACA,oBAAU,YAAY,QAAQ;AAAA,QAChC;AACA,YAAI,MAAM,mBAAmB,SAAS;AACpC,gBAAM,WAAW;AAAA,YACf,OAAO,cAAc;AAAA,YACrB,SAAS;AAAA,UACX;AACA,oBAAU,WAAW,QAAQ;AAAA,QAC/B;AACA,YAAI,MAAM,mBAAmB,OAAO;AAClC,gBAAM,WAAW;AAAA,YACf,aAAa;AAAA,YACb,SAAS;AAAA,UACX;AACA,oBAAU,SAAS,QAAQ;AAAA,QAC7B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,YAAU,yBAAyB,MAAM;AACvC,UAAM,sBAAsB,KAAK,IAAI;AACrC,UAAM,uBAAuB;AAAA,EAC/B;AACA,YAAU,qBAAqB,OAAK;AAClC,UAAM,kBAAkB,CAAC,CAAC;AAC1B,UAAM,kBAAkB;AAAA,EAC1B;AACA,YAAU,eAAe,eAAa;AACpC,kBAAc;AACd,UAAM,MAAM,WAAW,aAAa,aAAa,IAAI;AACrD,QAAI,KAAK;AACP,kBAAY;AAAA,IACd;AACA,WAAO;AAAA,EACT;AAGA,YAAU,SAAS,MAAM;AACvB,WAAO,oBAAoB,MAAM;AAC/B,gBAAU,gBAAgB,oBAAoB,OAAO,EAAE,KAAK,EAAE,KAAK;AAAA,IACrE;AACA,QAAI,OAAO,SAAS,WAAW,aAAa;AAC1C,eAAS,oBAAoB,oBAAoB,UAAU,sBAAsB;AAAA,IACnF;AACA,QAAI,MAAM,WAAW;AACnB,gBAAU,aAAa,IAAI;AAAA,IAC7B;AACA,eAAW,OAAO;AAAA,EACpB;AAKA,MAAI,OAAO,SAAS,WAAW,aAAa;AAC1C,aAAS,iBAAiB,oBAAoB,UAAU,wBAAwB,KAAK;AAAA,EACvF;AACF;AAMA,IAAM,iBAAiB;AAAA,EACrB,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,QAAQ;AAAA,EACR,gBAAgB;AAAA,EAChB,aAAa;AAAA,EACb,SAAS;AAAA,EACT,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,iBAAiB;AAAA,EACjB,WAAW;AAAA;AAAA,EAEX,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,0BAA0B;AAAA,EAC1B,gBAAgB;AAAA,EAChB,eAAe;AAAA,EACf,mBAAmB,CAAC;AAAA,EACpB,6BAA6B;AAAA,EAC7B,2BAA2B;AAAA,EAC3B,2BAA2B;AAC7B;AAIA,SAAS,OAAO,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AACzF,SAAO,OAAO,OAAO,gBAAgB,aAAa;AAGlD,QAAM,IAAI,WAAW,KAAK;AAG1B,QAAM,wBAAwB;AAC9B,QAAM,MAAM,WAAW,OAAO,aAAa;AAC3C,gBAAc,QAAQ,eAAa,MAAM,MAAM,WAAW,OAAO,SAAS,CAAC;AAG3E,QAAM,IAAI,WAAW,OAAO,CAAC,eAAe,mBAAmB,iBAAiB,4BAA4B,OAAO,CAAC;AAGpH,QAAM,OAAO,WAAW,OAAO,CAAC,aAAa,qBAAqB,WAAW,gBAAgB,qBAAqB,qBAAqB,mBAAmB,UAAU,+BAA+B,6BAA6B,2BAA2B,CAAC;AAC5P,QAAM,gBAAgB,WAAW,OAAO,CAAC,MAAM,CAAC;AAKhD,4BAA0B,WAAW,KAAK;AAC5C;AAIA,IAAM,cAAc,MAAM,YAAY,QAAQ,2BAA2B;AAIzE,IAAI,8BAA8B;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL;",
  "names": ["Device", "Input"]
}
