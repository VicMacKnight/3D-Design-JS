{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/OpenGL/Camera.js", "../../@kitware/vtk.js/Rendering/OpenGL/Renderer.js", "../../@kitware/vtk.js/Rendering/OpenGL/Actor.js", "../../@kitware/vtk.js/Rendering/OpenGL/Actor2D.js", "../../d3-array/src/ascending.js", "../../d3-array/src/descending.js", "../../d3-array/src/bisector.js", "../../d3-array/src/number.js", "../../d3-array/src/bisect.js", "../../d3-array/src/blur.js", "../../d3-array/src/array.js", "../../d3-array/src/ticks.js", "../../d3-array/src/shuffle.js", "../../d3-scale/src/init.js", "../../d3-scale/src/ordinal.js", "../../d3-color/src/define.js", "../../d3-color/src/color.js", "../../d3-color/src/math.js", "../../d3-color/src/lab.js", "../../d3-color/src/cubehelix.js", "../../d3-interpolate/src/basis.js", "../../d3-interpolate/src/basisClosed.js", "../../d3-interpolate/src/constant.js", "../../d3-interpolate/src/color.js", "../../d3-interpolate/src/rgb.js", "../../d3-interpolate/src/numberArray.js", "../../d3-interpolate/src/array.js", "../../d3-interpolate/src/date.js", "../../d3-interpolate/src/number.js", "../../d3-interpolate/src/object.js", "../../d3-interpolate/src/string.js", "../../d3-interpolate/src/value.js", "../../d3-interpolate/src/round.js", "../../d3-interpolate/src/transform/decompose.js", "../../d3-interpolate/src/transform/parse.js", "../../d3-interpolate/src/transform/index.js", "../../d3-interpolate/src/zoom.js", "../../d3-interpolate/src/hsl.js", "../../d3-interpolate/src/hcl.js", "../../d3-interpolate/src/cubehelix.js", "../../d3-scale/src/constant.js", "../../d3-scale/src/number.js", "../../d3-scale/src/continuous.js", "../../d3-format/src/formatDecimal.js", "../../d3-format/src/exponent.js", "../../d3-format/src/formatGroup.js", "../../d3-format/src/formatNumerals.js", "../../d3-format/src/formatSpecifier.js", "../../d3-format/src/formatTrim.js", "../../d3-format/src/formatPrefixAuto.js", "../../d3-format/src/formatRounded.js", "../../d3-format/src/formatTypes.js", "../../d3-format/src/identity.js", "../../d3-format/src/locale.js", "../../d3-format/src/defaultLocale.js", "../../d3-format/src/precisionFixed.js", "../../d3-format/src/precisionPrefix.js", "../../d3-format/src/precisionRound.js", "../../d3-scale/src/tickFormat.js", "../../d3-scale/src/linear.js", "../../d3-time/src/interval.js", "../../d3-time/src/millisecond.js", "../../d3-time/src/duration.js", "../../d3-time/src/second.js", "../../d3-time/src/minute.js", "../../d3-time/src/hour.js", "../../d3-time/src/day.js", "../../d3-time/src/week.js", "../../d3-time/src/month.js", "../../d3-time/src/year.js", "../../d3-time/src/ticks.js", "../../d3-time-format/src/locale.js", "../../d3-time-format/src/defaultLocale.js", "../../d3-time-format/src/isoFormat.js", "../../d3-time-format/src/isoParse.js", "../../@kitware/vtk.js/Rendering/Core/Texture.js", "../../@kitware/vtk.js/Rendering/Core/CubeAxesActor.js", "../../@kitware/vtk.js/Rendering/OpenGL/CubeAxesActor.js", "../../@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js", "../../@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js", "../../@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js", "../../@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js", "../../@kitware/vtk.js/Rendering/Core/Mapper2D.js", "../../@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DFS.glsl.js", "../../@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DVS.glsl.js", "../../@kitware/vtk.js/Rendering/Core/Property2D/Constants.js", "../../@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper2D.js", "../../@kitware/vtk.js/Rendering/Core/ScalarBarActor.js", "../../@kitware/vtk.js/Rendering/OpenGL/ScalarBarActor.js", "../../@kitware/vtk.js/Rendering/OpenGL/Skybox.js", "../../@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js", "../../@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js", "../../@kitware/vtk.js/Rendering/WebGPU/Camera.js", "../../@kitware/vtk.js/Rendering/WebGPU/BindGroup.js", "../../@kitware/vtk.js/Rendering/WebGPU/ShaderModule.js", "../../@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js", "../../@kitware/vtk.js/Rendering/WebGPU/Pipeline.js", "../../@kitware/vtk.js/Rendering/WebGPU/ShaderDescription.js", "../../@kitware/vtk.js/Rendering/WebGPU/Types.js", "../../@kitware/vtk.js/Rendering/WebGPU/VertexInput.js", "../../@kitware/vtk.js/Rendering/WebGPU/SimpleMapper.js", "../../@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js", "../../@kitware/vtk.js/Rendering/WebGPU/BufferManager/Constants.js", "../../@kitware/vtk.js/Rendering/WebGPU/Buffer.js", "../../@kitware/vtk.js/Rendering/WebGPU/IndexBuffer.js", "../../@kitware/vtk.js/Rendering/WebGPU/BufferManager.js", "../../@kitware/vtk.js/Rendering/WebGPU/StorageBuffer.js", "../../@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js", "../../@kitware/vtk.js/Rendering/WebGPU/Renderer.js", "../../@kitware/vtk.js/Rendering/WebGPU/Actor.js", "../../@kitware/vtk.js/Rendering/WebGPU/Actor2D.js", "../../@kitware/vtk.js/Rendering/WebGPU/CubeAxesActor.js", "../../@kitware/vtk.js/Rendering/Core/Property2D.js", "../../@kitware/vtk.js/Rendering/WebGPU/CellArrayMapper.js", "../../@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper.js", "../../@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper2D.js", "../../@kitware/vtk.js/Rendering/WebGPU/ScalarBarActor.js", "../../@kitware/vtk.js/Rendering/WebGPU/Sampler.js", "../../@kitware/vtk.js/Rendering/WebGPU/TextureView.js", "../../@kitware/vtk.js/Rendering/WebGPU/Texture.js", "../../@kitware/vtk.js/Rendering/WebGPU/PixelSpaceCallbackMapper.js"],
  "sourcesContent": ["import { mat4, mat3 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCamera');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\n      model.context.viewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n      model.context.scissor(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n    }\n  };\n  publicAPI.translucentPass = publicAPI.opaquePass;\n  publicAPI.zBufferPass = publicAPI.opaquePass;\n  publicAPI.opaqueZBufferPass = publicAPI.opaquePass;\n  publicAPI.volumePass = publicAPI.opaquePass;\n  publicAPI.getKeyMatrices = ren => {\n    // has the camera changed?\n    if (ren !== model.lastRenderer || model._openGLRenderWindow.getMTime() > model.keyMatrixTime.getMTime() || publicAPI.getMTime() > model.keyMatrixTime.getMTime() || ren.getMTime() > model.keyMatrixTime.getMTime() || model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.wcvc, model.renderable.getViewMatrix());\n      mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.wcvc);\n      mat3.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, model.keyMatrices.wcvc);\n      const aspectRatio = model._openGLRenderer.getAspectRatio();\n      mat4.copy(model.keyMatrices.vcpc, model.renderable.getProjectionMatrix(aspectRatio, -1, 1));\n      mat4.transpose(model.keyMatrices.vcpc, model.keyMatrices.vcpc);\n      mat4.multiply(model.keyMatrices.wcpc, model.keyMatrices.vcpc, model.keyMatrices.wcvc);\n      model.keyMatrixTime.modified();\n      model.lastRenderer = ren;\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  lastRenderer: null,\n  keyMatrixTime: null,\n  keyMatrices: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime);\n\n  // values always get set by the get method\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(9),\n    vcpc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    wcpc: new Float64Array(16)\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context', 'keyMatrixTime']);\n\n  // Object methods\n  vtkOpenGLCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkCamera = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkCamera', newInstance);\n\nexport { vtkCamera as default, extend, newInstance };\n", "import { n as newInstance$1, g as get, e as setGet, i as moveToProtected, c as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLRenderer methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-bitwise */\n\nfunction vtkOpenGLRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderer');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      publicAPI.updateLights();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getActiveCamera());\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps(), true);\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.updateLights = () => {\n    let count = 0;\n    const lights = model.renderable.getLightsByReference();\n    for (let index = 0; index < lights.length; ++index) {\n      if (lights[index].getSwitch() > 0.0) {\n        count++;\n      }\n    }\n    if (!count) {\n      vtkDebugMacro('No lights are on, creating one.');\n      model.renderable.createLight();\n    }\n    return count;\n  };\n  publicAPI.zBufferPass = prepass => {\n    if (prepass) {\n      let clearMask = 0;\n      const gl = model.context;\n      if (!model.renderable.getTransparent()) {\n        model.context.clearColor(1.0, 0.0, 0.0, 1.0);\n        clearMask |= gl.COLOR_BUFFER_BIT;\n      }\n      if (!model.renderable.getPreserveDepthBuffer()) {\n        gl.clearDepth(1.0);\n        clearMask |= gl.DEPTH_BUFFER_BIT;\n        model.context.depthMask(true);\n      }\n      const ts = publicAPI.getTiledSizeAndOrigin();\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n      gl.colorMask(true, true, true, true);\n      if (clearMask) {\n        gl.clear(clearMask);\n      }\n      gl.enable(gl.DEPTH_TEST);\n    }\n  };\n  publicAPI.opaqueZBufferPass = prepass => publicAPI.zBufferPass(prepass);\n\n  // Renders myself\n  publicAPI.cameraPass = prepass => {\n    if (prepass) {\n      publicAPI.clear();\n    }\n  };\n  publicAPI.getAspectRatio = () => {\n    const size = model._parent.getSizeByReference();\n    const viewport = model.renderable.getViewportByReference();\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\n  };\n  publicAPI.getTiledSizeAndOrigin = () => {\n    const vport = model.renderable.getViewportByReference();\n\n    // if there is no window assume 0 1\n    const tileViewPort = [0.0, 0.0, 1.0, 1.0];\n\n    // find the lower left corner of the viewport, taking into account the\n    // lower left boundary of this tile\n    const vpu = vport[0] - tileViewPort[0];\n    const vpv = vport[1] - tileViewPort[1];\n\n    // store the result as a pixel value\n    const ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\n    const lowerLeftU = Math.round(ndvp[0]);\n    const lowerLeftV = Math.round(ndvp[1]);\n\n    // find the upper right corner of the viewport, taking into account the\n    // lower left boundary of this tile\n    const vpu2 = vport[2] - tileViewPort[0];\n    const vpv2 = vport[3] - tileViewPort[1];\n    const ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2);\n\n    // now compute the size of the intersection of the viewport with the\n    // current tile\n    let usize = Math.round(ndvp2[0]) - lowerLeftU;\n    let vsize = Math.round(ndvp2[1]) - lowerLeftV;\n    if (usize < 0) {\n      usize = 0;\n    }\n    if (vsize < 0) {\n      vsize = 0;\n    }\n    return {\n      usize,\n      vsize,\n      lowerLeftU,\n      lowerLeftV\n    };\n  };\n  publicAPI.clear = () => {\n    let clearMask = 0;\n    const gl = model.context;\n    if (!model.renderable.getTransparent()) {\n      const background = model.renderable.getBackgroundByReference();\n      // renderable ensures that background has 4 entries.\n      gl.clearColor(background[0], background[1], background[2], background[3]);\n      clearMask |= gl.COLOR_BUFFER_BIT;\n    }\n    if (!model.renderable.getPreserveDepthBuffer()) {\n      gl.clearDepth(1.0);\n      clearMask |= gl.DEPTH_BUFFER_BIT;\n      gl.depthMask(true);\n    }\n    gl.colorMask(true, true, true, true);\n    const ts = publicAPI.getTiledSizeAndOrigin();\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\n    if (clearMask) {\n      gl.clear(clearMask);\n    }\n    gl.enable(gl.DEPTH_TEST);\n    /* eslint-enable no-bitwise */\n  };\n\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.selector !== null) {\n      model.selector.releaseGraphicsResources();\n    }\n    // Releasing resources means that the next render should re-create resources\n    if (model.renderable) {\n      model.renderable.getViewProps().forEach(prop => {\n        prop.modified();\n      });\n    }\n  };\n  publicAPI.setOpenGLRenderWindow = rw => {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  _openGLRenderWindow: null,\n  selector: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Build VTK API\n  get(publicAPI, model, ['shaderCache']);\n  setGet(publicAPI, model, ['selector']);\n  moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n\n  // Object methods\n  vtkOpenGLRenderer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLRenderer');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderer = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkRenderer', newInstance);\n\nexport { vtkRenderer as default, extend, newInstance };\n", "import { mat3, mat4 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet, g as get } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getTextures());\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n\n      // we store textures and mapper\n      model.ogltextures = null;\n      model.activeTextures = null;\n      for (let index = 0; index < model.children.length; index++) {\n        const child = model.children[index];\n        if (child.isA('vtkOpenGLTexture')) {\n          if (!model.ogltextures) {\n            model.ogltextures = [];\n          }\n          model.ogltextures.push(child);\n        } else {\n          model.oglmapper = child;\n        }\n      }\n    }\n  };\n\n  // render both opaque and translucent actors\n  publicAPI.traverseZBufferPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  // only render opaque actors\n  publicAPI.traverseOpaqueZBufferPass = renderPass => publicAPI.traverseOpaquePass(renderPass);\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.activateTextures = () => {\n    // always traverse textures first, then mapper\n    if (!model.ogltextures) {\n      return;\n    }\n    model.activeTextures = [];\n    for (let index = 0; index < model.ogltextures.length; index++) {\n      const child = model.ogltextures[index];\n      child.render();\n      if (child.getHandle()) {\n        model.activeTextures.push(child);\n      }\n    }\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n  publicAPI.zBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass);\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass);\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(model._openGLRenderer.getSelector() && model.renderable.getNestedPickable());\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n  publicAPI.getKeyMatrices = () => {\n    // has the actor changed?\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      model.renderable.computeMatrix();\n      mat4.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\n      mat4.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\n      if (model.renderable.getIsIdentity()) {\n        mat3.identity(model.keyMatrices.normalMatrix);\n      } else {\n        mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.mcwc);\n        mat3.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n        mat3.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      }\n      model.keyMatrixTime.modified();\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  keyMatrixTime: null,\n  keyMatrices: null,\n  activeTextures: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: mat3.identity(new Float64Array(9)),\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkActor = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkActor', newInstance);\n\nexport { vtkActor as default, extend, newInstance };\n", "import { n as newInstance$1, e as setGet, g as get } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLActor2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLActor2D');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      model._openGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model.context = model._openGLRenderWindow.getContext();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getTextures());\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n\n      // we store textures and mapper\n      model.ogltextures = null;\n      model.activeTextures = null;\n      for (let index = 0; index < model.children.length; index++) {\n        const child = model.children[index];\n        if (child.isA('vtkOpenGLTexture')) {\n          if (!model.ogltextures) {\n            model.ogltextures = [];\n          }\n          model.ogltextures.push(child);\n        } else {\n          model.oglmapper = child;\n        }\n      }\n    }\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      renderPass.incrementOverlayActorCount();\n    }\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.traverseOverlayPass = renderPass => {\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    model.oglmapper.traverse(renderPass);\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.activateTextures = () => {\n    // always traverse textures first, then mapper\n    if (!model.ogltextures) {\n      return;\n    }\n    model.activeTextures = [];\n    for (let index = 0; index < model.ogltextures.length; index++) {\n      const child = model.ogltextures[index];\n      child.render();\n      if (child.getHandle()) {\n        model.activeTextures.push(child);\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      // deactivate textures\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(false);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n\n  // Renders myself\n  publicAPI.overlayPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.context.depthMask(true);\n      publicAPI.activateTextures();\n    } else if (model.activeTextures) {\n      // deactivate textures\n      for (let index = 0; index < model.activeTextures.length; index++) {\n        model.activeTextures[index].deactivate();\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  activeTextures: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLActor2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkActor2D = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkActor2D', newInstance);\n\nexport { vtkActor2D as default, extend, newInstance };\n", "export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n", "import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n", "export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "export function blur(values, r) {\n  if (!((r = +r) >= 0)) throw new RangeError(\"invalid r\");\n  let length = values.length;\n  if (!((length = Math.floor(length)) >= 0)) throw new RangeError(\"invalid length\");\n  if (!length || !r) return values;\n  const blur = blurf(r);\n  const temp = values.slice();\n  blur(values, temp, 0, length, 1);\n  blur(temp, values, 0, length, 1);\n  blur(values, temp, 0, length, 1);\n  return values;\n}\n\nexport const blur2 = Blur2(blurf);\n\nexport const blurImage = Blur2(blurfImage);\n\nfunction Blur2(blur) {\n  return function(data, rx, ry = rx) {\n    if (!((rx = +rx) >= 0)) throw new RangeError(\"invalid rx\");\n    if (!((ry = +ry) >= 0)) throw new RangeError(\"invalid ry\");\n    let {data: values, width, height} = data;\n    if (!((width = Math.floor(width)) >= 0)) throw new RangeError(\"invalid width\");\n    if (!((height = Math.floor(height !== undefined ? height : values.length / width)) >= 0)) throw new RangeError(\"invalid height\");\n    if (!width || !height || (!rx && !ry)) return data;\n    const blurx = rx && blur(rx);\n    const blury = ry && blur(ry);\n    const temp = values.slice();\n    if (blurx && blury) {\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    } else if (blurx) {\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n    } else if (blury) {\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    }\n    return data;\n  };\n}\n\nfunction blurh(blur, T, S, w, h) {\n  for (let y = 0, n = w * h; y < n;) {\n    blur(T, S, y, y += w, 1);\n  }\n}\n\nfunction blurv(blur, T, S, w, h) {\n  for (let x = 0, n = w * h; x < w; ++x) {\n    blur(T, S, x, x + n, w);\n  }\n}\n\nfunction blurfImage(radius) {\n  const blur = blurf(radius);\n  return (T, S, start, stop, step) => {\n    start <<= 2, stop <<= 2, step <<= 2;\n    blur(T, S, start + 0, stop + 0, step);\n    blur(T, S, start + 1, stop + 1, step);\n    blur(T, S, start + 2, stop + 2, step);\n    blur(T, S, start + 3, stop + 3, step);\n  };\n}\n\n// Given a target array T, a source array S, sets each value T[i] to the average\n// of {S[i - r], …, S[i], …, S[i + r]}, where r = ⌊radius⌋, start <= i < stop,\n// for each i, i + step, i + 2 * step, etc., and where S[j] is clamped between\n// S[start] (inclusive) and S[stop] (exclusive). If the given radius is not an\n// integer, S[i - r - 1] and S[i + r + 1] are added to the sum, each weighted\n// according to r - ⌊radius⌋.\nfunction blurf(radius) {\n  const radius0 = Math.floor(radius);\n  if (radius0 === radius) return bluri(radius);\n  const t = radius - radius0;\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => { // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius0 * S[start];\n    const s0 = step * radius0;\n    const s1 = s0 + step;\n    for (let i = start, j = start + s0; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s0)];\n      T[i] = (sum + t * (S[Math.max(start, i - s1)] + S[Math.min(stop, i + s1)])) / w;\n      sum -= S[Math.max(start, i - s0)];\n    }\n  };\n}\n\n// Like blurf, but optimized for integer radius.\nfunction bluri(radius) {\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => { // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n    let sum = radius * S[start];\n    const s = step * radius;\n    for (let i = start, j = start + s; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s)];\n      T[i] = sum / w;\n      sum -= S[Math.max(start, i - s)];\n    }\n  };\n}\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n", "import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n", "export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n", "import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n", "export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb() {\n    return hcl2lab(this).rgb();\n  }\n}));\n", "import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n", "export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n", "import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n", "export default x => () => x;\n", "import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n", "import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n", "export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n", "import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n", "export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n", "export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n", "import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n", "import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n", "import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n", "export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n", "var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n", "import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n", "import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n", "var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n", "import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n", "import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n", "import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n", "export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function number(x) {\n  return +x;\n}\n", "import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n", "export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n", "export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n", "export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n", "// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n", "// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n", "import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n", "import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n", "export default function(x) {\n  return x;\n}\n", "import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n", "import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n", "import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n", "import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n", "import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n", "const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n", "import {timeInterval} from \"./interval.js\";\n\nexport const millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = (k) => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval((date) => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;\n", "export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nexport const second = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds());\n}, (date, step) => {\n  date.setTime(+date + step * durationSecond);\n}, (start, end) => {\n  return (end - start) / durationSecond;\n}, (date) => {\n  return date.getUTCSeconds();\n});\n\nexport const seconds = second.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeMinute = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getMinutes();\n});\n\nexport const timeMinutes = timeMinute.range;\n\nexport const utcMinute = timeInterval((date) => {\n  date.setUTCSeconds(0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getUTCMinutes();\n});\n\nexport const utcMinutes = utcMinute.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeHour = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getHours();\n});\n\nexport const timeHours = timeHour.range;\n\nexport const utcHour = timeInterval((date) => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getUTCHours();\n});\n\nexport const utcHours = utcHour.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nexport const timeDay = timeInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport const timeDays = timeDay.range;\n\nexport const utcDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return date.getUTCDate() - 1;\n});\n\nexport const utcDays = utcDay.range;\n\nexport const unixDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return Math.floor(date / durationDay);\n});\n\nexport const unixDays = unixDay.range;\n", "import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction timeWeekday(i) {\n  return timeInterval((date) => {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setDate(date.getDate() + step * 7);\n  }, (start, end) => {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport const timeSunday = timeWeekday(0);\nexport const timeMonday = timeWeekday(1);\nexport const timeTuesday = timeWeekday(2);\nexport const timeWednesday = timeWeekday(3);\nexport const timeThursday = timeWeekday(4);\nexport const timeFriday = timeWeekday(5);\nexport const timeSaturday = timeWeekday(6);\n\nexport const timeSundays = timeSunday.range;\nexport const timeMondays = timeMonday.range;\nexport const timeTuesdays = timeTuesday.range;\nexport const timeWednesdays = timeWednesday.range;\nexport const timeThursdays = timeThursday.range;\nexport const timeFridays = timeFriday.range;\nexport const timeSaturdays = timeSaturday.range;\n\nfunction utcWeekday(i) {\n  return timeInterval((date) => {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, (start, end) => {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport const utcSunday = utcWeekday(0);\nexport const utcMonday = utcWeekday(1);\nexport const utcTuesday = utcWeekday(2);\nexport const utcWednesday = utcWeekday(3);\nexport const utcThursday = utcWeekday(4);\nexport const utcFriday = utcWeekday(5);\nexport const utcSaturday = utcWeekday(6);\n\nexport const utcSundays = utcSunday.range;\nexport const utcMondays = utcMonday.range;\nexport const utcTuesdays = utcTuesday.range;\nexport const utcWednesdays = utcWednesday.range;\nexport const utcThursdays = utcThursday.range;\nexport const utcFridays = utcFriday.range;\nexport const utcSaturdays = utcSaturday.range;\n", "import {timeInterval} from \"./interval.js\";\n\nexport const timeMonth = timeInterval((date) => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setMonth(date.getMonth() + step);\n}, (start, end) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, (date) => {\n  return date.getMonth();\n});\n\nexport const timeMonths = timeMonth.range;\n\nexport const utcMonth = timeInterval((date) => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, (start, end) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, (date) => {\n  return date.getUTCMonth();\n});\n\nexport const utcMonths = utcMonth.range;\n", "import {timeInterval} from \"./interval.js\";\n\nexport const timeYear = timeInterval((date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, (date) => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\n\nexport const utcYear = timeInterval((date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, (date) => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;\n", "import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport {millisecond} from \"./millisecond.js\";\nimport {second} from \"./second.js\";\nimport {timeMinute, utcMinute} from \"./minute.js\";\nimport {timeHour, utcHour} from \"./hour.js\";\nimport {timeDay, unixDay} from \"./day.js\";\nimport {timeSunday, utcSunday} from \"./week.js\";\nimport {timeMonth, utcMonth} from \"./month.js\";\nimport {timeYear, utcYear} from \"./year.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n", "import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n", "import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n", "import {utcFormat} from \"./defaultLocale.js\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n", "import {isoSpecifier} from \"./isoFormat.js\";\nimport {utcParse} from \"./defaultLocale.js\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n", "import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTexture');\n  publicAPI.imageLoaded = () => {\n    model.image.removeEventListener('load', publicAPI.imageLoaded);\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n  publicAPI.setJsImageData = imageData => {\n    if (model.jsImageData === imageData) {\n      return;\n    }\n\n    // clear other entries\n    if (imageData !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.canvas = null;\n    }\n    model.jsImageData = imageData;\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n  publicAPI.setCanvas = canvas => {\n    if (model.canvas === canvas) {\n      return;\n    }\n\n    // clear other entries\n    if (canvas !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.jsImageData = null;\n    }\n    model.canvas = canvas;\n    publicAPI.modified();\n  };\n  publicAPI.setImage = image => {\n    if (model.image === image) {\n      return;\n    }\n\n    // clear other entries\n    if (image !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.canvas = null;\n      model.jsImageData = null;\n    }\n    model.image = image;\n    model.imageLoaded = false;\n    if (image.complete) {\n      publicAPI.imageLoaded();\n    } else {\n      image.addEventListener('load', publicAPI.imageLoaded);\n    }\n    publicAPI.modified();\n  };\n  publicAPI.getDimensionality = () => {\n    let width = 0;\n    let height = 0;\n    let depth = 1;\n    if (publicAPI.getInputData()) {\n      const data = publicAPI.getInputData();\n      width = data.getDimensions()[0];\n      height = data.getDimensions()[1];\n      depth = data.getDimensions()[2];\n    }\n    if (model.jsImageData) {\n      width = model.jsImageData.width;\n      height = model.jsImageData.height;\n    }\n    if (model.canvas) {\n      width = model.canvas.width;\n      height = model.canvas.height;\n    }\n    if (model.image) {\n      width = model.image.width;\n      height = model.image.height;\n    }\n    const dimensionality = (width > 1) + (height > 1) + (depth > 1);\n    return dimensionality;\n  };\n  publicAPI.getInputAsJsImageData = () => {\n    if (!model.imageLoaded || publicAPI.getInputData()) return null;\n    if (model.jsImageData) {\n      return model.jsImageData();\n    }\n    if (model.canvas) {\n      const context = model.canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, model.canvas.width, model.canvas.height);\n      return imageData;\n    }\n    if (model.image) {\n      const canvas = document.createElement('canvas');\n      canvas.width = model.image.width;\n      canvas.height = model.image.height;\n      const context = canvas.getContext('2d');\n      context.translate(0, canvas.height);\n      context.scale(1, -1);\n      context.drawImage(model.image, 0, 0, model.image.width, model.image.height);\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n      return imageData;\n    }\n    return null;\n  };\n}\n\n// Use nativeArray instead of self\nconst generateMipmaps = (nativeArray, width, height, level) => {\n  // TODO: FIX UNEVEN TEXTURE MIP GENERATION:\n  // When textures don't have standard ratios, higher mip levels\n  // result in their color chanels getting messed up and shifting\n  // 3x3 gaussian kernel\n  const g3m = [1, 2, 1]; // eslint-disable-line\n  const g3w = 4; // eslint-disable-line\n\n  const kernel = g3m;\n  const kernelWeight = g3w;\n  const hs = nativeArray.length / (width * height); // TODO: support for textures with depth more than 1\n  let currentWidth = width;\n  let currentHeight = height;\n  let imageData = nativeArray;\n  const maps = [imageData];\n  for (let i = 0; i < level; i++) {\n    const oldData = [...imageData];\n    currentWidth /= 2;\n    currentHeight /= 2;\n    imageData = new Uint8ClampedArray(currentWidth * currentHeight * hs);\n    const vs = hs * currentWidth;\n\n    // Scale down\n    let shift = 0;\n    for (let p = 0; p < imageData.length; p += hs) {\n      if (p % vs === 0) {\n        shift += 2 * hs * currentWidth;\n      }\n      for (let c = 0; c < hs; c++) {\n        let sample = oldData[shift + c];\n        sample += oldData[shift + hs + c];\n        sample += oldData[shift - 2 * vs + c];\n        sample += oldData[shift - 2 * vs + hs + c];\n        sample /= 4;\n        imageData[p + c] = sample;\n      }\n      shift += 2 * hs;\n    }\n\n    // Horizontal Pass\n    let dataCopy = [...imageData];\n    for (let p = 0; p < imageData.length; p += hs) {\n      for (let c = 0; c < hs; c++) {\n        let x = -(kernel.length - 1) / 2;\n        let kw = kernelWeight;\n        let value = 0.0;\n        for (let k = 0; k < kernel.length; k++) {\n          let index = p + c + x * hs;\n          const lineShift = index % vs - (p + c) % vs;\n          if (lineShift > hs) index += vs;\n          if (lineShift < -hs) index -= vs;\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n          x += 1;\n        }\n        imageData[p + c] = value / kw;\n      }\n    }\n    // Vertical Pass\n    dataCopy = [...imageData];\n    for (let p = 0; p < imageData.length; p += hs) {\n      for (let c = 0; c < hs; c++) {\n        let x = -(kernel.length - 1) / 2;\n        let kw = kernelWeight;\n        let value = 0.0;\n        for (let k = 0; k < kernel.length; k++) {\n          const index = p + c + x * vs;\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n          x += 1;\n        }\n        imageData[p + c] = value / kw;\n      }\n    }\n    maps.push(imageData);\n  }\n  return maps;\n};\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  image: null,\n  canvas: null,\n  jsImageData: null,\n  imageLoaded: false,\n  repeat: false,\n  interpolate: false,\n  edgeClamp: false,\n  mipLevel: 0,\n  resizable: false // must be set at construction time if the texture can be resizable\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 6, 0);\n  macro.get(publicAPI, model, ['canvas', 'image', 'jsImageData', 'imageLoaded', 'resizable']);\n  macro.setGet(publicAPI, model, ['repeat', 'edgeClamp', 'interpolate', 'mipLevel']);\n  vtkTexture(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkTexture');\nconst STATIC = {\n  generateMipmaps\n};\n\n// ----------------------------------------------------------------------------\n\nvar vtkTexture$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkTexture$1 as default, extend, newInstance };\n", "import { vec3, mat4 } from 'gl-matrix';\nimport * as d3 from 'd3-scale';\nimport { Q as normalize2D, R as nearestPowerOfTwo } from '../../Common/Core/Math/index.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkActor from './Actor.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkMapper from './Mapper.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkTexture from './Texture.js';\n\n// ----------------------------------------------------------------------------\n// vtkCubeAxesActor\n// ----------------------------------------------------------------------------\n// faces are -x x -y y -z z\n// point 0 is 0,0,0 and then +x fastest changing, +y then +z\nconst faceNormals = [[-1, 0, 0], [1, 0, 0], [0, -1, 0], [0, 1, 0], [0, 0, -1], [0, 0, 1]];\nconst faceEdges = [[8, 7, 11, 3], [9, 1, 10, 5], [4, 9, 0, 8], [2, 11, 6, 10], [0, 3, 2, 1], [4, 5, 6, 7]];\nconst edgePoints = [[0, 1], [1, 3], [2, 3], [0, 2], [4, 5], [5, 7], [6, 7], [4, 6], [0, 4], [1, 5], [3, 7], [2, 6]];\nconst edgeAxes = [0, 1, 0, 1, 0, 1, 0, 1, 2, 2, 2, 2];\nconst faceAxes = [[1, 2], [1, 2], [0, 2], [0, 2], [0, 1], [0, 1]];\n\n//\n// Developer note: This class is broken into the main class and a helper\n// class. The main class holds view independent properties (those properties\n// that do not change as the view's resolution/aspect ratio change). The\n// helper class is instantiated one per view and holds properties that can\n// depend on view specific values such as resolution. The helper class code\n// could have been left to the View specific implementation (such as\n// vtkWebGPUCubeAxesActor) but is instead placed here to it can be shared by\n// multiple rendering backends.\n//\n\n// some shared temp variables to reduce heap allocs\nconst ptv3 = new Float64Array(3);\nconst pt2v3 = new Float64Array(3);\nconst tmpv3 = new Float64Array(3);\nconst tmp2v3 = new Float64Array(3);\nconst xDir = new Float64Array(3);\nconst yDir = new Float64Array(3);\nconst invmat = new Float64Array(16);\nfunction applyTextStyle(ctx, style) {\n  ctx.strokeStyle = style.strokeColor;\n  ctx.lineWidth = style.strokeSize;\n  ctx.fillStyle = style.fontColor;\n  ctx.font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\n}\nfunction defaultGenerateTicks(dataBounds) {\n  const ticks = [];\n  const tickStrings = [];\n  for (let i = 0; i < 3; i++) {\n    const scale = d3.scaleLinear().domain([dataBounds[i * 2], dataBounds[i * 2 + 1]]);\n    ticks[i] = scale.ticks(5);\n    const format = scale.tickFormat(5);\n    tickStrings[i] = ticks[i].map(format);\n  }\n  return {\n    ticks,\n    tickStrings\n  };\n}\n\n// many properties of this actor depend on the API specific view The main\n// dependency being the resolution as that drives what font sizes to use.\n// Bacause of this we need to do some of the calculations in a API specific\n// subclass. But... we don't want a lot of duplicated code between WebGL and\n// WebGPU for example so we have this helper class, that is designed to be\n// fairly API independent so that API specific views can call this to do\n// most of the work.\nfunction vtkCubeAxesActorHelper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCubeAxesActorHelper');\n  publicAPI.setRenderable = renderable => {\n    if (model.renderable === renderable) {\n      return;\n    }\n    model.renderable = renderable;\n    model.tmActor.addTexture(model.renderable.getTmTexture());\n    model.tmActor.setProperty(renderable.getProperty());\n    model.tmActor.setParentProp(renderable);\n    publicAPI.modified();\n  };\n\n  // called by updateTexturePolyData\n  publicAPI.createPolyDataForOneLabel = (text, pos, cmat, imat, dir, offset, results) => {\n    const value = model.renderable.get_tmAtlas().get(text);\n    if (!value) {\n      return;\n    }\n    const coords = model.renderable.getTextPolyData().getPoints().getData();\n\n    // compute pixel to distance factors\n    const size = model.lastSize;\n    ptv3[0] = coords[pos * 3];\n    ptv3[1] = coords[pos * 3 + 1];\n    ptv3[2] = coords[pos * 3 + 2];\n    vec3.transformMat4(tmpv3, ptv3, cmat);\n    // moving 0.1 in NDC\n    tmpv3[0] += 0.1;\n    vec3.transformMat4(pt2v3, tmpv3, imat);\n    // results in WC move of\n    vec3.subtract(xDir, pt2v3, ptv3);\n    tmpv3[0] -= 0.1;\n    tmpv3[1] += 0.1;\n    vec3.transformMat4(pt2v3, tmpv3, imat);\n    // results in WC move of\n    vec3.subtract(yDir, pt2v3, ptv3);\n    for (let i = 0; i < 3; i++) {\n      xDir[i] /= 0.5 * 0.1 * size[0];\n      yDir[i] /= 0.5 * 0.1 * size[1];\n    }\n\n    // have to find the four corners of the texture polygon for this label\n    // convert anchor point to View Coords\n    let ptIdx = results.ptIdx;\n    let cellIdx = results.cellIdx;\n    ptv3[0] = coords[pos * 3];\n    ptv3[1] = coords[pos * 3 + 1];\n    ptv3[2] = coords[pos * 3 + 2];\n    // horizontal left, right, or middle alignment based on dir[0]\n    if (dir[0] < -0.5) {\n      vec3.scale(tmpv3, xDir, dir[0] * offset - value.width);\n    } else if (dir[0] > 0.5) {\n      vec3.scale(tmpv3, xDir, dir[0] * offset);\n    } else {\n      vec3.scale(tmpv3, xDir, dir[0] * offset - value.width / 2.0);\n    }\n    vec3.add(ptv3, ptv3, tmpv3);\n    vec3.scale(tmpv3, yDir, dir[1] * offset - value.height / 2.0);\n    vec3.add(ptv3, ptv3, tmpv3);\n    results.points[ptIdx * 3] = ptv3[0];\n    results.points[ptIdx * 3 + 1] = ptv3[1];\n    results.points[ptIdx * 3 + 2] = ptv3[2];\n    results.tcoords[ptIdx * 2] = value.tcoords[0];\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[1];\n    ptIdx++;\n    vec3.scale(tmpv3, xDir, value.width);\n    vec3.add(ptv3, ptv3, tmpv3);\n    results.points[ptIdx * 3] = ptv3[0];\n    results.points[ptIdx * 3 + 1] = ptv3[1];\n    results.points[ptIdx * 3 + 2] = ptv3[2];\n    results.tcoords[ptIdx * 2] = value.tcoords[2];\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[3];\n    ptIdx++;\n    vec3.scale(tmpv3, yDir, value.height);\n    vec3.add(ptv3, ptv3, tmpv3);\n    results.points[ptIdx * 3] = ptv3[0];\n    results.points[ptIdx * 3 + 1] = ptv3[1];\n    results.points[ptIdx * 3 + 2] = ptv3[2];\n    results.tcoords[ptIdx * 2] = value.tcoords[4];\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[5];\n    ptIdx++;\n    vec3.scale(tmpv3, xDir, value.width);\n    vec3.subtract(ptv3, ptv3, tmpv3);\n    results.points[ptIdx * 3] = ptv3[0];\n    results.points[ptIdx * 3 + 1] = ptv3[1];\n    results.points[ptIdx * 3 + 2] = ptv3[2];\n    results.tcoords[ptIdx * 2] = value.tcoords[6];\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[7];\n    ptIdx++;\n\n    // add the two triangles to represent the quad\n    results.polys[cellIdx * 4] = 3;\n    results.polys[cellIdx * 4 + 1] = ptIdx - 4;\n    results.polys[cellIdx * 4 + 2] = ptIdx - 3;\n    results.polys[cellIdx * 4 + 3] = ptIdx - 2;\n    cellIdx++;\n    results.polys[cellIdx * 4] = 3;\n    results.polys[cellIdx * 4 + 1] = ptIdx - 4;\n    results.polys[cellIdx * 4 + 2] = ptIdx - 2;\n    results.polys[cellIdx * 4 + 3] = ptIdx - 1;\n    results.ptIdx += 4;\n    results.cellIdx += 2;\n  };\n\n  // update the polydata associated with drawing the text labels\n  // specifically the quads used for each label and their associated tcoords\n  // etc. This changes every time the camera viewpoint changes\n  publicAPI.updateTexturePolyData = () => {\n    const cmat = model.camera.getCompositeProjectionMatrix(model.lastAspectRatio, -1, 1);\n    mat4.transpose(cmat, cmat);\n\n    // update the polydata\n    const numLabels = model.renderable.getTextValues().length;\n    const numPts = numLabels * 4;\n    const numTris = numLabels * 2;\n    const points = new Float64Array(numPts * 3);\n    const polys = new Uint16Array(numTris * 4);\n    const tcoords = new Float32Array(numPts * 2);\n    mat4.invert(invmat, cmat);\n    const results = {\n      ptIdx: 0,\n      cellIdx: 0,\n      polys,\n      points,\n      tcoords\n    };\n    let ptIdx = 0;\n    let textIdx = 0;\n    let axisIdx = 0;\n    const coords = model.renderable.getTextPolyData().getPoints().getData();\n    const textValues = model.renderable.getTextValues();\n    while (ptIdx < coords.length / 3) {\n      // compute the direction to move out\n      ptv3[0] = coords[ptIdx * 3];\n      ptv3[1] = coords[ptIdx * 3 + 1];\n      ptv3[2] = coords[ptIdx * 3 + 2];\n      vec3.transformMat4(tmpv3, ptv3, cmat);\n      ptv3[0] = coords[ptIdx * 3 + 3];\n      ptv3[1] = coords[ptIdx * 3 + 4];\n      ptv3[2] = coords[ptIdx * 3 + 5];\n      vec3.transformMat4(tmp2v3, ptv3, cmat);\n      vec3.subtract(tmpv3, tmpv3, tmp2v3);\n      const dir = [tmpv3[0], tmpv3[1]];\n      normalize2D(dir);\n\n      // write the axis label\n      publicAPI.createPolyDataForOneLabel(textValues[textIdx], ptIdx, cmat, invmat, dir, model.renderable.getAxisTitlePixelOffset(), results);\n      ptIdx += 2;\n      textIdx++;\n\n      // write the tick labels\n      for (let t = 0; t < model.renderable.getTickCounts()[axisIdx]; t++) {\n        publicAPI.createPolyDataForOneLabel(textValues[textIdx], ptIdx, cmat, invmat, dir, model.renderable.getTickLabelPixelOffset(), results);\n        ptIdx++;\n        textIdx++;\n      }\n      axisIdx++;\n    }\n    const tcoordDA = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcoords,\n      name: 'TextureCoordinates'\n    });\n    model.tmPolyData.getPointData().setTCoords(tcoordDA);\n    model.tmPolyData.getPoints().setData(points, 3);\n    model.tmPolyData.getPoints().modified();\n    model.tmPolyData.getPolys().setData(polys, 1);\n    model.tmPolyData.getPolys().modified();\n    model.tmPolyData.modified();\n  };\n  publicAPI.updateAPISpecificData = (size, camera, renderWindow) => {\n    // has the size changed?\n    if (model.lastSize[0] !== size[0] || model.lastSize[1] !== size[1]) {\n      model.lastSize[0] = size[0];\n      model.lastSize[1] = size[1];\n      model.lastAspectRatio = size[0] / size[1];\n      model.forceUpdate = true;\n    }\n    model.camera = camera;\n\n    // compute bounds for label quads whenever the camera changes\n    publicAPI.updateTexturePolyData();\n  };\n}\nconst newCubeAxesActorHelper = macro.newInstance(function (publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    renderable: null\n  };\n  Object.assign(model, {}, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  model.tmPolyData = vtkPolyData.newInstance();\n  model.tmMapper = vtkMapper.newInstance();\n  model.tmMapper.setInputData(model.tmPolyData);\n  model.tmActor = vtkActor.newInstance({\n    parentProp: publicAPI\n  });\n  model.tmActor.setMapper(model.tmMapper);\n  macro.setGet(publicAPI, model, ['renderable']);\n  macro.get(publicAPI, model, ['lastSize', 'lastAspectRatio', 'axisTextStyle', 'tickTextStyle', 'tmActor', 'ticks']);\n  model.forceUpdate = false;\n  model.lastRedrawTime = {};\n  macro.obj(model.lastRedrawTime, {\n    mtime: 0\n  });\n  model.lastRebuildTime = {};\n  macro.obj(model.lastRebuildTime, {\n    mtime: 0\n  });\n  model.lastSize = [-1, -1];\n\n  // internal variables\n  model.lastTickBounds = [];\n  vtkCubeAxesActorHelper(publicAPI, model);\n}, 'vtkCubeAxesActorHelper');\nfunction vtkCubeAxesActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCubeAxesActor');\n  publicAPI.setCamera = cam => {\n    if (model.camera === cam) {\n      return;\n    }\n    if (model.cameraModifiedSub) {\n      model.cameraModifiedSub.unsubscribe();\n      model.cameraModifiedSub = null;\n    }\n    model.camera = cam;\n    if (cam) {\n      model.cameraModifiedSub = cam.onModified(publicAPI.update);\n    }\n    publicAPI.update();\n    publicAPI.modified();\n  };\n\n  // estimate from a camera model what faces to draw\n  // return true if the list of faces to draw has changed\n  publicAPI.computeFacesToDraw = () => {\n    const cmat = model.camera.getViewMatrix();\n    mat4.transpose(cmat, cmat);\n    let changed = false;\n    const length = vtkBoundingBox.getDiagonalLength(model.dataBounds);\n    const faceDot = Math.sin(model.faceVisibilityAngle * Math.PI / 180.0);\n    for (let f = 0; f < 6; f++) {\n      let drawit = false;\n      const faceAxis = Math.floor(f / 2);\n      const otherAxis1 = (faceAxis + 1) % 3;\n      const otherAxis2 = (faceAxis + 2) % 3;\n      // only for non degenerate axes\n      if (model.dataBounds[otherAxis1 * 2] !== model.dataBounds[otherAxis1 * 2 + 1] && model.dataBounds[otherAxis2 * 2] !== model.dataBounds[otherAxis2 * 2 + 1]) {\n        // for each face transform the center and off center to get a direction vector\n        ptv3[faceAxis] = model.dataBounds[f] - 0.1 * length * faceNormals[f][faceAxis];\n        ptv3[otherAxis1] = 0.5 * (model.dataBounds[otherAxis1 * 2] + model.dataBounds[otherAxis1 * 2 + 1]);\n        ptv3[otherAxis2] = 0.5 * (model.dataBounds[otherAxis2 * 2] + model.dataBounds[otherAxis2 * 2 + 1]);\n        vec3.transformMat4(tmpv3, ptv3, cmat);\n        ptv3[faceAxis] = model.dataBounds[f];\n        vec3.transformMat4(tmp2v3, ptv3, cmat);\n        vec3.subtract(tmpv3, tmp2v3, tmpv3);\n        vec3.normalize(tmpv3, tmpv3);\n        // tmpv3 now holds the face normal vector\n        drawit = tmpv3[2] > faceDot;\n        // for perspctive we need the view direction to the plane\n        if (!model.camera.getParallelProjection()) {\n          vec3.normalize(tmp2v3, tmp2v3);\n          drawit = vec3.dot(tmp2v3, tmpv3) > faceDot;\n        }\n      }\n      if (drawit !== model.lastFacesToDraw[f]) {\n        model.lastFacesToDraw[f] = drawit;\n        changed = true;\n      }\n    }\n    return changed;\n  };\n\n  // update the polydata that represents the boundingd edges and gridlines\n  publicAPI.updatePolyData = (facesToDraw, edgesToDraw, ticks) => {\n    // compute the number of points and lines required\n    let numPts = 0;\n    let numLines = 0;\n    numPts += 8; // always start with the 8 cube points\n\n    // count edgesToDraw\n    let numEdgesToDraw = 0;\n    for (let e = 0; e < 12; e++) {\n      if (edgesToDraw[e] > 0) {\n        numEdgesToDraw++;\n      }\n    }\n    numLines += numEdgesToDraw;\n\n    // add values for gridlines\n    if (model.gridLines) {\n      for (let f = 0; f < 6; f++) {\n        if (facesToDraw[f]) {\n          numPts += ticks[faceAxes[f][0]].length * 2 + ticks[faceAxes[f][1]].length * 2;\n          numLines += ticks[faceAxes[f][0]].length + ticks[faceAxes[f][1]].length;\n        }\n      }\n    }\n\n    // now allocate the memory\n    const points = new Float64Array(numPts * 3);\n    const lines = new Uint32Array(numLines * 3);\n    let ptIdx = 0;\n    let lineIdx = 0;\n\n    // add the 8 corner points\n    for (let z = 0; z < 2; z++) {\n      for (let y = 0; y < 2; y++) {\n        for (let x = 0; x < 2; x++) {\n          points[ptIdx * 3] = model.dataBounds[x];\n          points[ptIdx * 3 + 1] = model.dataBounds[2 + y];\n          points[ptIdx * 3 + 2] = model.dataBounds[4 + z];\n          ptIdx++;\n        }\n      }\n    }\n\n    // draw the edges\n    for (let e = 0; e < 12; e++) {\n      if (edgesToDraw[e] > 0) {\n        lines[lineIdx * 3] = 2;\n        lines[lineIdx * 3 + 1] = edgePoints[e][0];\n        lines[lineIdx * 3 + 2] = edgePoints[e][1];\n        lineIdx++;\n      }\n    }\n\n    // now handle gridlines\n    // grid lines are tick[axis1] + ticks[axes2] lines each having two points\n    // for simplicity we don;t worry about duplicating points, this is tiny\n\n    if (model.gridLines) {\n      // for each visible face\n      // add the points\n      for (let f = 0; f < 6; f++) {\n        if (facesToDraw[f]) {\n          const faceIdx = Math.floor(f / 2);\n          let aticks = ticks[faceAxes[f][0]];\n          for (let t = 0; t < aticks.length; t++) {\n            points[ptIdx * 3 + faceIdx] = model.dataBounds[f];\n            points[ptIdx * 3 + faceAxes[f][0]] = aticks[t];\n            points[ptIdx * 3 + faceAxes[f][1]] = model.dataBounds[faceAxes[f][1] * 2];\n            ptIdx++;\n            points[ptIdx * 3 + faceIdx] = model.dataBounds[f];\n            points[ptIdx * 3 + faceAxes[f][0]] = aticks[t];\n            points[ptIdx * 3 + faceAxes[f][1]] = model.dataBounds[faceAxes[f][1] * 2 + 1];\n            ptIdx++;\n            lines[lineIdx * 3] = 2;\n            lines[lineIdx * 3 + 1] = ptIdx - 2;\n            lines[lineIdx * 3 + 2] = ptIdx - 1;\n            lineIdx++;\n          }\n          aticks = ticks[faceAxes[f][1]];\n          for (let t = 0; t < aticks.length; t++) {\n            points[ptIdx * 3 + faceIdx] = model.dataBounds[f];\n            points[ptIdx * 3 + faceAxes[f][1]] = aticks[t];\n            points[ptIdx * 3 + faceAxes[f][0]] = model.dataBounds[faceAxes[f][0] * 2];\n            ptIdx++;\n            points[ptIdx * 3 + faceIdx] = model.dataBounds[f];\n            points[ptIdx * 3 + faceAxes[f][1]] = aticks[t];\n            points[ptIdx * 3 + faceAxes[f][0]] = model.dataBounds[faceAxes[f][0] * 2 + 1];\n            ptIdx++;\n            lines[lineIdx * 3] = 2;\n            lines[lineIdx * 3 + 1] = ptIdx - 2;\n            lines[lineIdx * 3 + 2] = ptIdx - 1;\n            lineIdx++;\n          }\n        }\n      }\n    }\n    model.polyData.getPoints().setData(points, 3);\n    model.polyData.getPoints().modified();\n    model.polyData.getLines().setData(lines, 1);\n    model.polyData.getLines().modified();\n    model.polyData.modified();\n  };\n\n  // update the data that represents where to put the labels\n  // in world coordinates. This only changes when faces to draw changes\n  // of dataBounds changes\n  publicAPI.updateTextData = (facesToDraw, edgesToDraw, ticks, tickStrings) => {\n    // count outside edgesToDraw\n    let textPointCount = 0;\n    for (let e = 0; e < 12; e++) {\n      if (edgesToDraw[e] === 1) {\n        textPointCount += 2;\n        textPointCount += ticks[edgeAxes[e]].length;\n      }\n    }\n    const points = model.polyData.getPoints().getData();\n    const textPoints = new Float64Array(textPointCount * 3);\n    let ptIdx = 0;\n    let textIdx = 0;\n    let axisCount = 0;\n    for (let f = 0; f < 6; f++) {\n      if (facesToDraw[f]) {\n        for (let e = 0; e < 4; e++) {\n          const edgeIdx = faceEdges[f][e];\n          if (edgesToDraw[edgeIdx] === 1) {\n            const edgeAxis = edgeAxes[edgeIdx];\n            // add a middle point on the edge\n            const ptIdx1 = edgePoints[edgeIdx][0] * 3;\n            const ptIdx2 = edgePoints[edgeIdx][1] * 3;\n            textPoints[ptIdx * 3] = 0.5 * (points[ptIdx1] + points[ptIdx2]);\n            textPoints[ptIdx * 3 + 1] = 0.5 * (points[ptIdx1 + 1] + points[ptIdx2 + 1]);\n            textPoints[ptIdx * 3 + 2] = 0.5 * (points[ptIdx1 + 2] + points[ptIdx2 + 2]);\n            ptIdx++;\n            // add a middle face point, we use this to\n            // move the labels away from the edge in the right direction\n            const faceIdx = Math.floor(f / 2);\n            textPoints[ptIdx * 3 + faceIdx] = model.dataBounds[f];\n            textPoints[ptIdx * 3 + faceAxes[f][0]] = 0.5 * (model.dataBounds[faceAxes[f][0] * 2] + model.dataBounds[faceAxes[f][0] * 2 + 1]);\n            textPoints[ptIdx * 3 + faceAxes[f][1]] = 0.5 * (model.dataBounds[faceAxes[f][1] * 2] + model.dataBounds[faceAxes[f][1] * 2 + 1]);\n            ptIdx++;\n            // set the text\n            model.textValues[textIdx] = model.axisLabels[edgeAxis];\n            textIdx++;\n\n            // now add the tick marks along the edgeAxis\n            const otherAxis1 = (edgeAxis + 1) % 3;\n            const otherAxis2 = (edgeAxis + 2) % 3;\n            const aticks = ticks[edgeAxis];\n            const atickStrings = tickStrings[edgeAxis];\n            model.tickCounts[axisCount] = aticks.length;\n            for (let t = 0; t < aticks.length; t++) {\n              textPoints[ptIdx * 3 + edgeAxis] = aticks[t];\n              textPoints[ptIdx * 3 + otherAxis1] = points[ptIdx1 + otherAxis1];\n              textPoints[ptIdx * 3 + otherAxis2] = points[ptIdx1 + otherAxis2];\n              ptIdx++;\n              // set the text\n              model.textValues[textIdx] = atickStrings[t];\n              textIdx++;\n            }\n            axisCount++;\n          }\n        }\n      }\n    }\n    model.textPolyData.getPoints().setData(textPoints, 3);\n    model.textPolyData.modified();\n  };\n\n  // main method to rebuild the cube axes, gets called on camera modify\n  // and changes to key members\n  publicAPI.update = () => {\n    // Can't do anything if we don't have a camera...\n    if (!model.camera) {\n      return;\n    }\n\n    // compute what faces to draw\n    const facesChanged = publicAPI.computeFacesToDraw();\n    const facesToDraw = model.lastFacesToDraw;\n\n    // have the bounds changed?\n    let boundsChanged = false;\n    for (let i = 0; i < 6; i++) {\n      if (model.dataBounds[i] !== model.lastTickBounds[i]) {\n        boundsChanged = true;\n        model.lastTickBounds[i] = model.dataBounds[i];\n      }\n    }\n\n    // did something significant change? If so rebuild a lot of things\n    if (facesChanged || boundsChanged || model.forceUpdate) {\n      // compute the edges to draw\n      // for each drawn face, mark edges, all single mark edges we draw\n      const edgesToDraw = new Array(12).fill(0);\n      for (let f = 0; f < 6; f++) {\n        if (facesToDraw[f]) {\n          for (let e = 0; e < 4; e++) {\n            edgesToDraw[faceEdges[f][e]]++;\n          }\n        }\n      }\n\n      // compute tick marks for axes\n      const t = model.generateTicks(model.dataBounds);\n\n      // update gridlines / edge lines\n      publicAPI.updatePolyData(facesToDraw, edgesToDraw, t.ticks);\n\n      // compute label world coords and text\n      publicAPI.updateTextData(facesToDraw, edgesToDraw, t.ticks, t.tickStrings);\n\n      // rebuild the texture only when force or changed bounds, face\n      // visibility changes do to change the atlas\n      if (boundsChanged || model.forceUpdate) {\n        publicAPI.updateTextureAtlas(t.tickStrings);\n      }\n    }\n    model.forceUpdate = false;\n  };\n\n  // create the texture map atlas that contains the rendering of\n  // all the text strings. Only needs to be called when the text strings\n  // have changed (labels and ticks)\n  publicAPI.updateTextureAtlas = tickStrings => {\n    // compute the width and height we need\n\n    // set the text properties\n    model.tmContext.textBaseline = 'bottom';\n    model.tmContext.textAlign = 'left';\n\n    // first the three labels\n    model._tmAtlas.clear();\n    let maxWidth = 0;\n    let totalHeight = 1; // start one pixel in so we have a border\n    for (let i = 0; i < 3; i++) {\n      if (!model._tmAtlas.has(model.axisLabels[i])) {\n        applyTextStyle(model.tmContext, model.axisTextStyle);\n        const metrics = model.tmContext.measureText(model.axisLabels[i]);\n        const entry = {\n          height: metrics.actualBoundingBoxAscent + 2,\n          startingHeight: totalHeight,\n          width: metrics.width + 2,\n          textStyle: model.axisTextStyle\n        };\n        model._tmAtlas.set(model.axisLabels[i], entry);\n        totalHeight += entry.height;\n        if (maxWidth < entry.width) {\n          maxWidth = entry.width;\n        }\n      }\n      // and the ticks\n      applyTextStyle(model.tmContext, model.tickTextStyle);\n      for (let t = 0; t < tickStrings[i].length; t++) {\n        if (!model._tmAtlas.has(tickStrings[i][t])) {\n          const metrics = model.tmContext.measureText(tickStrings[i][t]);\n          const entry = {\n            height: metrics.actualBoundingBoxAscent + 2,\n            startingHeight: totalHeight,\n            width: metrics.width + 2,\n            textStyle: model.tickTextStyle\n          };\n          model._tmAtlas.set(tickStrings[i][t], entry);\n          totalHeight += entry.height;\n          if (maxWidth < entry.width) {\n            maxWidth = entry.width;\n          }\n        }\n      }\n    }\n\n    // always use power of two to avoid interpolation\n    // in cases where PO2 is required\n    maxWidth = nearestPowerOfTwo(maxWidth);\n    totalHeight = nearestPowerOfTwo(totalHeight);\n\n    // set the tcoord values\n    model._tmAtlas.forEach(value => {\n      value.tcoords = [0.0, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight) / totalHeight, 0.0, (totalHeight - value.startingHeight) / totalHeight];\n    });\n\n    // make sure we have power of two dimensions\n    model.tmCanvas.width = maxWidth;\n    model.tmCanvas.height = totalHeight;\n    model.tmContext.textBaseline = 'bottom';\n    model.tmContext.textAlign = 'left';\n    model.tmContext.clearRect(0, 0, maxWidth, totalHeight);\n\n    // draw the text onto the texture\n    model._tmAtlas.forEach((value, key) => {\n      applyTextStyle(model.tmContext, value.textStyle);\n      model.tmContext.fillText(key, 1, value.startingHeight + value.height - 1);\n    });\n    model.tmTexture.setCanvas(model.tmCanvas);\n    model.tmTexture.modified();\n  };\n\n  // Make sure the data is correct\n  publicAPI.onModified(() => {\n    model.forceUpdate = true;\n    publicAPI.update();\n  });\n  publicAPI.setTickTextStyle = tickStyle => {\n    model.tickTextStyle = {\n      ...model.tickTextStyle,\n      ...tickStyle\n    };\n    publicAPI.modified();\n  };\n  publicAPI.setAxisTextStyle = axisStyle => {\n    model.axisTextStyle = {\n      ...model.axisTextStyle,\n      ...axisStyle\n    };\n    publicAPI.modified();\n  };\n  publicAPI.get_tmAtlas = () => model._tmAtlas;\n\n  // try to get the bounds for the annotation. This is complicated\n  // as it relies on the pixel size of the window. Every time the camera\n  // changes the bounds change. This method simplifies by just expanding\n  // the grid bounds by a user specified factor.\n  publicAPI.getBounds = () => {\n    publicAPI.update();\n    vtkBoundingBox.setBounds(model.bounds, model.gridActor.getBounds());\n    vtkBoundingBox.scaleAboutCenter(model.bounds, model.boundsScaleFactor, model.boundsScaleFactor, model.boundsScaleFactor);\n    return model.bounds;\n  };\n\n  // Make sure the grid share the actor property\n  const _setProp = macro.chain(publicAPI.setProperty, model.gridActor.setProperty);\n  publicAPI.setProperty = p => _setProp(p)[0];\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(publicAPI, model, initialValues) {\n  return {\n    boundsScaleFactor: 1.3,\n    camera: null,\n    dataBounds: [...vtkBoundingBox.INIT_BOUNDS],\n    faceVisibilityAngle: 8,\n    gridLines: true,\n    axisLabels: null,\n    axisTitlePixelOffset: 35.0,\n    tickLabelPixelOffset: 12.0,\n    generateTicks: defaultGenerateTicks,\n    ...initialValues,\n    axisTextStyle: {\n      fontColor: 'white',\n      fontStyle: 'normal',\n      fontSize: 18,\n      fontFamily: 'serif',\n      ...initialValues?.axisTextStyle\n    },\n    tickTextStyle: {\n      fontColor: 'white',\n      fontStyle: 'normal',\n      fontSize: 14,\n      fontFamily: 'serif',\n      ...initialValues?.tickTextStyle\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // Inheritance\n  vtkActor.extend(publicAPI, model, defaultValues(publicAPI, model, initialValues));\n\n  // internal variables\n  model.lastFacesToDraw = [false, false, false, false, false, false];\n  model.axisLabels = ['X-Axis', 'Y-Axis', 'Z-Axis'];\n  model.tickCounts = [];\n  model.textValues = [];\n  model.lastTickBounds = [];\n  model.tmCanvas = document.createElement('canvas');\n  model.tmContext = model.tmCanvas.getContext('2d');\n  model._tmAtlas = new Map();\n\n  // for texture atlas\n  model.tmTexture = vtkTexture.newInstance({\n    resizable: true\n  });\n  model.tmTexture.setInterpolate(false);\n  publicAPI.getProperty().setDiffuse(0.0);\n  publicAPI.getProperty().setAmbient(1.0);\n  model.gridMapper = vtkMapper.newInstance();\n  model.polyData = vtkPolyData.newInstance();\n  model.gridMapper.setInputData(model.polyData);\n  model.gridActor = vtkActor.newInstance();\n  model.gridActor.setMapper(model.gridMapper);\n  model.gridActor.setProperty(publicAPI.getProperty());\n  model.gridActor.setParentProp(publicAPI);\n  model.textPolyData = vtkPolyData.newInstance();\n  macro.setGet(publicAPI, model, ['axisTitlePixelOffset', 'boundsScaleFactor', 'faceVisibilityAngle', 'gridLines', 'tickLabelPixelOffset', 'generateTicks']);\n  macro.setGetArray(publicAPI, model, ['dataBounds'], 6);\n  macro.setGetArray(publicAPI, model, ['axisLabels'], 3);\n  macro.get(publicAPI, model, ['axisTextStyle', 'tickTextStyle', 'camera', 'tmTexture', 'textValues', 'textPolyData', 'tickCounts', 'gridActor']);\n\n  // Object methods\n  vtkCubeAxesActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCubeAxesActor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCubeAxesActor$1 = {\n  newInstance,\n  extend,\n  newCubeAxesActorHelper,\n  defaultGenerateTicks\n};\n\nexport { vtkCubeAxesActor$1 as default, extend, newInstance };\n", "import { n as newInstance$1 } from '../../macros2.js';\nimport vtkCubeAxesActor from '../Core/CubeAxesActor.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLCubeAxesActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCubeAxesActor(publicAPI, model) {\n  model.classHierarchy.push('vtkOpenGLCubeAxesActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\n      if (!model.CubeAxesActorHelper.getRenderable()) {\n        model.CubeAxesActorHelper.setRenderable(model.renderable);\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.CubeAxesActorHelper.getTmActor());\n      publicAPI.addMissingNode(model.renderable.getGridActor());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      const camera = model._openGLRenderer ? model._openGLRenderer.getRenderable().getActiveCamera() : null;\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\n      model.CubeAxesActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model._openGLRenderWindow.getRenderable());\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.CubeAxesActorHelper = vtkCubeAxesActor.newCubeAxesActorHelper();\n\n  // Object methods\n  vtkOpenGLCubeAxesActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLCubeAxesActor');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkCubeAxesActor', newInstance);\n\nexport { index as default, extend, newInstance };\n", "var vtkPolyDataVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nattribute vec4 vertexMC;\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\nvoid main()\\n{\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::PrimID::Impl\\n\\n  //VTK::PositionVC::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::Picking::Impl\\n}\\n\";\n\nexport { vtkPolyDataVS as v };\n", "var vtkPolyDataFS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the polydata mappers fragment shader\\n\\nuniform int PrimitiveIDOffset;\\n\\n// VC position of this fragment\\n//VTK::PositionVC::Dec\\n\\n// optional color passed in from the vertex shader, vertexColor\\n//VTK::Color::Dec\\n\\n// optional surface normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// define vtkImageLabelOutlineOn\\n//VTK::ImageLabelOutlineOn\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// Depth Peeling Support\\n//VTK::DepthPeeling::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// label outline \\n//VTK::LabelOutline::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// handle coincident offsets\\n//VTK::Coincident::Dec\\n\\n//VTK::ZBuffer::Dec\\n\\n//VTK::LabelOutlineHelperFunction\\n\\nvoid main()\\n{\\n  // VC position of this fragment. This should not branch/return/discard.\\n  //VTK::PositionVC::Impl\\n\\n  // Place any calls that require uniform flow (e.g. dFdx) here.\\n  //VTK::UniformFlow::Impl\\n\\n  // Set gl_FragDepth here (gl_FragCoord.z by default)\\n  //VTK::Depth::Impl\\n\\n  // Early depth peeling abort:\\n  //VTK::DepthPeeling::PreColor\\n\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::Color::Impl\\n\\n  // Generate the normal if we are not passed in one\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Light::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n\\n  //VTK::DepthPeeling::Impl\\n\\n  //VTK::Picking::Impl\\n\\n  // handle coincident offsets\\n  //VTK::Coincident::Impl\\n\\n  //VTK::ZBuffer::Impl\\n\\n  //VTK::RenderPassFragmentShader::Impl\\n}\\n\";\n\nexport { vtkPolyDataFS as v };\n", "import vtkShaderProgram from './ShaderProgram.js';\n\nfunction implementReplaceShaderCoincidentOffset(publicAPI, model) {\n  publicAPI.replaceShaderCoincidentOffset = (shaders, ren, actor) => {\n    const cp = publicAPI.getCoincidentParameters(ren, actor);\n\n    // if we need an offset handle it here\n    // The value of .000016 is suitable for depth buffers\n    // of at least 16 bit depth. We do not query the depth\n    // right now because we would need some mechanism to\n    // cache the result taking into account FBO changes etc.\n    if (cp && (cp.factor !== 0.0 || cp.offset !== 0.0)) {\n      let FSSource = shaders.Fragment;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Coincident::Dec', ['uniform float cfactor;', 'uniform float coffset;']).result;\n      if (model.context.getExtension('EXT_frag_depth')) {\n        if (cp.factor !== 0.0) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;\n        } else {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + 0.000016*coffset;').result;\n        }\n      }\n      if (model._openGLRenderWindow.getWebgl2()) {\n        if (cp.factor !== 0.0) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;\n        } else {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + 0.000016*coffset;').result;\n        }\n      }\n      shaders.Fragment = FSSource;\n    }\n  };\n}\nfunction implementBuildShadersWithReplacements(publicAPI, model) {\n  publicAPI.applyShaderReplacements = (shaders, viewSpec, pre) => {\n    let shaderReplacements = null;\n    if (viewSpec) {\n      shaderReplacements = viewSpec.ShaderReplacements;\n    }\n    if (shaderReplacements) {\n      for (let i = 0; i < shaderReplacements.length; i++) {\n        const currReplacement = shaderReplacements[i];\n        if (pre && currReplacement.replaceFirst || !pre && !currReplacement.replaceFirst) {\n          const shaderType = currReplacement.shaderType;\n          const ssrc = shaders[shaderType];\n          const substituteRes = vtkShaderProgram.substitute(ssrc, currReplacement.originalValue, currReplacement.replacementValue, currReplacement.replaceAll);\n          shaders[shaderType] = substituteRes.result;\n        }\n      }\n    }\n  };\n  publicAPI.buildShaders = (shaders, ren, actor) => {\n    publicAPI.getReplacedShaderTemplate(shaders, ren, actor);\n    model.lastRenderPassShaderReplacement = model.currentRenderPass ? model.currentRenderPass.getShaderReplacement() : null;\n\n    // apply any renderPassReplacements\n    if (model.lastRenderPassShaderReplacement) {\n      model.lastRenderPassShaderReplacement(shaders);\n    }\n    const openGLSpec = model.renderable.getViewSpecificProperties().OpenGL;\n\n    // user specified pre replacements\n    publicAPI.applyShaderReplacements(shaders, openGLSpec, true);\n    publicAPI.replaceShaderValues(shaders, ren, actor);\n\n    // user specified post replacements\n    publicAPI.applyShaderReplacements(shaders, openGLSpec);\n  };\n  publicAPI.getReplacedShaderTemplate = (shaders, ren, actor) => {\n    const openGLSpecProp = model.renderable.getViewSpecificProperties().OpenGL;\n    publicAPI.getShaderTemplate(shaders, ren, actor);\n    let vertexShaderCode = shaders.Vertex;\n    if (openGLSpecProp) {\n      const vertexSpecProp = openGLSpecProp.VertexShaderCode;\n      if (vertexSpecProp !== undefined && vertexSpecProp !== '') {\n        vertexShaderCode = vertexSpecProp;\n      }\n    }\n    shaders.Vertex = vertexShaderCode;\n    let fragmentShaderCode = shaders.Fragment;\n    if (openGLSpecProp) {\n      const fragmentSpecProp = openGLSpecProp.FragmentShaderCode;\n      if (fragmentSpecProp !== undefined && fragmentSpecProp !== '') {\n        fragmentShaderCode = fragmentSpecProp;\n      }\n    }\n    shaders.Fragment = fragmentShaderCode;\n    let geometryShaderCode = shaders.Geometry;\n    if (openGLSpecProp) {\n      const geometrySpecProp = openGLSpecProp.GeometryShaderCode;\n      if (geometrySpecProp !== undefined) {\n        geometryShaderCode = geometrySpecProp;\n      }\n    }\n    shaders.Geometry = geometryShaderCode;\n  };\n}\nvar vtkReplacementShaderMapper = {\n  implementReplaceShaderCoincidentOffset,\n  implementBuildShadersWithReplacements\n};\n\nexport { vtkReplacementShaderMapper as default };\n", "import { mat3, mat4, vec3 } from 'gl-matrix';\nimport { n as newInstance$1, e as setGet, o as obj, c as macro } from '../../macros2.js';\nimport vtkHelper from './Helper.js';\nimport vtkMapper from '../Core/Mapper.js';\nimport { l as normalize, u as uninitializeBounds } from '../../Common/Core/Math/index.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkProp from '../Core/Prop.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { v as vtkPolyDataVS } from './glsl/vtkPolyDataVS.glsl.js';\nimport { v as vtkPolyDataFS } from './glsl/vtkPolyDataFS.glsl.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nimport { PassTypes } from './HardwareSelector/Constants.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\nimport '../Core/Mapper/CoincidentTopologyHelper.js';\nimport { Resolve } from '../Core/Mapper/Static.js';\n\nconst {\n  FieldAssociations\n} = vtkDataSet;\n\n/* eslint-disable no-lonely-if */\n\nconst {\n  primTypes\n} = vtkHelper;\nconst {\n  Representation,\n  Shading\n} = vtkProperty;\nconst {\n  ScalarMode\n} = vtkMapper;\nconst {\n  Filter,\n  Wrap\n} = vtkOpenGLTexture;\nconst {\n  vtkErrorMacro\n} = macro;\nconst StartEvent = {\n  type: 'StartEvent'\n};\nconst EndEvent = {\n  type: 'EndEvent'\n};\nconst {\n  CoordinateSystem\n} = vtkProp;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction getPickState(renderer) {\n  const selector = renderer.getSelector();\n  if (selector) {\n    return selector.getCurrentPass();\n  }\n  return PassTypes.MIN_KNOWN_PASS - 1;\n}\nfunction vtkOpenGLPolyDataMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLPolyDataMapper');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.currentRenderPass = null;\n      model.openGLActor = publicAPI.getFirstAncestorOfType('vtkOpenGLActor');\n      model._openGLRenderer = model.openGLActor.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(model._openGLRenderer.getRenderable().getActiveCamera());\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = (prepass, renderPass) => {\n    if (prepass) {\n      model.currentRenderPass = renderPass;\n      publicAPI.render();\n    }\n  };\n  publicAPI.zBufferPass = prepass => {\n    if (prepass) {\n      model.haveSeenDepthRequest = true;\n      model.renderDepth = true;\n      publicAPI.render();\n      model.renderDepth = false;\n    }\n  };\n  publicAPI.opaqueZBufferPass = prepass => publicAPI.zBufferPass(prepass);\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n  publicAPI.render = () => {\n    const ctx = model._openGLRenderWindow.getContext();\n    if (model.context !== ctx) {\n      model.context = ctx;\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\n        model.primitives[i].setOpenGLRenderWindow(model._openGLRenderWindow);\n      }\n    }\n    const actor = model.openGLActor.getRenderable();\n    const ren = model._openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkPolyDataVS;\n    shaders.Fragment = vtkPolyDataFS;\n    shaders.Geometry = '';\n  };\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n\n    // create the material/color property declarations, and VS implementation\n    // these are always defined\n    let colorDec = ['uniform float ambient;', 'uniform float diffuse;', 'uniform float specular;', 'uniform float opacityUniform; // the fragment opacity', 'uniform vec3 ambientColorUniform;', 'uniform vec3 diffuseColorUniform;'];\n    // add more for specular\n    if (lastLightComplexity) {\n      colorDec = colorDec.concat(['uniform vec3 specularColorUniform;', 'uniform float specularPowerUniform;']);\n    }\n\n    // now handle the more complex fragment shader implementation\n    // the following are always defined variables.  We start\n    // by assigning a default value from the uniform\n    let colorImpl = ['vec3 ambientColor;', '  vec3 diffuseColor;', '  float opacity;'];\n    if (lastLightComplexity) {\n      colorImpl = colorImpl.concat(['  vec3 specularColor;', '  float specularPower;']);\n    }\n    colorImpl = colorImpl.concat(['  ambientColor = ambientColorUniform;', '  diffuseColor = diffuseColorUniform;', '  opacity = opacityUniform;']);\n    if (lastLightComplexity) {\n      colorImpl = colorImpl.concat(['  specularColor = specularColorUniform;', '  specularPower = specularPowerUniform;']);\n    }\n\n    // add scalar vertex coloring\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {\n      colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', ['attribute vec4 scalarColor;', 'varying vec4 vertexColorVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', ['vertexColorVSOutput =  scalarColor;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', ['in vec4 vertexColorVSOutput[];', 'out vec4 vertexColorGSOutput;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', ['vertexColorGSOutput = vertexColorVSOutput[i];']).result;\n    }\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  diffuseColor = vertexColorVSOutput.rgb;', '  ambientColor = vertexColorVSOutput.rgb;', '  opacity = opacity*vertexColorVSOutput.a;'])).result;\n    } else {\n      if ((model.renderable.getAreScalarsMappedFromCells() || model.renderable.getInterpolateScalarsBeforeMapping()) && model.renderable.getColorCoordinates() && !model.drawingEdges) {\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  vec4 texColor = texture2D(texture1, tcoordVCVSOutput.st);', '  diffuseColor = texColor.rgb;', '  ambientColor = texColor.rgb;', '  opacity = opacity*texColor.a;'])).result;\n      } else {\n        if (actor.getBackfaceProperty() && !model.drawingEdges) {\n          colorDec = colorDec.concat(['uniform float opacityUniformBF; // the fragment opacity', 'uniform float ambientIntensityBF; // the material ambient', 'uniform float diffuseIntensityBF; // the material diffuse', 'uniform vec3 ambientColorUniformBF; // ambient material color', 'uniform vec3 diffuseColorUniformBF; // diffuse material color']);\n          if (lastLightComplexity) {\n            colorDec = colorDec.concat(['uniform float specularIntensityBF; // the material specular intensity', 'uniform vec3 specularColorUniformBF; // intensity weighted color', 'uniform float specularPowerUniformBF;']);\n            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  specularColor = specularIntensityBF * specularColorUniformBF;', '  specularPower = specularPowerUniformBF;', '  opacity = opacityUniformBF; }']);\n          } else {\n            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  opacity = opacityUniformBF; }']);\n          }\n        }\n        if (model.haveCellScalars && !model.drawingEdges) {\n          colorDec = colorDec.concat(['uniform samplerBuffer texture1;']);\n        }\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', colorImpl).result;\n      }\n    }\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', colorDec).result;\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderLight = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n\n    // check for shadow maps\n    const shadowFactor = '';\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    const lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');\n    let sstring = [];\n    switch (lastLightComplexity) {\n      case 0:\n        // no lighting or RENDER_VALUES\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', ['  gl_FragData[0] = vec4(ambientColor * ambient + diffuseColor * diffuse, opacity);', '  //VTK::Light::Impl'], false).result;\n        break;\n      case 1:\n        // headlight\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', ['  float df = max(0.0, normalVCVSOutput.z);', '  float sf = pow(df, specularPower);', '  vec3 diffuseL = df * diffuseColor;', '  vec3 specularL = sf * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl'], false).result;\n        break;\n      case 2:\n        // light kit\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([`uniform vec3 lightColor${lc};`, `uniform vec3 lightDirectionVC${lc}; // normalized`, `uniform vec3 lightHalfAngleVC${lc}; // normalized`]);\n        }\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', sstring).result;\n        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  float df;'];\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([`  df = max(0.0, dot(normalVCVSOutput, -lightDirectionVC${lc}));`, `  diffuseL += ((df${shadowFactor}) * lightColor${lc});`, `  if (dot(normalVCVSOutput, lightDirectionVC${lc}) < 0.0)`, '    {', `    float sf = sign(df)*pow(max(1e-5,\n                                              dot(reflect(lightDirectionVC${lc},normalVCVSOutput),\n                                                  normalize(-vertexVC.xyz))),\n                                         specularPower);`, `    specularL += (sf${shadowFactor} * lightColor${lc});`, '    }']);\n        }\n        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;\n        break;\n      case 3:\n        // positional\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat([`uniform vec3 lightColor${lc};`, `uniform vec3 lightDirectionVC${lc}; // normalized`, `uniform vec3 lightHalfAngleVC${lc}; // normalized`, `uniform vec3 lightPositionVC${lc};`, `uniform vec3 lightAttenuation${lc};`, `uniform float lightConeAngle${lc};`, `uniform float lightExponent${lc};`, `uniform int lightPositional${lc};`]);\n        }\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Dec', sstring).result;\n        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  vec3 vertLightDirectionVC;', '  float attenuation;', '  float df;'];\n        for (let lc = 0; lc < lastLightCount; ++lc) {\n          sstring = sstring.concat(['  attenuation = 1.0;', `  if (lightPositional${lc} == 0)`, '    {', `      vertLightDirectionVC = lightDirectionVC${lc};`, '    }', '  else', '    {', `    vertLightDirectionVC = vertexVC.xyz - lightPositionVC${lc};`, '    float distanceVC = length(vertLightDirectionVC);', '    vertLightDirectionVC = normalize(vertLightDirectionVC);', '    attenuation = 1.0 /', `      (lightAttenuation${lc}.x`, `       + lightAttenuation${lc}.y * distanceVC`, `       + lightAttenuation${lc}.z * distanceVC * distanceVC);`, '    // per OpenGL standard cone angle is 90 or less for a spot light', `    if (lightConeAngle${lc} <= 90.0)`, '      {', `      float coneDot = dot(vertLightDirectionVC, lightDirectionVC${lc});`, '      // if inside the cone', `      if (coneDot >= cos(radians(lightConeAngle${lc})))`, '        {', `        attenuation = attenuation * pow(coneDot, lightExponent${lc});`, '        }', '      else', '        {', '        attenuation = 0.0;', '        }', '      }', '    }', '    df = max(0.0, attenuation*dot(normalVCVSOutput, -vertLightDirectionVC));', `    diffuseL += ((df${shadowFactor}) * lightColor${lc});`, '    if (dot(normalVCVSOutput, vertLightDirectionVC) < 0.0)', '      {', `      float sf = sign(df)*attenuation*pow(max(1e-5,\n                                                           dot(reflect(lightDirectionVC${lc},\n                                                                       normalVCVSOutput),\n                                                               normalize(-vertexVC.xyz))),\n                                                       specularPower);`, `    specularL += ((sf${shadowFactor}) * lightColor${lc});`, '    }']);\n        }\n        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;\n        break;\n      default:\n        vtkErrorMacro('bad light complexity');\n    }\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderNormal = (shaders, ren, actor) => {\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    if (lastLightComplexity > 0) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n      if (model.lastBoundBO.getCABO().getNormalOffset()) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Dec', ['attribute vec3 normalMC;', 'uniform mat3 normalMatrix;', 'varying vec3 normalVCVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Normal::Impl', ['normalVCVSOutput = normalMatrix * normalMC;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Normal::Dec', ['in vec3 normalVCVSOutput[];', 'out vec3 normalVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Normal::Impl', ['normalVCGSOutput = normalVCVSOutput[i];']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['varying vec3 normalVCVSOutput;']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalVCVSOutput);',\n        //  if (!gl_FrontFacing) does not work in intel hd4000 mac\n        //  if (int(gl_FrontFacing) == 0) does not work on mesa\n        '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;\n      } else {\n        if (model.haveCellNormals) {\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['uniform mat3 normalMatrix;', 'uniform samplerBuffer textureN;']).result;\n          FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalMatrix *', '    texelFetchBuffer(textureN, gl_PrimitiveID + PrimitiveIDOffset).xyz);', '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;\n        } else {\n          if (model.lastBoundBO.getOpenGLMode(actor.getProperty().getRepresentation()) === model.context.LINES) {\n            // generate a normal for lines, it will be perpendicular to the line\n            // and maximally aligned with the camera view direction\n            // no clue if this is the best way to do this.\n            // the code below has been optimized a bit so what follows is\n            // an explanation of the basic approach. Compute the gradient of the line\n            // with respect to x and y, the the larger of the two\n            // cross that with the camera view direction. That gives a vector\n            // orthogonal to the camera view and the line. Note that the line and the camera\n            // view are probably not orthogonal. Which is why when we cross result that with\n            // the line gradient again we get a reasonable normal. It will be othogonal to\n            // the line (which is a plane but maximally aligned with the camera view.\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', ['  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements\n            ).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput;', '  if (abs(fdx.x) > 0.0)', '    { fdx = normalize(fdx); normalVCVSOutput = normalize(cross(vec3(fdx.y, -fdx.x, 0.0), fdx)); }', '  else { fdy = normalize(fdy); normalVCVSOutput = normalize(cross(vec3(fdy.y, -fdy.x, 0.0), fdy));}']).result;\n          } else {\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Dec', ['uniform int cameraParallel;']).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::UniformFlow::Impl', [\n            // '  vec3 fdx = vec3(dFdx(vertexVC.x),dFdx(vertexVC.y),dFdx(vertexVC.z));',\n            // '  vec3 fdy = vec3(dFdy(vertexVC.x),dFdy(vertexVC.y),dFdy(vertexVC.z));',\n            '  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements\n            ).result;\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Normal::Impl', ['  fdx = normalize(fdx);', '  fdy = normalize(fdy);', '  vec3 normalVCVSOutput = normalize(cross(fdx,fdy));',\n            // the code below is faster, but does not work on some devices\n            // 'vec3 normalVC = normalize(cross(dFdx(vertexVC.xyz), dFdy(vertexVC.xyz)));',\n            '  if (cameraParallel == 1 && normalVCVSOutput.z < 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }', '  if (cameraParallel == 0 && dot(normalVCVSOutput,vertexVC.xyz) > 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }']).result;\n          }\n        }\n      }\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    // replace common shader code\n    model.lastBoundBO.replaceShaderPositionVC(shaders, ren, actor);\n    let VSSource = shaders.Vertex;\n    let GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n\n    // do we need the vertex in the shader in View Coordinates\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    if (lastLightComplexity > 0) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['vertexVCVSOutput = MCVCMatrix * vertexMC;', '  gl_Position = MCPCMatrix * vertexMC;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::PositionVC::Dec', ['in vec4 vertexVCVSOutput[];', 'out vec4 vertexVCGSOutput;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::PositionVC::Impl', ['vertexVCGSOutput = vertexVCVSOutput[i];']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::PositionVC::Impl', ['vec4 vertexVC = vertexVCVSOutput;']).result;\n    } else {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderTCoord = (shaders, ren, actor) => {\n    if (model.lastBoundBO.getCABO().getTCoordOffset()) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n      if (model.drawingEdges) {\n        return;\n      }\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', 'tcoordVCVSOutput = tcoordMC;').result;\n\n      // we only handle the first texture by default\n      // additional textures are activated and we set the uniform\n      // for the texture unit they are assigned to, but you have to\n      // add in the shader code to do something with them\n      const tus = model.openGLActor.getActiveTextures();\n      let tNumComp = 2;\n      let tcdim = 2;\n      if (tus && tus.length > 0) {\n        tNumComp = tus[0].getComponents();\n        if (tus[0].getTarget() === model.context.TEXTURE_CUBE_MAP) {\n          tcdim = 3;\n        }\n      }\n      if (model.renderable.getColorTextureMap()) {\n        tNumComp = model.renderable.getColorTextureMap().getPointData().getScalars().getNumberOfComponents();\n        tcdim = 2;\n      }\n      if (tcdim === 2) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;').result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];', 'out vec2 tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\n        if (tus && tus.length >= 1) {\n          switch (tNumComp) {\n            case 1:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;\n              break;\n            case 2:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;\n              break;\n            default:\n              FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;\n          }\n        }\n      } else {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec3 tcoordMC; varying vec3 tcoordVCVSOutput;').result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in vec3 tcoordVCVSOutput[];', 'out vec3 tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec3 tcoordVCVSOutput;', 'uniform samplerCube texture1;']).result;\n        switch (tNumComp) {\n          case 1:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;\n            break;\n          case 2:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;\n            break;\n          default:\n            FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;\n        }\n      }\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n  publicAPI.replaceShaderClip = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let FSSource = shaders.Fragment;\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      const numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', `uniform vec4 clipPlanes[${numClipPlanes}];`, `varying float clipDistancesVSOutput[${numClipPlanes}];`]).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Clip::Impl', [`for (int planeNum = 0; planeNum < ${numClipPlanes}; planeNum++)`, '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', `varying float clipDistancesVSOutput[${numClipPlanes}];`]).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Clip::Impl', [`for (int planeNum = 0; planeNum < ${numClipPlanes}; planeNum++)`, '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.getCoincidentParameters = (ren, actor) => {\n    // 1. ResolveCoincidentTopology is On and non zero for this primitive\n    // type\n    let cp = {\n      factor: 0.0,\n      offset: 0.0\n    };\n    const prop = actor.getProperty();\n    if (\n    // backwards compat with code that (errorneously) set this to boolean\n    // eslint-disable-next-line eqeqeq\n    model.renderable.getResolveCoincidentTopology() == Resolve.PolygonOffset || prop.getEdgeVisibility() && prop.getRepresentation() === Representation.SURFACE) {\n      const primType = model.lastBoundBO.getPrimitiveType();\n      if (primType === primTypes.Points || prop.getRepresentation() === Representation.POINTS) {\n        cp = model.renderable.getCoincidentTopologyPointOffsetParameter();\n      } else if (primType === primTypes.Lines || prop.getRepresentation() === Representation.WIREFRAME) {\n        cp = model.renderable.getCoincidentTopologyLineOffsetParameters();\n      } else if (primType === primTypes.Tris || primType === primTypes.TriStrips) {\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n      }\n      if (primType === primTypes.TrisEdges || primType === primTypes.TriStripsEdges) {\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\n        cp.factor /= 2.0;\n        cp.offset /= 2.0;\n      }\n    }\n\n    // hardware picking always offset due to saved zbuffer\n    // This gets you above the saved surface depth buffer.\n    const selector = model._openGLRenderer.getSelector();\n    if (selector && selector.getFieldAssociation() === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n      cp.offset -= 2.0;\n    }\n    return cp;\n  };\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n    let VSSource = shaders.Vertex;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', ['uniform int picking;', '//VTK::Picking::Dec']).result;\n    if (!model._openGLRenderer.getSelector()) {\n      return;\n    }\n    if (model.lastSelectionState === PassTypes.ID_LOW24 || model.lastSelectionState === PassTypes.ID_HIGH24) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Dec', ['flat out int vertexIDVSOutput;\\n', 'uniform int VertexIDOffset;\\n']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Picking::Impl', '  vertexIDVSOutput = gl_VertexID + VertexIDOffset;\\n').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', 'flat in int vertexIDVSOutput;\\n').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', ['  int idx = vertexIDVSOutput;', '//VTK::Picking::Impl']).result;\n    }\n    switch (model.lastSelectionState) {\n      case PassTypes.ID_LOW24:\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = vec4(float(idx%256)/255.0, float((idx/256)%256)/255.0, float((idx/65536)%256)/255.0, 1.0);').result;\n        break;\n      case PassTypes.ID_HIGH24:\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = vec4(float((idx/16777216)%256)/255.0, 0.0, 0.0, 1.0);').result;\n        break;\n      default:\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', 'uniform vec3 mapperIndex;').result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;\n    }\n    shaders.Fragment = FSSource;\n    shaders.Vertex = VSSource;\n  };\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    publicAPI.replaceShaderColor(shaders, ren, actor);\n    publicAPI.replaceShaderNormal(shaders, ren, actor);\n    publicAPI.replaceShaderLight(shaders, ren, actor);\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\n    publicAPI.replaceShaderPicking(shaders, ren, actor);\n    publicAPI.replaceShaderClip(shaders, ren, actor);\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\n    if (model.haveSeenDepthRequest) {\n      let FSSource = shaders.Fragment;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\n      shaders.Fragment = FSSource;\n    }\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    let lightComplexity = 0;\n    let numberOfLights = 0;\n    const primType = cellBO.getPrimitiveType();\n    const poly = model.currentInput;\n\n    // different algo from C++ as of 5/2019\n    let needLighting = false;\n    const pointNormals = poly.getPointData().getNormals();\n    const cellNormals = poly.getCellData().getNormals();\n    const flat = actor.getProperty().getInterpolation() === Shading.FLAT;\n    const representation = actor.getProperty().getRepresentation();\n    const mode = cellBO.getOpenGLMode(representation, primType);\n    // 1) all surfaces need lighting\n    if (mode === model.context.TRIANGLES) {\n      needLighting = true;\n      // 2) all cell normals without point normals need lighting\n    } else if (cellNormals && !pointNormals) {\n      needLighting = true;\n      // 3) Phong + pointNormals need lighting\n    } else if (!flat && pointNormals) {\n      needLighting = true;\n      // 4) Phong Lines need lighting\n    } else if (!flat && mode === model.context.LINES) {\n      needLighting = true;\n    }\n    // 5) everything else is unlit\n\n    // do we need lighting?\n    if (actor.getProperty().getLighting() && needLighting) {\n      // consider the lighting complexity to determine which case applies\n      // simple headlight, Light Kit, the whole feature set of VTK\n      lightComplexity = 0;\n      const lights = ren.getLightsByReference();\n      for (let index = 0; index < lights.length; ++index) {\n        const light = lights[index];\n        const status = light.getSwitch();\n        if (status > 0) {\n          numberOfLights++;\n          if (lightComplexity === 0) {\n            lightComplexity = 1;\n          }\n        }\n        if (lightComplexity === 1 && (numberOfLights > 1 || light.getIntensity() !== 1.0 || !light.lightTypeIsHeadLight())) {\n          lightComplexity = 2;\n        }\n        if (lightComplexity < 3 && light.getPositional()) {\n          lightComplexity = 3;\n        }\n      }\n    }\n    let needRebuild = false;\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    const lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');\n    if (lastLightComplexity !== lightComplexity || lastLightCount !== numberOfLights) {\n      model.lastBoundBO.set({\n        lastLightComplexity: lightComplexity\n      }, true);\n      model.lastBoundBO.set({\n        lastLightCount: numberOfLights\n      }, true);\n      needRebuild = true;\n    }\n\n    // has the render pass shader replacement changed? Two options\n    if (!model.currentRenderPass && model.lastRenderPassShaderReplacement || model.currentRenderPass && model.currentRenderPass.getShaderReplacement() !== model.lastRenderPassShaderReplacement) {\n      needRebuild = true;\n    }\n\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    // render pass shader replacement changed\n    if (model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.selectionStateChanged.getMTime() || needRebuild) {\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\n      return true;\n    }\n    return false;\n  };\n  publicAPI.invokeShaderCallbacks = (cellBO, ren, actor) => {\n    const listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;\n    if (listCallbacks) {\n      listCallbacks.forEach(object => {\n        object.callback(object.userData, cellBO, ren, actor);\n      });\n    }\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {\n      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);\n    }\n    if (cellBO.getProgram().isUniformUsed('VertexIDOffset')) {\n      cellBO.getProgram().setUniformi('VertexIDOffset', model.vertexIDOffset);\n    }\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexMC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\n        }\n      }\n      if (cellBO.getProgram().isAttributeUsed('normalMC') && cellBO.getCABO().getNormalOffset() && lastLightComplexity > 0) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'normalMC', cellBO.getCABO().getNormalOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n          vtkErrorMacro('Error setting normalMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('normalMC');\n      }\n      model.renderable.getCustomShaderAttributes().forEach((attrName, idx) => {\n        if (cellBO.getProgram().isAttributeUsed(`${attrName}MC`)) {\n          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), `${attrName}MC`, cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {\n            vtkErrorMacro(`Error setting ${attrName}MC in shader VAO.`);\n          }\n        }\n      });\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('tcoordMC');\n      }\n      if (cellBO.getProgram().isAttributeUsed('scalarColor') && cellBO.getCABO().getColorComponents()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO().getColorBO(), 'scalarColor', cellBO.getCABO().getColorOffset(), cellBO.getCABO().getColorBOStride(), model.context.UNSIGNED_BYTE, 4, true)) {\n          vtkErrorMacro('Error setting scalarColor in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('scalarColor');\n      }\n      cellBO.getAttributeUpdateTime().modified();\n    }\n    if (model.renderable.getNumberOfClippingPlanes()) {\n      // add all the clipping planes\n      const numClipPlanes = model.renderable.getNumberOfClippingPlanes();\n      const planeEquations = [];\n      const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n      const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n      const mat = inverseShiftScaleMatrix ? mat4.copy(model.tmpMat4, actor.getMatrix()) : actor.getMatrix();\n      if (inverseShiftScaleMatrix) {\n        mat4.transpose(mat, mat);\n        mat4.multiply(mat, mat, inverseShiftScaleMatrix);\n        mat4.transpose(mat, mat);\n      }\n      for (let i = 0; i < numClipPlanes; i++) {\n        const planeEquation = [];\n        model.renderable.getClippingPlaneInDataCoords(mat, i, planeEquation);\n        for (let j = 0; j < 4; j++) {\n          planeEquations.push(planeEquation[j]);\n        }\n      }\n      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);\n      cellBO.getProgram().setUniform4fv('clipPlanes', planeEquations);\n    }\n    if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {\n      cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());\n    }\n    const tus = model.openGLActor.getActiveTextures();\n    if (tus) {\n      for (let index = 0; index < tus.length; ++index) {\n        const tex = tus[index];\n        const texUnit = tex.getTextureUnit();\n        const tname = `texture${texUnit + 1}`;\n        if (cellBO.getProgram().isUniformUsed(tname)) {\n          cellBO.getProgram().setUniformi(tname, texUnit);\n        }\n      }\n    }\n\n    // handle depth requests\n    if (model.haveSeenDepthRequest) {\n      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);\n    }\n\n    // handle coincident\n    if (cellBO.getProgram().isUniformUsed('coffset')) {\n      const cp = publicAPI.getCoincidentParameters(ren, actor);\n      cellBO.getProgram().setUniformf('coffset', cp.offset);\n      // cfactor isn't always used when coffset is.\n      if (cellBO.getProgram().isUniformUsed('cfactor')) {\n        cellBO.getProgram().setUniformf('cfactor', cp.factor);\n      }\n    }\n\n    // handle wide lines\n    cellBO.setMapperShaderParameters(ren, actor, model._openGLRenderer.getTiledSizeAndOrigin());\n    const selector = model._openGLRenderer.getSelector();\n    cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);\n    cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);\n  };\n  publicAPI.setLightingShaderParameters = (cellBO, ren, actor) => {\n    // for unlit and headlight there are no lighting parameters\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    if (lastLightComplexity < 2) {\n      return;\n    }\n    const program = cellBO.getProgram();\n\n    // bind some light settings\n    let numberOfLights = 0;\n    const lights = ren.getLightsByReference();\n    for (let index = 0; index < lights.length; ++index) {\n      const light = lights[index];\n      const status = light.getSwitch();\n      if (status > 0.0) {\n        const dColor = light.getColorByReference();\n        const intensity = light.getIntensity();\n        model.lightColor[0] = dColor[0] * intensity;\n        model.lightColor[1] = dColor[1] * intensity;\n        model.lightColor[2] = dColor[2] * intensity;\n        // get required info from light\n        const ld = light.getDirection();\n        const transform = ren.getActiveCamera().getViewMatrix();\n        const newLightDirection = [...ld];\n        if (light.lightTypeIsSceneLight()) {\n          newLightDirection[0] = transform[0] * ld[0] + transform[1] * ld[1] + transform[2] * ld[2];\n          newLightDirection[1] = transform[4] * ld[0] + transform[5] * ld[1] + transform[6] * ld[2];\n          newLightDirection[2] = transform[8] * ld[0] + transform[9] * ld[1] + transform[10] * ld[2];\n          normalize(newLightDirection);\n        }\n        model.lightDirection[0] = newLightDirection[0];\n        model.lightDirection[1] = newLightDirection[1];\n        model.lightDirection[2] = newLightDirection[2];\n        normalize(model.lightDirection);\n        program.setUniform3fArray(`lightColor${numberOfLights}`, model.lightColor);\n        program.setUniform3fArray(`lightDirectionVC${numberOfLights}`, model.lightDirection);\n        numberOfLights++;\n      }\n    }\n\n    // we are done unless we have positional lights\n    if (lastLightComplexity < 3) {\n      return;\n    }\n\n    // for lightkit case there are some parameters to set\n    const cam = ren.getActiveCamera();\n    const viewTF = cam.getViewMatrix();\n    mat4.transpose(viewTF, viewTF);\n    numberOfLights = 0;\n    for (let index = 0; index < lights.length; ++index) {\n      const light = lights[index];\n      const status = light.getSwitch();\n      if (status > 0.0) {\n        const lp = light.getTransformedPosition();\n        const np = new Float64Array(3);\n        vec3.transformMat4(np, lp, viewTF);\n        program.setUniform3fArray(`lightAttenuation${numberOfLights}`, light.getAttenuationValuesByReference());\n        program.setUniformi(`lightPositional${numberOfLights}`, light.getPositional());\n        program.setUniformf(`lightExponent${numberOfLights}`, light.getExponent());\n        program.setUniformf(`lightConeAngle${numberOfLights}`, light.getConeAngle());\n        program.setUniform3fArray(`lightPositionVC${numberOfLights}`, [np[0], np[1], np[2]]);\n        numberOfLights++;\n      }\n    }\n  };\n  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\n    matrixType.identity(tmpMat);\n    return matrixArray.reduce((res, matrix, index) => {\n      if (index === 0) {\n        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\n      }\n      return matrix ? matrixType.multiply(res, res, matrix) : res;\n    }, tmpMat);\n  }\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n\n    // [WMVP]C == {world, model, view, projection} coordinates\n    // E.g., WCPC == world to projection coordinate transformation\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\n    const cam = ren.getActiveCamera();\n    const camm = model.openGLCamera.getKeyMatrixTime().getMTime();\n    const progm = program.getLastCameraMTime();\n    const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n    const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n    const actorIsIdentity = actor.getIsIdentity();\n    const actMats = actorIsIdentity ? {\n      mcwc: null,\n      normalMatrix: null\n    } : model.openGLActor.getKeyMatrices();\n    if (actor.getCoordinateSystem() === CoordinateSystem.DISPLAY) {\n      const size = model._openGLRenderer.getTiledSizeAndOrigin();\n      mat4.identity(model.tmpMat4);\n      model.tmpMat4[0] = 2.0 / size.usize;\n      model.tmpMat4[12] = -1.0;\n      model.tmpMat4[5] = 2.0 / size.vsize;\n      model.tmpMat4[13] = -1.0;\n      mat4.multiply(model.tmpMat4, model.tmpMat4, inverseShiftScaleMatrix);\n      program.setUniformMatrix('MCPCMatrix', model.tmpMat4);\n    } else {\n      program.setUniformMatrix('MCPCMatrix', safeMatrixMultiply([keyMats.wcpc, actMats.mcwc, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n    }\n    if (program.isUniformUsed('MCVCMatrix')) {\n      program.setUniformMatrix('MCVCMatrix', safeMatrixMultiply([keyMats.wcvc, actMats.mcwc, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n    }\n    if (program.isUniformUsed('normalMatrix')) {\n      program.setUniformMatrix3x3('normalMatrix', safeMatrixMultiply([keyMats.normalMatrix, actMats.normalMatrix], mat3, model.tmpMat3));\n    }\n    if (progm !== camm) {\n      if (program.isUniformUsed('cameraParallel')) {\n        program.setUniformi('cameraParallel', cam.getParallelProjection());\n      }\n      program.setLastCameraMTime(camm);\n    }\n    if (!actorIsIdentity) {\n      // reset the cam mtime as actor modified the shader values\n      program.setLastCameraMTime(0);\n    }\n  };\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    let ppty = actor.getProperty();\n    let opacity = ppty.getOpacity();\n    let aColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getAmbientColorByReference();\n    let dColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getDiffuseColorByReference();\n    let aIntensity = model.drawingEdges ? 1.0 : ppty.getAmbient();\n    let dIntensity = model.drawingEdges ? 0.0 : ppty.getDiffuse();\n    let sIntensity = model.drawingEdges ? 0.0 : ppty.getSpecular();\n    const specularPower = ppty.getSpecularPower();\n    program.setUniformf('opacityUniform', opacity);\n    program.setUniform3fArray('ambientColorUniform', aColor);\n    program.setUniform3fArray('diffuseColorUniform', dColor);\n    program.setUniformf('ambient', aIntensity);\n    program.setUniformf('diffuse', dIntensity);\n\n    // we are done unless we have lighting\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\n    if (lastLightComplexity < 1) {\n      return;\n    }\n    let sColor = ppty.getSpecularColorByReference();\n    program.setUniform3fArray('specularColorUniform', sColor);\n    program.setUniformf('specularPowerUniform', specularPower);\n    program.setUniformf('specular', sIntensity);\n\n    // now set the backface properties if we have them\n    if (program.isUniformUsed('ambientIntensityBF')) {\n      ppty = actor.getBackfaceProperty();\n      opacity = ppty.getOpacity();\n      aColor = ppty.getAmbientColor();\n      aIntensity = ppty.getAmbient();\n      dColor = ppty.getDiffuseColor();\n      dIntensity = ppty.getDiffuse();\n      sColor = ppty.getSpecularColor();\n      sIntensity = ppty.getSpecular();\n      program.setUniformf('ambientIntensityBF', aIntensity);\n      program.setUniformf('diffuseIntensityBF', dIntensity);\n      program.setUniformf('opacityUniformBF', opacity);\n      program.setUniform3fArray('ambientColorUniformBF', aColor);\n      program.setUniform3fArray('diffuseColorUniformBF', dColor);\n\n      // we are done unless we have lighting\n      if (lastLightComplexity < 1) {\n        return;\n      }\n      program.setUniformf('specularIntensityBF', sIntensity);\n      program.setUniform3fArray('specularColorUniformBF', sColor);\n      program.setUniformf('specularPowerUniformBF', specularPower);\n    }\n  };\n  publicAPI.updateMaximumPointCellIds = (ren, actor) => {\n    const selector = model._openGLRenderer.getSelector();\n    if (!selector) {\n      return;\n    }\n    if (model.selectionWebGLIdsToVTKIds?.points?.length) {\n      const length = model.selectionWebGLIdsToVTKIds.points.length;\n      selector.setMaximumPointId(length - 1);\n    }\n    if (model.selectionWebGLIdsToVTKIds?.cells?.length) {\n      const length = model.selectionWebGLIdsToVTKIds.cells.length;\n      selector.setMaximumCellId(length - 1);\n    }\n    const fieldAssociation = selector.getFieldAssociation();\n    if (fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n      model.pointPicking = true;\n    }\n  };\n  publicAPI.renderPieceStart = (ren, actor) => {\n    model.primitiveIDOffset = 0;\n    model.vertexIDOffset = 0;\n    const picking = getPickState(model._openGLRenderer);\n    if (model.lastSelectionState !== picking) {\n      model.selectionStateChanged.modified();\n      model.lastSelectionState = picking;\n    }\n    if (model._openGLRenderer.getSelector()) {\n      switch (picking) {\n        default:\n          model._openGLRenderer.getSelector().renderProp(actor);\n      }\n    }\n\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // If we are coloring by texture, then load the texture map.\n    // Use Map as indicator, because texture hangs around.\n    if (model.renderable.getColorTextureMap()) {\n      model.internalColorTexture.activate();\n    }\n\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\n    model.lastBoundBO = null;\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const representation = actor.getProperty().getRepresentation();\n    const drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;\n    const selector = model._openGLRenderer.getSelector();\n    // If we are picking points, we need to tell it to the helper\n    const pointPicking = selector && selector.getFieldAssociation() === FieldAssociations.FIELD_ASSOCIATION_POINTS && (model.lastSelectionState === PassTypes.ID_LOW24 || model.lastSelectionState === PassTypes.ID_HIGH24);\n\n    // for every primitive type\n    for (let i = primTypes.Start; i < primTypes.End; i++) {\n      model.primitives[i].setPointPicking(pointPicking);\n      const cabo = model.primitives[i].getCABO();\n      if (cabo.getElementCount()) {\n        // are we drawing edges\n        model.drawingEdges = drawSurfaceWithEdges && (i === primTypes.TrisEdges || i === primTypes.TriStripsEdges);\n        // don't draw edges when rendering depth or rendering for picking\n        if (!model.drawingEdges || !(model.renderDepth || model.lastSelectionState >= 0)) {\n          model.lastBoundBO = model.primitives[i];\n          model.primitiveIDOffset += model.primitives[i].drawArrays(ren, actor, representation, publicAPI);\n          model.vertexIDOffset += model.primitives[i].getCABO().getElementCount();\n        }\n      }\n    }\n  };\n  publicAPI.renderPieceFinish = (ren, actor) => {\n    if (model.LastBoundBO) {\n      model.LastBoundBO.getVAO().release();\n    }\n    if (model.renderable.getColorTextureMap()) {\n      model.internalColorTexture.deactivate();\n    }\n  };\n  publicAPI.renderPiece = (ren, actor) => {\n    // Make sure that we have been properly initialized.\n    // if (ren.getRenderWindow().checkAbortStatus()) {\n    //   return;\n    // }\n\n    publicAPI.invokeEvent(StartEvent);\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent(EndEvent);\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    // if there are no points then we are done\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\n      return;\n    }\n\n    // apply faceCulling\n    const gl = model.context;\n    const backfaceCulling = actor.getProperty().getBackfaceCulling();\n    const frontfaceCulling = actor.getProperty().getFrontfaceCulling();\n    if (!backfaceCulling && !frontfaceCulling) {\n      model._openGLRenderWindow.disableCullFace();\n    } else if (frontfaceCulling) {\n      model._openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.FRONT);\n    } else {\n      model._openGLRenderWindow.enableCullFace();\n      gl.cullFace(gl.BACK);\n    }\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n  publicAPI.computeBounds = (ren, actor) => {\n    if (!publicAPI.getInput()) {\n      uninitializeBounds(model.bounds);\n      return;\n    }\n    model.bounds = publicAPI.getInput().getBounds();\n  };\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n    // Always call this function as the selector can change\n    publicAPI.updateMaximumPointCellIds();\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    const vmtime = model.VBOBuildTime.getMTime();\n    if (vmtime < publicAPI.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const poly = model.currentInput;\n    if (poly === null) {\n      return;\n    }\n    model.renderable.mapScalars(poly, 1.0);\n    const c = model.renderable.getColorMapColors();\n    model.haveCellScalars = false;\n    const scalarMode = model.renderable.getScalarMode();\n    if (model.renderable.getScalarVisibility()) {\n      // We must figure out how the scalars should be mapped to the polydata.\n      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\n        model.haveCellScalars = true;\n      }\n    }\n\n    // Do we have normals?\n    let n = actor.getProperty().getInterpolation() !== Shading.FLAT ? poly.getPointData().getNormals() : null;\n    if (n === null && poly.getCellData().getNormals()) {\n      model.haveCellNormals = true;\n      n = poly.getCellData().getNormals();\n    }\n\n    // rebuild the VBO if the data has changed we create a string for the VBO what\n    // can change the VBO? points normals tcoords colors so what can change those?\n    // the input data is clearly one as it can change all four items tcoords may\n    // haveTextures or not colors may change based on quite a few mapping\n    // parameters in the mapper\n\n    const representation = actor.getProperty().getRepresentation();\n    let tcoords = poly.getPointData().getTCoords();\n    if (!model.openGLActor.getActiveTextures()) {\n      tcoords = null;\n    }\n\n    // Flag to check if tcoords are per cell instead of per point\n    let useTCoordsPerCell = false;\n    // handle color mapping via texture\n    if (model.renderable.getColorCoordinates()) {\n      tcoords = model.renderable.getColorCoordinates();\n      useTCoordsPerCell = model.renderable.getAreScalarsMappedFromCells();\n      if (!model.internalColorTexture) {\n        model.internalColorTexture = vtkOpenGLTexture.newInstance({\n          resizable: true\n        });\n      }\n      const tex = model.internalColorTexture;\n      // the following 4 lines allow for NPOT textures\n      tex.setMinificationFilter(Filter.NEAREST);\n      tex.setMagnificationFilter(Filter.NEAREST);\n      tex.setWrapS(Wrap.CLAMP_TO_EDGE);\n      tex.setWrapT(Wrap.CLAMP_TO_EDGE);\n      tex.setOpenGLRenderWindow(model._openGLRenderWindow);\n      const input = model.renderable.getColorTextureMap();\n      const ext = input.getExtent();\n      const inScalars = input.getPointData().getScalars();\n      tex.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());\n      tex.activate();\n      tex.sendParameters();\n      tex.deactivate();\n    }\n    const toString = `${poly.getMTime()}A${representation}B${poly.getMTime()}` + `C${n ? n.getMTime() : 1}D${c ? c.getMTime() : 1}` + `E${actor.getProperty().getEdgeVisibility()}` + `F${tcoords ? tcoords.getMTime() : 1}`;\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      const points = poly.getPoints();\n      const options = {\n        points,\n        normals: n,\n        tcoords,\n        colors: c,\n        cellOffset: 0,\n        vertexOffset: 0,\n        // Used to keep track of vertex ids across primitives for selection\n        useTCoordsPerCell,\n        haveCellScalars: model.haveCellScalars,\n        haveCellNormals: model.haveCellNormals,\n        customAttributes: model.renderable.getCustomShaderAttributes().map(arrayName => poly.getPointData().getArrayByName(arrayName))\n      };\n      if (model.renderable.getPopulateSelectionSettings()) {\n        model.selectionWebGLIdsToVTKIds = {\n          points: null,\n          cells: null\n        };\n      }\n      const primitives = [{\n        inRep: 'verts',\n        cells: poly.getVerts()\n      }, {\n        inRep: 'lines',\n        cells: poly.getLines()\n      }, {\n        inRep: 'polys',\n        cells: poly.getPolys()\n      }, {\n        inRep: 'strips',\n        cells: poly.getStrips()\n      }, {\n        inRep: 'polys',\n        cells: poly.getPolys()\n      }, {\n        inRep: 'strips',\n        cells: poly.getStrips()\n      }];\n      const drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\n        if (i !== primTypes.TrisEdges && i !== primTypes.TriStripsEdges) {\n          options.cellOffset += model.primitives[i].getCABO().createVBO(primitives[i].cells, primitives[i].inRep, representation, options, model.selectionWebGLIdsToVTKIds);\n          options.vertexOffset += model.primitives[i].getCABO().getElementCount();\n        } else {\n          // if we have edge visibility build the edge VBOs\n          if (drawSurfaceWithEdges) {\n            // VBOs for edges in \"surface with edges\" are the last to be built,\n            // they are not used when picking with a hardware selector so they\n            // don't need selectionWebGLIdsToVTKIds and don't update cellOffset and vertexOffset\n            model.primitives[i].getCABO().createVBO(primitives[i].cells, primitives[i].inRep, Representation.WIREFRAME, {\n              ...options,\n              tcoords: null,\n              colors: null,\n              haveCellScalars: false,\n              haveCellNormals: false\n            });\n          } else {\n            // otherwise free them\n            model.primitives[i].releaseGraphicsResources();\n          }\n        }\n      }\n      if (model.renderable.getPopulateSelectionSettings()) {\n        model.renderable.setSelectionWebGLIdsToVTKIds(model.selectionWebGLIdsToVTKIds);\n      }\n      model.VBOBuildString = toString;\n    }\n    model.VBOBuildTime.modified();\n  };\n  publicAPI.getAllocatedGPUMemoryInBytes = () => {\n    let memUsed = 0;\n    model.primitives.forEach(prim => {\n      memUsed += prim.getAllocatedGPUMemoryInBytes();\n    });\n    // Return in MB\n    return memUsed;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  primitives: null,\n  primTypes: null,\n  shaderRebuildString: null,\n  tmpMat4: null,\n  ambientColor: [],\n  // used internally\n  diffuseColor: [],\n  // used internally\n  specularColor: [],\n  // used internally\n  lightColor: [],\n  // used internally\n  lightDirection: [],\n  // used internally\n  lastHaveSeenDepthRequest: false,\n  haveSeenDepthRequest: false,\n  lastSelectionState: PassTypes.MIN_KNOWN_PASS - 1,\n  selectionStateChanged: null,\n  selectionWebGLIdsToVTKIds: null,\n  pointPicking: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementBuildShadersWithReplacements(publicAPI, model, initialValues);\n  model.primitives = [];\n  model.primTypes = primTypes;\n  model.tmpMat3 = mat3.identity(new Float64Array(9));\n  model.tmpMat4 = mat4.identity(new Float64Array(16));\n  for (let i = primTypes.Start; i < primTypes.End; i++) {\n    model.primitives[i] = vtkHelper.newInstance();\n    model.primitives[i].setPrimitiveType(i);\n    model.primitives[i].set({\n      lastLightComplexity: 0,\n      lastLightCount: 0,\n      lastSelectionPass: false\n    }, true);\n  }\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n  model.selectionStateChanged = {};\n  obj(model.selectionStateChanged, {\n    mtime: 0\n  });\n\n  // Object methods\n  vtkOpenGLPolyDataMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLPolyDataMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOpenGLPolyDataMapper$1 = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkMapper', newInstance);\n\nexport { vtkOpenGLPolyDataMapper$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkAbstractMapper from './AbstractMapper.js';\nimport vtkLookupTable from '../../Common/Core/LookupTable.js';\nimport Constants from './Mapper/Constants.js';\n\nconst {\n  ColorMode,\n  ScalarMode,\n  GetArray\n} = Constants;\n\n// ---------------------------------------------------------------------------\n// vtkMapper2D methods\n// ---------------------------------------------------------------------------\n\nfunction vtkMapper2D(publicAPI, model) {\n  // Set out className\n  model.classHierarchy.push('vtkMapper2D');\n  publicAPI.createDefaultLookupTable = () => {\n    model.lookupTable = vtkLookupTable.newInstance();\n  };\n  publicAPI.getColorModeAsString = () => macro.enumToString(ColorMode, model.colorMode);\n  publicAPI.setColorModeToDefault = () => publicAPI.setColorMode(0);\n  publicAPI.setColorModeToMapScalars = () => publicAPI.setColorMode(1);\n  publicAPI.setColorModeToDirectScalars = () => publicAPI.setColorMode(2);\n  publicAPI.getScalarModeAsString = () => macro.enumToString(ScalarMode, model.scalarMode);\n  publicAPI.setScalarModeToDefault = () => publicAPI.setScalarMode(0);\n  publicAPI.setScalarModeToUsePointData = () => publicAPI.setScalarMode(1);\n  publicAPI.setScalarModeToUseCellData = () => publicAPI.setScalarMode(2);\n  publicAPI.setScalarModeToUsePointFieldData = () => publicAPI.setScalarMode(3);\n  publicAPI.setScalarModeToUseCellFieldData = () => publicAPI.setScalarMode(4);\n  publicAPI.setScalarModeToUseFieldData = () => publicAPI.setScalarMode(5);\n  publicAPI.getAbstractScalars = (input, scalarMode, arrayAccessMode, arrayId, arrayName) => {\n    // make sure we have an input\n    if (!input || !model.scalarVisibility) {\n      return {\n        scalars: null,\n        cellFLag: false\n      };\n    }\n    let scalars = null;\n    let cellFlag = false;\n\n    // get scalar data and point/cell attribute according to scalar mode\n    if (scalarMode === ScalarMode.DEFAULT) {\n      scalars = input.getPointData().getScalars();\n      if (!scalars) {\n        scalars = input.getCellData().getScalars();\n        cellFlag = true;\n      }\n    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {\n      scalars = input.getPointData().getScalars();\n    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {\n      scalars = input.getCellData().getScalars();\n      cellFlag = true;\n    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {\n      const pd = input.getPointData();\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = pd.getArrayByIndex(arrayId);\n      } else {\n        scalars = pd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {\n      const cd = input.getCellData();\n      cellFlag = true;\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = cd.getArrayByIndex(arrayId);\n      } else {\n        scalars = cd.getArrayByName(arrayName);\n      }\n    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {\n      const fd = input.getFieldData();\n      if (arrayAccessMode === GetArray.BY_ID) {\n        scalars = fd.getArrayByIndex(arrayId);\n      } else {\n        scalars = fd.getArrayByName(arrayName);\n      }\n    }\n    return {\n      scalars,\n      cellFlag\n    };\n  };\n  publicAPI.getLookupTable = () => {\n    if (!model.lookupTable) {\n      publicAPI.createDefaultLookupTable();\n    }\n    return model.lookupTable;\n  };\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.lookupTable !== null) {\n      const time = model.lookupTable.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.mapScalars = (input, alpha) => {\n    const scalars = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;\n    if (!scalars) {\n      model.colorMapColors = null;\n      return;\n    }\n\n    // we want to only recompute when something has changed\n    const toString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\n    if (model.colorBuildString === toString) return;\n    if (!model.useLookupTableScalarRange) {\n      publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);\n    }\n    const lut = publicAPI.getLookupTable();\n    if (lut) {\n      // Ensure that the lookup table is built\n      lut.build();\n      model.colorMapColors = lut.mapScalars(scalars, model.colorMode, model.fieldDataTupleId);\n    }\n    model.colorBuildString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\n  };\n  publicAPI.getPrimitiveCount = () => {\n    const input = publicAPI.getInputData();\n    const pcount = {\n      points: input.getPoints().getNumberOfValues() / 3,\n      verts: input.getVerts().getNumberOfValues() - input.getVerts().getNumberOfCells(),\n      lines: input.getLines().getNumberOfValues() - 2 * input.getLines().getNumberOfCells(),\n      triangles: input.getPolys().getNumberOfValues() - 3 * input.getPolys().getNumberOfCells()\n    };\n    return pcount;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  static: false,\n  lookupTable: null,\n  scalarVisibility: false,\n  scalarRange: [0, 1],\n  useLookupTableScalarRange: false,\n  colorMode: 0,\n  scalarMode: 0,\n  arrayAccessMode: 1,\n  // By_NAME\n\n  renderTime: 0,\n  colorByArrayName: null,\n  transformCoordinate: null,\n  viewSpecificProperties: null,\n  customShaderAttributes: []\n};\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['colorMapColors']);\n  macro.setGet(publicAPI, model, ['arrayAccessMode', 'colorByArrayName', 'colorMode', 'lookupTable', 'renderTime', 'scalarMode', 'scalarVisibility', 'static', 'transformCoordinate', 'useLookupTableScalarRange', 'viewSpecificProperties', 'customShaderAttributes' // point data array names that will be transferred to the VBO\n  ]);\n\n  macro.setGetArray(publicAPI, model, ['scalarRange'], 2);\n  if (!model.viewSpecificProperties) {\n    model.viewSpecificProperties = {};\n  }\n\n  // Object methods\n  vtkMapper2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMapper2D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMapper2D$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMapper2D$1 as default, extend, newInstance };\n", "var vtkPolyData2DFS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyData2DFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nuniform int PrimitiveIDOffset;\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// Scalar coloring\\n//VTK::Color::Dec\\n\\n// Depth Peeling\\n//VTK::DepthPeeling::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\nvoid main()\\n{\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Color::Impl\\n  //VTK::TCoord::Impl\\n\\n  //VTK::DepthPeeling::Impl\\n  //VTK::Picking::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n}\\n\";\n\nexport { vtkPolyData2DFS as v };\n", "var vtkPolyData2DVS = \"//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyData2DVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\n// all variables that represent positions or directions have a suffix\\n// indicating the coordinate system they are in. The possible values are\\n// MC - Model Coordinates\\n// WC - WC world coordinates\\n// VC - View Coordinates\\n// DC - Display Coordinates\\n\\nin vec4 vertexWC;\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\nuniform mat4 WCVCMatrix;  // World to view matrix\\n\\nvoid main()\\n{\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  gl_Position = WCVCMatrix*vertexWC;\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::PositionVC::Impl\\n}\\n\";\n\nexport { vtkPolyData2DVS as v };\n", "const DisplayLocation = {\n  BACKGROUND: 0,\n  FOREGROUND: 1\n};\nvar Constants = {\n  DisplayLocation\n};\n\nexport { DisplayLocation, Constants as default };\n", "import { mat4 } from 'gl-matrix';\nimport { n as newInstance$1, e as setGet, o as obj, c as macro } from '../../macros2.js';\nimport vtkHelper from './Helper.js';\nimport vtkMapper2D from '../Core/Mapper2D.js';\nimport vtkPoints from '../../Common/Core/Points.js';\nimport { v as vtkPolyData2DFS } from './glsl/vtkPolyData2DFS.glsl.js';\nimport { v as vtkPolyData2DVS } from './glsl/vtkPolyData2DVS.glsl.js';\nimport vtkReplacementShaderMapper from './ReplacementShaderMapper.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { P as round } from '../../Common/Core/Math/index.js';\nimport { DisplayLocation } from '../Core/Property2D/Constants.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// import { mat3, mat4, vec3 } from 'gl-matrix';\nconst {\n  primTypes\n} = vtkHelper;\nconst {\n  ScalarMode\n} = vtkMapper2D;\nconst {\n  vtkErrorMacro\n} = macro;\nconst StartEvent = {\n  type: 'StartEvent'\n};\nconst EndEvent = {\n  type: 'EndEvent'\n};\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLPolyDataMapper2D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLPolyDataMapper2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLPolyDataMapper2D');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.openGLActor2D = publicAPI.getFirstAncestorOfType('vtkOpenGLActor2D');\n      model._openGLRenderer = model.openGLActor2D.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(model._openGLRenderer.getRenderable().getActiveCamera());\n    }\n  };\n  publicAPI.overlayPass = prepass => {\n    if (prepass) {\n      publicAPI.render();\n    }\n  };\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\n    shaders.Vertex = vtkPolyData2DVS;\n    shaders.Fragment = vtkPolyData2DFS;\n    shaders.Geometry = '';\n  };\n  publicAPI.render = () => {\n    const ctx = model._openGLRenderWindow.getContext();\n    if (model.context !== ctx) {\n      model.context = ctx;\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\n        model.primitives[i].setOpenGLRenderWindow(model._openGLRenderWindow);\n      }\n    }\n    const actor = model.openGLActor2D.getRenderable();\n    const ren = model._openGLRenderer.getRenderable();\n    publicAPI.renderPiece(ren, actor);\n  };\n  publicAPI.renderPiece = (ren, actor) => {\n    publicAPI.invokeEvent(StartEvent);\n    if (!model.renderable.getStatic()) {\n      model.renderable.update();\n    }\n    model.currentInput = model.renderable.getInputData();\n    publicAPI.invokeEvent(EndEvent);\n    if (!model.currentInput) {\n      vtkErrorMacro('No input!');\n      return;\n    }\n\n    // if there are no points then we are done\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\n      return;\n    }\n    publicAPI.renderPieceStart(ren, actor);\n    publicAPI.renderPieceDraw(ren, actor);\n    publicAPI.renderPieceFinish(ren, actor);\n  };\n  publicAPI.renderPieceStart = (ren, actor) => {\n    model.primitiveIDOffset = 0;\n    if (model._openGLRenderer.getSelector()) {\n      switch (model._openGLRenderer.getSelector().getCurrentPass()) {\n        default:\n          model._openGLRenderer.getSelector().renderProp(actor);\n      }\n    }\n    // make sure the BOs are up to date\n    publicAPI.updateBufferObjects(ren, actor);\n\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\n    model.lastBoundBO = null;\n  };\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // light complexity changed\n    if (cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.updateBufferObjects = (ren, actor) => {\n    // Rebuild buffers if needed\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\n      publicAPI.buildBufferObjects(ren, actor);\n    }\n  };\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\n    // first do a coarse check\n    // Note that the actor's mtime includes it's properties mtime\n    const vmtime = model.VBOBuildTime.getMTime();\n    if (vmtime < publicAPI.getMTime() || vmtime < model._openGLRenderWindow.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime() || model.renderable.getTransformCoordinate() && vmtime < ren.getMTime()) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const poly = model.currentInput;\n    if (poly === null) {\n      return;\n    }\n    model.renderable.mapScalars(poly, actor.getProperty().getOpacity());\n    const c = model.renderable.getColorMapColors();\n    model.haveCellScalars = false;\n    const scalarMode = model.renderable.getScalarMode();\n    if (model.renderable.getScalarVisibility()) {\n      // We must figure out how the scalars should be mapped to the polydata.\n      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\n        model.haveCellScalars = true;\n      }\n    }\n    const representation = actor.getProperty().getRepresentation();\n    let tcoords = poly.getPointData().getTCoords();\n    if (!model.openGLActor2D.getActiveTextures()) {\n      tcoords = null;\n    }\n    const transformCoordinate = model.renderable.getTransformCoordinate();\n    const view = ren.getRenderWindow().getViews()[0];\n    const vsize = view.getViewportSize(ren);\n    const toString = `${poly.getMTime()}A${representation}B${poly.getMTime()}` + `C${c ? c.getMTime() : 1}` + `D${tcoords ? tcoords.getMTime() : 1}` + `E${transformCoordinate ? ren.getMTime() : 1}` + `F${vsize}`;\n    if (model.VBOBuildString !== toString) {\n      // Build the VBOs\n      let points = poly.getPoints();\n      if (transformCoordinate) {\n        const p = vtkPoints.newInstance();\n        const numPts = points.getNumberOfPoints();\n        p.setNumberOfPoints(numPts);\n        const point = [];\n        for (let i = 0; i < numPts; ++i) {\n          points.getPoint(i, point);\n          transformCoordinate.setValue(point);\n          const v = transformCoordinate.getComputedDoubleViewportValue(ren);\n          p.setPoint(i, v[0], v[1], 0.0);\n        }\n        points = p;\n      }\n      const options = {\n        points,\n        tcoords,\n        colors: c,\n        cellOffset: 0,\n        haveCellScalars: model.haveCellSCalars,\n        customAttributes: model.renderable.getCustomShaderAttributes().map(arrayName => poly.getPointData().getArrayByName(arrayName))\n      };\n      options.cellOffset += model.primitives[primTypes.Points].getCABO().createVBO(poly.getVerts(), 'verts', representation, options);\n      options.cellOffset += model.primitives[primTypes.Lines].getCABO().createVBO(poly.getLines(), 'lines', representation, options);\n      options.cellOffset += model.primitives[primTypes.Tris].getCABO().createVBO(poly.getPolys(), 'polys', representation, options);\n      options.cellOffset += model.primitives[primTypes.TriStrips].getCABO().createVBO(poly.getStrips(), 'strips', representation, options);\n      model.VBOBuildTime.modified();\n      model.VBOBuildString = toString;\n    }\n  };\n  publicAPI.renderPieceDraw = (ren, actor) => {\n    const representation = actor.getProperty().getRepresentation();\n    const gl = model.context;\n    gl.depthMask(true);\n\n    // for every primitive type\n    for (let i = primTypes.Start; i < primTypes.End; i++) {\n      // if there are entries\n      const cabo = model.primitives[i].getCABO();\n      if (cabo.getElementCount()) {\n        model.lastBoundBO = model.primitives[i];\n        model.primitiveIDOffset += model.primitives[i].drawArrays(ren, actor, representation, publicAPI);\n      }\n    }\n  };\n  publicAPI.renderPieceFinish = (ren, actor) => {\n    if (model.lastBoundBO) {\n      model.lastBoundBO.getVAO().release();\n    }\n  };\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\n    publicAPI.replaceShaderColor(shaders, ren, actor);\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\n    publicAPI.replaceShaderPicking(shaders, ren, actor);\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\n  };\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\n    let VSSource = shaders.Vertex;\n    let GSSource = shaders.Geometry;\n    let FSSource = shaders.Fragment;\n    if (model.haveCellScalars) {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', ['uniform samplerBuffer texture1;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = texelFetchBuffer(texture1, gl_PrimitiveID + PrimitiveIDOffset);']).result;\n    }\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Dec', ['in vec4 diffuseColor;', 'out vec4 fcolorVSOutput;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::Color::Impl', ['fcolorVSOutput = diffuseColor;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Dec', ['in vec4 fcolorVSOutput[];\\n', 'out vec4 fcolorGSOutput;']).result;\n      GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::Color::Impl', ['fcolorGSOutput = fcolorVSOutput[i];']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', ['in vec4 fcolorVSOutput;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = fcolorVSOutput;']).result;\n    } else {\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Dec', ['uniform vec4 diffuseColor;']).result;\n      FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = diffuseColor;']).result;\n    }\n    shaders.Vertex = VSSource;\n    shaders.Geometry = GSSource;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderTCoord = (shaders, ren, actor) => {\n    if (model.lastBoundBO.getCABO().getTCoordOffset()) {\n      let VSSource = shaders.Vertex;\n      let GSSource = shaders.Geometry;\n      let FSSource = shaders.Fragment;\n      const tcdim = model.lastBoundBO.getCABO().getTCoordComponents();\n      if (tcdim === 1) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', ['in float tcoordMC;', 'out float tcoordVCVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', ['tcoordVCVSOutput = tcoordMC;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in float tcoordVCVSOutput[];\\n', 'out float tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, ['//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['in float tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['gl_FragData[0] = gl_FragData[0]*texture2D(texture1, vec2(tcoordVCVSOutput,0));']).result;\n      } else if (tcdim === 2) {\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordMC;', 'out vec2 tcoordVCVSOutput;']).result;\n        VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::TCoord::Impl', ['tcoordVCVSOutput = tcoordMC;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];\\n', 'out vec2 tcoordVCGSOutput;']).result;\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::TCoord::Impl', ['tcoordVCGSOutput = tcoordVCVSOutput[i];']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\n        FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::TCoord::Impl', ['gl_FragData[0] = gl_FragData[0]*texture2D(texture1, tcoordVCVSOutput.st);']).result;\n      }\n      if (model.haveCellScalars) {\n        GSSource = vtkShaderProgram.substitute(GSSource, '//VTK::PrimID::Impl', ['gl_PrimitiveID = gl_PrimitiveIDIn;']).result;\n      }\n      shaders.Vertex = VSSource;\n      shaders.Geometry = GSSource;\n      shaders.Fragment = FSSource;\n    }\n  };\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\n    let FSSource = shaders.Fragment;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Dec', ['uniform vec3 mapperIndex;', 'uniform int picking;']).result;\n    FSSource = vtkShaderProgram.substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;\n    shaders.Fragment = FSSource;\n  };\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\n    // replace common shader code\n    model.lastBoundBO.replaceShaderPositionVC(shaders, ren, actor);\n  };\n  publicAPI.invokeShaderCallbacks = (cellBO, ren, actor) => {\n    const listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;\n    if (listCallbacks) {\n      listCallbacks.forEach(object => {\n        object.callback(object.userData, cellBO, ren, actor);\n      });\n    }\n  };\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\n    // Now to update the VAO too, if necessary.\n    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {\n      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);\n    }\n    if (cellBO.getProgram().isAttributeUsed('vertexWC')) {\n      if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexWC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\n        vtkErrorMacro('Error setting vertexWC in shader VAO.');\n      }\n    }\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\n      model.renderable.getCustomShaderAttributes().forEach((attrName, idx) => {\n        if (cellBO.getProgram().isAttributeUsed(`${attrName}MC`)) {\n          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), `${attrName}MC`, cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {\n            vtkErrorMacro(`Error setting ${attrName}MC in shader VAO.`);\n          }\n        }\n      });\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\n        }\n      } else {\n        cellBO.getVAO().removeAttributeArray('tcoordMC');\n      }\n      if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {\n        cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());\n      }\n      const tus = model.openGLActor2D.getActiveTextures();\n      if (tus) {\n        for (let index = 0; index < tus.length; ++index) {\n          const tex = tus[index];\n          const texUnit = tex.getTextureUnit();\n          const tname = `texture${texUnit + 1}`;\n          if (cellBO.getProgram().isUniformUsed(tname)) {\n            cellBO.getProgram().setUniformi(tname, texUnit);\n          }\n        }\n      }\n\n      // handle wide lines\n      cellBO.setMapperShaderParameters(ren, actor, model._openGLRenderer.getTiledSizeAndOrigin());\n      const selector = model._openGLRenderer.getSelector();\n      cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);\n      cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);\n    }\n  };\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\n    const c = model.renderable.getColorMapColors();\n    if (!c || c.getNumberOfComponents() === 0) {\n      const program = cellBO.getProgram();\n      const ppty = actor.getProperty();\n      const opacity = ppty.getOpacity();\n      const dColor = ppty.getColor();\n      const diffuseColor = [dColor[0], dColor[1], dColor[2], opacity];\n      program.setUniform4f('diffuseColor', diffuseColor);\n    }\n  };\n  publicAPI.setLightingShaderParameters = (cellBO, ren, actor) => {\n    // no-op\n  };\n  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\n    matrixType.identity(tmpMat);\n    return matrixArray.reduce((res, matrix, index) => {\n      if (index === 0) {\n        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\n      }\n      return matrix ? matrixType.multiply(res, res, matrix) : res;\n    }, tmpMat);\n  }\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\n    const program = cellBO.getProgram();\n    const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\n    const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\n\n    // Get the position of the actor\n    const view = ren.getRenderWindow().getViews()[0];\n    const size = view.getViewportSize(ren);\n    const vport = ren.getViewport();\n    const actorPos = actor.getActualPositionCoordinate().getComputedDoubleViewportValue(ren);\n\n    // Get the window info\n    // Assume tile viewport is 0 1 based on vtkOpenGLRenderer\n    const tileViewport = [0.0, 0.0, 1.0, 1.0];\n    const visVP = [0.0, 0.0, 1.0, 1.0];\n    visVP[0] = vport[0] >= tileViewport[0] ? vport[0] : tileViewport[0];\n    visVP[1] = vport[1] >= tileViewport[1] ? vport[1] : tileViewport[1];\n    visVP[2] = vport[2] <= tileViewport[2] ? vport[2] : tileViewport[2];\n    visVP[3] = vport[3] <= tileViewport[3] ? vport[3] : tileViewport[3];\n    if (visVP[0] >= visVP[2]) {\n      return;\n    }\n    if (visVP[1] >= visVP[3]) {\n      return;\n    }\n    size[0] = round(size[0] * (visVP[2] - visVP[0]) / (vport[2] - vport[0]));\n    size[1] = round(size[1] * (visVP[3] - visVP[1]) / (vport[3] - vport[1]));\n    const winSize = model._openGLRenderer.getParent().getSize();\n    const xoff = round(actorPos[0] - (visVP[0] - vport[0]) * winSize[0]);\n    const yoff = round(actorPos[1] - (visVP[1] - vport[1]) * winSize[1]);\n\n    // set ortho projection\n    const left = -xoff;\n    let right = -xoff + size[0];\n    const bottom = -yoff;\n    let top = -yoff + size[1];\n\n    // it's an error to call glOrtho with\n    // either left==right or top==bottom\n    if (left === right) {\n      right = left + 1.0;\n    }\n    if (bottom === top) {\n      top = bottom + 1.0;\n    }\n\n    // compute the combined ModelView matrix and send it down to save time in the shader\n    const tmpMat4 = mat4.identity(new Float64Array(16));\n    tmpMat4[0] = 2.0 / (right - left);\n    tmpMat4[1 * 4 + 1] = 2.0 / (top - bottom);\n    tmpMat4[0 * 4 + 3] = -1.0 * (right + left) / (right - left);\n    tmpMat4[1 * 4 + 3] = -1.0 * (top + bottom) / (top - bottom);\n    tmpMat4[2 * 4 + 2] = 0.0;\n    tmpMat4[2 * 4 + 3] = actor.getProperty().getDisplayLocation() === DisplayLocation.FOREGROUND ? -1.0 : 1.0;\n    tmpMat4[3 * 4 + 3] = 1.0;\n    mat4.transpose(tmpMat4, tmpMat4);\n    program.setUniformMatrix('WCVCMatrix', safeMatrixMultiply([tmpMat4, inverseShiftScaleMatrix], mat4, model.tmpMat4));\n  };\n  publicAPI.getAllocatedGPUMemoryInBytes = () => {\n    let memUsed = 0;\n    model.primitives.forEach(prim => {\n      memUsed += prim.getAllocatedGPUMemoryInBytes();\n    });\n    // Return in MB\n    return memUsed;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  VBOBuildTime: 0,\n  VBOBuildString: null,\n  primitives: null,\n  primTypes: null,\n  shaderRebuildString: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\n  vtkReplacementShaderMapper.implementBuildShadersWithReplacements(publicAPI, model, initialValues);\n  model.primitives = [];\n  model.primTypes = primTypes;\n  model.tmpMat4 = mat4.identity(new Float64Array(16));\n  for (let i = primTypes.Start; i < primTypes.End; i++) {\n    model.primitives[i] = vtkHelper.newInstance();\n    model.primitives[i].setPrimitiveType(i);\n    model.primitives[i].set({\n      lastLightComplexity: 0,\n      lastLightCount: 0,\n      lastSelectionPass: false\n    }, true);\n  }\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  model.VBOBuildTime = {};\n  obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n\n  // Object methods\n  vtkOpenGLPolyDataMapper2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLPolyDataMapper2D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPolyDataMapper2D = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkMapper2D', newInstance);\n\nexport { vtkPolyDataMapper2D as default, extend, newInstance };\n", "import * as d3 from 'd3-scale';\nimport { R as nearestPowerOfTwo } from '../../Common/Core/Math/index.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkActor from './Actor.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkScalarsToColors from '../../Common/Core/ScalarsToColors.js';\nimport vtkMapper from './Mapper.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkTexture from './Texture.js';\n\nconst {\n  VectorMode\n} = vtkScalarsToColors;\n\n// ----------------------------------------------------------------------------\n// vtkScalarBarActor\n//\n// Note log scales are currently not supported\n//\n// Developer note: This class is broken into the main class and a helper\n// class. The main class holds view independent properties (those properties\n// that do not change as the view's resolution/aspect ratio change). The\n// helper class is instantiated one per view and holds properties that can\n// depend on view specific values such as resolution. The helper class code\n// could have been left to the View specific implementation (such as\n// vtkWebGPUScalarBarActor) but is instead placed here to it can be shared by\n// multiple rendering backends.\n//\n// ----------------------------------------------------------------------------\n\nfunction applyTextStyle(ctx, style) {\n  ctx.strokeStyle = style.strokeColor;\n  ctx.lineWidth = style.strokeSize;\n  ctx.fillStyle = style.fontColor;\n  ctx.font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\n}\n\n// ----------------------------------------------------------------------------\n// Default autoLayout function\n// ----------------------------------------------------------------------------\n\n// compute good values to use based on window size etc a bunch of heuristics\n// here with hand tuned constants These values worked for me but really this\n// method could be redically changed. The basic gist is\n// 1) compute a resonable font size\n// 2) render the text atlas using those font sizes\n// 3) pick horizontal or vertical bsed on window size\n// 4) based on the size of the title and tick labels rendered\n//    compute the box size and position such that\n//    the text will all fit nicely and the bar will be a resonable size\n// 5) compute the bar segments based on the above settings\n//\n// Note that this function can and should read values from the\n// ScalarBarActor but should only write values to the view dependent helper\n// instance that is provided as those values are the ones that will be used\n// for rendering.\n//\nfunction defaultAutoLayout(publicAPI, model) {\n  return helper => {\n    // we don't do a linear scale, the proportions for\n    // a 700 pixel window differ from a 1400\n    const lastSize = helper.getLastSize();\n    const xAxisAdjust = (lastSize[0] / 700) ** 0.8;\n    const yAxisAdjust = (lastSize[1] / 700) ** 0.8;\n    const minAdjust = Math.min(xAxisAdjust, yAxisAdjust);\n    const axisTextStyle = helper.getAxisTextStyle();\n    const tickTextStyle = helper.getTickTextStyle();\n    Object.assign(axisTextStyle, model.axisTextStyle);\n    Object.assign(tickTextStyle, model.tickTextStyle);\n\n    // compute a reasonable font size first\n    axisTextStyle.fontSize = Math.max(24 * minAdjust, 12);\n    if (helper.getLastAspectRatio() > 1.0) {\n      tickTextStyle.fontSize = Math.max(20 * minAdjust, 10);\n    } else {\n      tickTextStyle.fontSize = Math.max(16 * minAdjust, 10);\n    }\n\n    // rebuild the text atlas\n    const textSizes = helper.updateTextureAtlas();\n\n    // now compute the boxSize and pixel offsets, different algorithm\n    // for horizonal versus vertical\n    helper.setTopTitle(false);\n    const boxSize = helper.getBoxSizeByReference();\n\n    // if vertical\n    if (helper.getLastAspectRatio() > 1.0) {\n      helper.setTickLabelPixelOffset(0.3 * tickTextStyle.fontSize);\n\n      // if the title will fit within the width of the bar then that looks\n      // nicer to put it at the top (helper.topTitle), otherwise rotate it\n      // and place it sideways\n      if (textSizes.titleWidth <= textSizes.tickWidth + helper.getTickLabelPixelOffset() + 0.8 * tickTextStyle.fontSize) {\n        helper.setTopTitle(true);\n        helper.setAxisTitlePixelOffset(0.2 * tickTextStyle.fontSize);\n        boxSize[0] = 2.0 * (textSizes.tickWidth + helper.getTickLabelPixelOffset() + 0.8 * tickTextStyle.fontSize) / lastSize[0];\n        helper.setBoxPosition([0.98 - boxSize[0], -0.92]);\n      } else {\n        helper.setAxisTitlePixelOffset(0.2 * tickTextStyle.fontSize);\n        boxSize[0] = 2.0 * (textSizes.titleHeight + helper.getAxisTitlePixelOffset() + textSizes.tickWidth + helper.getTickLabelPixelOffset() + 0.8 * tickTextStyle.fontSize) / lastSize[0];\n        helper.setBoxPosition([0.99 - boxSize[0], -0.92]);\n      }\n      boxSize[1] = Math.max(1.2, Math.min(1.84 / yAxisAdjust, 1.84));\n    } else {\n      // horizontal\n      helper.setAxisTitlePixelOffset(1.2 * tickTextStyle.fontSize);\n      helper.setTickLabelPixelOffset(0.1 * tickTextStyle.fontSize);\n      const titleHeight =\n      // total offset from top of bar (includes ticks)\n      2.0 * (0.8 * tickTextStyle.fontSize + textSizes.titleHeight + helper.getAxisTitlePixelOffset()) / lastSize[1];\n      const tickWidth = 2.0 * textSizes.tickWidth / lastSize[0];\n      boxSize[0] = Math.min(1.9, Math.max(1.4, 1.4 * tickWidth * (helper.getTicks().length + 3)));\n      boxSize[1] = titleHeight;\n      helper.setBoxPosition([-0.5 * boxSize[0], -0.97]);\n    }\n\n    // recomute bar segments based on positioning\n    helper.recomputeBarSegments(textSizes);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default generateTicks function\n// ----------------------------------------------------------------------------\n\n// This function returns the default function used to generate vtkScalarBarActor ticks.\n// The default function makes use of d3.scaleLinear() to generate 5 tick marks between\n// the minimum and maximum values of the scalar bar. Customize this behavior by passing\n// a function to vtkScalarBarActor.newInstance({ generateTicks: customGenerateTicks })\n// or by calling scalarBarActor.setGenerateTicks(customGenerateTicks).\nfunction defaultGenerateTicks(publicApi, model) {\n  return helper => {\n    const lastTickBounds = helper.getLastTickBounds();\n    const scale = d3.scaleLinear().domain([lastTickBounds[0], lastTickBounds[1]]);\n    const ticks = scale.ticks(5);\n    const format = scale.tickFormat(5);\n    helper.setTicks(ticks);\n    helper.setTickStrings(ticks.map(format));\n  };\n}\n\n// many properties of this actor depend on the API specific view The main\n// dependency being the resolution as that drives what font sizes to use.\n// Bacause of this we need to do some of the calculations in a API specific\n// subclass. But... we don't want a lot of duplicated code between WebGL and\n// WebGPU for example so we have this helper class, that is designed to be\n// fairly API independent so that API specific views can call this to do\n// most of the work.\nfunction vtkScalarBarActorHelper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkScalarBarActorHelper');\n  publicAPI.setRenderable = renderable => {\n    if (model.renderable === renderable) {\n      return;\n    }\n    model.renderable = renderable;\n    model.barActor.setProperty(renderable.getProperty());\n    model.barActor.setParentProp(renderable);\n    model.barActor.setCoordinateSystemToDisplay();\n    model.tmActor.setProperty(renderable.getProperty());\n    model.tmActor.setParentProp(renderable);\n    model.tmActor.setCoordinateSystemToDisplay();\n    model.generateTicks = renderable.generateTicks;\n    model.axisTextStyle = {\n      ...renderable.getAxisTextStyle()\n    };\n    model.tickTextStyle = {\n      ...renderable.getTickTextStyle()\n    };\n    publicAPI.modified();\n  };\n  publicAPI.updateAPISpecificData = (size, camera, renderWindow) => {\n    // has the size changed?\n    if (model.lastSize[0] !== size[0] || model.lastSize[1] !== size[1]) {\n      model.lastSize[0] = size[0];\n      model.lastSize[1] = size[1];\n      model.lastAspectRatio = size[0] / size[1];\n      model.forceUpdate = true;\n    }\n    const scalarsToColors = model.renderable.getScalarsToColors();\n    if (!scalarsToColors || !model.renderable.getVisibility()) {\n      return;\n    }\n\n    // make sure the lut is assigned to our mapper\n    model.barMapper.setLookupTable(scalarsToColors);\n\n    // camera should be the same for all views\n    model.camera = camera;\n    model.renderWindow = renderWindow;\n\n    // did something significant change? If so rebuild a lot of things\n    if (model.forceUpdate || Math.max(scalarsToColors.getMTime(), publicAPI.getMTime(), model.renderable.getMTime()) > model.lastRebuildTime.getMTime()) {\n      const range = scalarsToColors.getMappingRange();\n      model.lastTickBounds = [...range];\n\n      // compute tick marks for axes (update for log scale)\n      model.renderable.getGenerateTicks()(publicAPI);\n      if (model.renderable.getAutomated()) {\n        model.renderable.getAutoLayout()(publicAPI);\n      } else {\n        // copy values from renderable\n        model.axisTextStyle = {\n          ...model.renderable.getAxisTextStyle()\n        };\n        model.tickTextStyle = {\n          ...model.renderable.getTickTextStyle()\n        };\n        model.barPosition = [...model.renderable.getBarPosition()];\n        model.barSize = [...model.renderable.getBarSize()];\n        model.boxPosition = [...model.renderable.getBoxPosition()];\n        model.boxSize = [...model.renderable.getBoxSize()];\n        model.axisTitlePixelOffset = model.renderable.getAxisTitlePixelOffset();\n        model.tickLabelPixelOffset = model.renderable.getTickLabelPixelOffset();\n\n        // rebuild the texture only when force or changed bounds, face\n        // visibility changes do to change the atlas\n        const textSizes = publicAPI.updateTextureAtlas();\n\n        // recompute bar segments based on positioning\n        publicAPI.recomputeBarSegments(textSizes);\n      }\n      publicAPI.updatePolyDataForLabels();\n      publicAPI.updatePolyDataForBarSegments();\n      model.lastRebuildTime.modified();\n      model.forceUpdate = false;\n    }\n  };\n\n  // create the texture map atlas that contains the rendering of\n  // all the text strings. Only needs to be called when the text strings\n  // have changed (labels and ticks)\n  publicAPI.updateTextureAtlas = () => {\n    // set the text properties\n    model.tmContext.textBaseline = 'bottom';\n    model.tmContext.textAlign = 'left';\n\n    // return some factors about the text atlas\n    const results = {};\n\n    // first the axislabel\n    const newTmAtlas = new Map();\n    let maxWidth = 0;\n    let totalHeight = 1; // start one pixel in so we have a border\n    applyTextStyle(model.tmContext, model.axisTextStyle);\n    let metrics = model.tmContext.measureText(model.renderable.getAxisLabel());\n    let entry = {\n      height: metrics.actualBoundingBoxAscent + 2,\n      startingHeight: totalHeight,\n      width: metrics.width + 2,\n      textStyle: model.axisTextStyle\n    };\n    newTmAtlas.set(model.renderable.getAxisLabel(), entry);\n    totalHeight += entry.height;\n    maxWidth = entry.width;\n    results.titleWidth = entry.width;\n    results.titleHeight = entry.height;\n\n    // and the ticks, NaN Below and Above\n    results.tickWidth = 0;\n    results.tickHeight = 0;\n    applyTextStyle(model.tmContext, model.tickTextStyle);\n    const strings = [...publicAPI.getTickStrings(), 'NaN', 'Below', 'Above'];\n    for (let t = 0; t < strings.length; t++) {\n      if (!newTmAtlas.has(strings[t])) {\n        metrics = model.tmContext.measureText(strings[t]);\n        entry = {\n          height: metrics.actualBoundingBoxAscent + 2,\n          startingHeight: totalHeight,\n          width: metrics.width + 2,\n          textStyle: model.tickTextStyle\n        };\n        newTmAtlas.set(strings[t], entry);\n        totalHeight += entry.height;\n        if (maxWidth < entry.width) {\n          maxWidth = entry.width;\n        }\n        if (results.tickWidth < entry.width) {\n          results.tickWidth = entry.width;\n        }\n        if (results.tickHeight < entry.height) {\n          results.tickHeight = entry.height;\n        }\n      }\n    }\n\n    // always use power of two to avoid interpolation\n    // in cases where PO2 is required\n    maxWidth = nearestPowerOfTwo(maxWidth);\n    totalHeight = nearestPowerOfTwo(totalHeight);\n\n    // set the tcoord values\n    newTmAtlas.forEach(value => {\n      value.tcoords = [0.0, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight) / totalHeight, 0.0, (totalHeight - value.startingHeight) / totalHeight];\n    });\n\n    // make sure we have power of two dimensions\n    model.tmCanvas.width = maxWidth;\n    model.tmCanvas.height = totalHeight;\n    model.tmContext.textBaseline = 'bottom';\n    model.tmContext.textAlign = 'left';\n    model.tmContext.clearRect(0, 0, maxWidth, totalHeight);\n\n    // draw the text onto the texture\n    newTmAtlas.forEach((value, key) => {\n      applyTextStyle(model.tmContext, value.textStyle);\n      model.tmContext.fillText(key, 1, value.startingHeight + value.height - 1);\n    });\n    model.tmTexture.setCanvas(model.tmCanvas);\n    // mark as modified since the canvas typically doesn't change\n    model.tmTexture.modified();\n    model._tmAtlas = newTmAtlas;\n    return results;\n  };\n  publicAPI.computeBarSize = textSizes => {\n    // compute orientation\n    model.vertical = model.boxSize[1] > model.boxSize[0];\n    const tickHeight = 2.0 * textSizes.tickHeight / model.lastSize[1];\n    const segSize = [1, 1];\n\n    // horizontal and vertical have different astetics so adjust based on\n    // orientation\n    if (model.vertical) {\n      const tickWidth = 2.0 * (textSizes.tickWidth + model.tickLabelPixelOffset) / model.lastSize[0];\n      if (model.topTitle) {\n        const titleHeight = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[1];\n        model.barSize[0] = model.boxSize[0] - tickWidth;\n        model.barSize[1] = model.boxSize[1] - titleHeight;\n      } else {\n        // rotated title so width is based off height\n        const titleWidth = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[0];\n        model.barSize[0] = model.boxSize[0] - titleWidth - tickWidth;\n        model.barSize[1] = model.boxSize[1];\n      }\n      model.barPosition[0] = model.boxPosition[0] + tickWidth;\n      model.barPosition[1] = model.boxPosition[1];\n      segSize[1] = tickHeight;\n    } else {\n      const tickWidth = (2.0 * textSizes.tickWidth - 8) / model.lastSize[0];\n      const titleHeight = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[1];\n      model.barSize[0] = model.boxSize[0];\n      model.barPosition[0] = model.boxPosition[0];\n      model.barSize[1] = model.boxSize[1] - titleHeight;\n      model.barPosition[1] = model.boxPosition[1];\n      segSize[0] = tickWidth;\n    }\n    return segSize;\n  };\n\n  // based on all the settins compute a barSegments array\n  // containing the segments of the scalar bar\n  // each segment contains\n  //   corners[4][2]\n  //   title - e.g. NaN, Above, ticks\n  //   scalars - the normalized scalars values to use for that segment\n  //\n  // Note that the bar consumes the space in the box that remains after\n  // leaving room for the text labels\n  publicAPI.recomputeBarSegments = textSizes => {\n    // first compute the barSize/Position\n    const segSize = publicAPI.computeBarSize(textSizes);\n    model.barSegments = [];\n    const startPos = [0.0, 0.0];\n\n    // horizontal and vertical have different astetics so adjust based on\n    // orientation\n    const barAxis = model.vertical ? 1 : 0;\n    const segSpace = model.vertical ? 0.01 : 0.02;\n    function pushSeg(title, scalars) {\n      model.barSegments.push({\n        corners: [[...startPos], [startPos[0] + segSize[0], startPos[1]], [startPos[0] + segSize[0], startPos[1] + segSize[1]], [startPos[0], startPos[1] + segSize[1]]],\n        scalars,\n        title\n      });\n      startPos[barAxis] += segSize[barAxis] + segSpace;\n    }\n    if (model.renderable.getDrawNanAnnotation() && model.renderable.getScalarsToColors().getNanColor()) {\n      pushSeg('NaN', [NaN, NaN, NaN, NaN]);\n    }\n    if (model.renderable.getDrawBelowRangeSwatch() && model.renderable.getScalarsToColors().getUseBelowRangeColor?.()) {\n      pushSeg('Below', [-0.1, -0.1, -0.1, -0.1]);\n    }\n    const haveAbove = model.renderable.getScalarsToColors().getUseAboveRangeColor?.();\n\n    // extra space around the ticks section\n    startPos[barAxis] += segSpace;\n    const oldSegSize = segSize[barAxis];\n    segSize[barAxis] = haveAbove ? 1.0 - 2.0 * segSpace - segSize[barAxis] - startPos[barAxis] : 1.0 - segSpace - startPos[barAxis];\n    pushSeg('ticks', model.vertical ? [0, 0, 0.995, 0.995] : [0, 0.995, 0.995, 0]);\n    if (model.renderable.getDrawAboveRangeSwatch() && haveAbove) {\n      segSize[barAxis] = oldSegSize;\n      startPos[barAxis] += segSpace;\n      pushSeg('Above', [1.1, 1.1, 1.1, 1.1]);\n    }\n  };\n\n  // called by updatePolyDataForLabels\n  // modifies class constants tmp2v3\n  const tmp2v3 = new Float64Array(3);\n\n  // anchor point = pos\n  // H alignment = left, middle, right\n  // V alignment = bottom, middle, top\n  // Text Orientation = horizontal, vertical\n  // orientation\n  publicAPI.createPolyDataForOneLabel = (text, pos, alignment, orientation, offset, results) => {\n    const value = model._tmAtlas.get(text);\n    if (!value) {\n      return;\n    }\n    // have to find the four corners of the texture polygon for this label\n    let ptIdx = results.ptIdx;\n    let cellIdx = results.cellIdx;\n\n    // get achor point in pixels\n    tmp2v3[0] = (0.5 * pos[0] + 0.5) * model.lastSize[0];\n    tmp2v3[1] = (0.5 * pos[1] + 0.5) * model.lastSize[1];\n    tmp2v3[2] = pos[2];\n    tmp2v3[0] += offset[0];\n    tmp2v3[1] += offset[1];\n\n    // get text size in display pixels\n    const textSize = [];\n    const textAxes = orientation === 'vertical' ? [1, 0] : [0, 1];\n    if (orientation === 'vertical') {\n      textSize[0] = value.width;\n      textSize[1] = -value.height;\n      // update anchor point based on alignment\n      if (alignment[0] === 'middle') {\n        tmp2v3[1] -= value.width / 2.0;\n      } else if (alignment[0] === 'right') {\n        tmp2v3[1] -= value.width;\n      }\n      if (alignment[1] === 'middle') {\n        tmp2v3[0] += value.height / 2.0;\n      } else if (alignment[1] === 'top') {\n        tmp2v3[0] += value.height;\n      }\n    } else {\n      textSize[0] = value.width;\n      textSize[1] = value.height;\n      // update anchor point based on alignment\n      if (alignment[0] === 'middle') {\n        tmp2v3[0] -= value.width / 2.0;\n      } else if (alignment[0] === 'right') {\n        tmp2v3[0] -= value.width;\n      }\n      if (alignment[1] === 'middle') {\n        tmp2v3[1] -= value.height / 2.0;\n      } else if (alignment[1] === 'top') {\n        tmp2v3[1] -= value.height;\n      }\n    }\n    results.points[ptIdx * 3] = tmp2v3[0];\n    results.points[ptIdx * 3 + 1] = tmp2v3[1];\n    results.points[ptIdx * 3 + 2] = tmp2v3[2];\n    results.tcoords[ptIdx * 2] = value.tcoords[0];\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[1];\n    ptIdx++;\n    tmp2v3[textAxes[0]] += textSize[0];\n    results.points[ptIdx * 3] = tmp2v3[0];\n    results.points[ptIdx * 3 + 1] = tmp2v3[1];\n    results.points[ptIdx * 3 + 2] = tmp2v3[2];\n    results.tcoords[ptIdx * 2] = value.tcoords[2];\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[3];\n    ptIdx++;\n    tmp2v3[textAxes[1]] += textSize[1];\n    results.points[ptIdx * 3] = tmp2v3[0];\n    results.points[ptIdx * 3 + 1] = tmp2v3[1];\n    results.points[ptIdx * 3 + 2] = tmp2v3[2];\n    results.tcoords[ptIdx * 2] = value.tcoords[4];\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[5];\n    ptIdx++;\n    tmp2v3[textAxes[0]] -= textSize[0];\n    results.points[ptIdx * 3] = tmp2v3[0];\n    results.points[ptIdx * 3 + 1] = tmp2v3[1];\n    results.points[ptIdx * 3 + 2] = tmp2v3[2];\n    results.tcoords[ptIdx * 2] = value.tcoords[6];\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[7];\n    ptIdx++;\n\n    // add the two triangles to represent the quad\n    results.polys[cellIdx * 4] = 3;\n    results.polys[cellIdx * 4 + 1] = ptIdx - 4;\n    results.polys[cellIdx * 4 + 2] = ptIdx - 3;\n    results.polys[cellIdx * 4 + 3] = ptIdx - 2;\n    cellIdx++;\n    results.polys[cellIdx * 4] = 3;\n    results.polys[cellIdx * 4 + 1] = ptIdx - 4;\n    results.polys[cellIdx * 4 + 2] = ptIdx - 2;\n    results.polys[cellIdx * 4 + 3] = ptIdx - 1;\n    results.ptIdx += 4;\n    results.cellIdx += 2;\n  };\n\n  // update the polydata associated with drawing the text labels\n  // specifically the quads used for each label and their associated tcoords\n  // etc. This changes every time the camera viewpoint changes\n  const tmpv3 = new Float64Array(3);\n  publicAPI.updatePolyDataForLabels = () => {\n    // update the polydata\n    const numLabels = publicAPI.getTickStrings().length + model.barSegments.length;\n    const numPts = numLabels * 4;\n    const numTris = numLabels * 2;\n    const points = new Float64Array(numPts * 3);\n    const polys = new Uint16Array(numTris * 4);\n    const tcoords = new Float32Array(numPts * 2);\n    const results = {\n      ptIdx: 0,\n      cellIdx: 0,\n      polys,\n      points,\n      tcoords\n    };\n\n    // compute the direction vector\n    const offsetAxis = model.vertical ? 0 : 1;\n    const spacedAxis = model.vertical ? 1 : 0;\n    tmpv3[2] = -0.99; // near plane\n\n    // draw the title\n    const alignment = model.vertical ? ['right', 'middle'] : ['middle', 'bottom'];\n    let dir = [0, 1];\n    const tickOffsets = [0, 0];\n    if (model.vertical) {\n      tickOffsets[0] = -model.tickLabelPixelOffset;\n      if (model.topTitle) {\n        tmpv3[0] = model.boxPosition[0] + 0.5 * model.boxSize[0];\n        tmpv3[1] = model.barPosition[1] + model.barSize[1];\n\n        // write the axis label\n        publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), tmpv3, ['middle', 'bottom'], 'horizontal', [0, model.axisTitlePixelOffset], results);\n      } else {\n        tmpv3[0] = model.barPosition[0] + model.barSize[0];\n        tmpv3[1] = model.barPosition[1] + 0.5 * model.barSize[1];\n\n        // write the axis label\n        publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), tmpv3, ['middle', 'top'], 'vertical', [model.axisTitlePixelOffset, 0], results);\n      }\n      dir = [-1, 0];\n    } else {\n      tickOffsets[1] = model.tickLabelPixelOffset;\n      tmpv3[0] = model.barPosition[0] + 0.5 * model.barSize[0];\n      tmpv3[1] = model.barPosition[1] + model.barSize[1];\n      publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), tmpv3, ['middle', 'bottom'], 'horizontal', [0, model.axisTitlePixelOffset], results);\n    }\n    tmpv3[offsetAxis] = model.barPosition[offsetAxis] + (0.5 * dir[offsetAxis] + 0.5) * model.barSize[offsetAxis];\n    tmpv3[spacedAxis] = model.barPosition[spacedAxis] + model.barSize[spacedAxis] * 0.5;\n\n    // draw bar segment labels\n    let tickSeg = null;\n    for (let i = 0; i < model.barSegments.length; i++) {\n      const seg = model.barSegments[i];\n      if (seg.title === 'ticks') {\n        // handle ticks below\n        tickSeg = seg;\n      } else {\n        tmpv3[spacedAxis] = model.barPosition[spacedAxis] + 0.5 * model.barSize[spacedAxis] * (seg.corners[2][spacedAxis] + seg.corners[0][spacedAxis]);\n        publicAPI.createPolyDataForOneLabel(seg.title, tmpv3, alignment, 'horizontal', tickOffsets, results);\n      }\n    }\n\n    // write the tick labels\n    const tickSegmentStart = model.barPosition[spacedAxis] + model.barSize[spacedAxis] * tickSeg.corners[0][spacedAxis];\n    const tickSegmentSize = model.barSize[spacedAxis] * (tickSeg.corners[2][spacedAxis] - tickSeg.corners[0][spacedAxis]);\n    const ticks = publicAPI.getTicks();\n    const tickStrings = publicAPI.getTickStrings();\n    const tickPositions = publicAPI.getTickPositions();\n    for (let t = 0; t < ticks.length; t++) {\n      // If tickPositions is not set, use a normalized position\n      const tickPos = tickPositions ? tickPositions[t] : (ticks[t] - model.lastTickBounds[0]) / (model.lastTickBounds[1] - model.lastTickBounds[0]);\n      tmpv3[spacedAxis] = tickSegmentStart + tickSegmentSize * tickPos;\n      publicAPI.createPolyDataForOneLabel(tickStrings[t], tmpv3, alignment, 'horizontal', tickOffsets, results);\n    }\n    const tcoordDA = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcoords,\n      name: 'TextureCoordinates'\n    });\n    model.tmPolyData.getPointData().setTCoords(tcoordDA);\n    model.tmPolyData.getPoints().setData(points, 3);\n    model.tmPolyData.getPoints().modified();\n    model.tmPolyData.getPolys().setData(polys, 1);\n    model.tmPolyData.getPolys().modified();\n    model.tmPolyData.modified();\n  };\n  publicAPI.updatePolyDataForBarSegments = () => {\n    const scalarsToColors = model.renderable.getScalarsToColors();\n    let numberOfExtraColors = 0;\n    if (model.renderable.getDrawNanAnnotation() && scalarsToColors.getNanColor()) {\n      numberOfExtraColors += 1;\n    }\n    if (model.renderable.getDrawBelowRangeSwatch() && scalarsToColors.getUseBelowRangeColor?.()) {\n      numberOfExtraColors += 1;\n    }\n    if (model.renderable.getDrawAboveRangeSwatch() && scalarsToColors.getUseAboveRangeColor?.()) {\n      numberOfExtraColors += 1;\n    }\n    const numPts = 4 * (1 + numberOfExtraColors);\n    const numQuads = numPts;\n\n    // handle vector component mode\n    let numComps = 1;\n    if (scalarsToColors.getVectorMode() === VectorMode.COMPONENT) {\n      numComps = scalarsToColors.getVectorComponent() + 1;\n    }\n\n    // create the colored bars\n    const points = new Float64Array(numPts * 3);\n    const cells = new Uint16Array(numQuads * 5);\n    const scalars = new Float32Array(numPts * numComps);\n    let ptIdx = 0;\n    let cellIdx = 0;\n    for (let i = 0; i < model.barSegments.length; i++) {\n      const seg = model.barSegments[i];\n      for (let e = 0; e < 4; e++) {\n        tmpv3[0] = model.barPosition[0] + seg.corners[e][0] * model.barSize[0];\n        tmpv3[1] = model.barPosition[1] + seg.corners[e][1] * model.barSize[1];\n        points[ptIdx * 3] = (0.5 * tmpv3[0] + 0.5) * model.lastSize[0];\n        points[ptIdx * 3 + 1] = (0.5 * tmpv3[1] + 0.5) * model.lastSize[1];\n        points[ptIdx * 3 + 2] = tmpv3[2];\n        for (let nc = 0; nc < numComps; nc++) {\n          scalars[ptIdx * numComps + nc] = model.lastTickBounds[0] + seg.scalars[e] * (model.lastTickBounds[1] - model.lastTickBounds[0]);\n        }\n        ptIdx++;\n      }\n      cells[cellIdx * 5] = 4;\n      cells[cellIdx * 5 + 1] = ptIdx - 4;\n      cells[cellIdx * 5 + 2] = ptIdx - 3;\n      cells[cellIdx * 5 + 3] = ptIdx - 2;\n      cells[cellIdx * 5 + 4] = ptIdx - 1;\n      cellIdx++;\n    }\n    const scalarsDA = vtkDataArray.newInstance({\n      numberOfComponents: numComps,\n      values: scalars,\n      name: 'Scalars'\n    });\n    model.polyData.getPointData().setScalars(scalarsDA);\n    model.polyData.getPoints().setData(points, 3);\n    model.polyData.getPoints().modified();\n    model.polyData.getPolys().setData(cells, 1);\n    model.polyData.getPolys().modified();\n    model.polyData.modified();\n  };\n}\nconst newScalarBarActorHelper = macro.newInstance(function (publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    renderable: null\n  };\n  Object.assign(model, {}, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['axisTitlePixelOffset', 'tickLabelPixelOffset', 'renderable', 'topTitle', 'ticks', 'tickStrings', 'tickPositions']);\n  macro.get(publicAPI, model, ['lastSize', 'lastAspectRatio', 'lastTickBounds', 'axisTextStyle', 'tickTextStyle', 'barActor', 'tmActor']);\n  macro.getArray(publicAPI, model, ['boxPosition', 'boxSize']);\n  macro.setArray(publicAPI, model, ['boxPosition', 'boxSize'], 2);\n  model.forceUpdate = false;\n  model.lastRebuildTime = {};\n  macro.obj(model.lastRebuildTime, {\n    mtime: 0\n  });\n  model.lastSize = [-1, -1];\n  model.tmCanvas = document.createElement('canvas');\n  model.tmContext = model.tmCanvas.getContext('2d');\n  model._tmAtlas = new Map();\n  model.barMapper = vtkMapper.newInstance();\n  model.barMapper.setInterpolateScalarsBeforeMapping(true);\n  model.barMapper.setUseLookupTableScalarRange(true);\n  model.polyData = vtkPolyData.newInstance();\n  model.barMapper.setInputData(model.polyData);\n  model.barActor = vtkActor.newInstance();\n  model.barActor.setMapper(model.barMapper);\n\n  // for texture atlas\n  model.tmPolyData = vtkPolyData.newInstance();\n  model.tmMapper = vtkMapper.newInstance();\n  model.tmMapper.setInputData(model.tmPolyData);\n  model.tmTexture = vtkTexture.newInstance({\n    resizable: true\n  });\n  model.tmTexture.setInterpolate(false);\n  model.tmActor = vtkActor.newInstance({\n    parentProp: publicAPI\n  });\n  model.tmActor.setMapper(model.tmMapper);\n  model.tmActor.addTexture(model.tmTexture);\n  model.barPosition = [0, 0];\n  model.barSize = [0, 0];\n  model.boxPosition = [0.88, -0.92];\n  model.boxSize = [0.1, 1.1];\n\n  // internal variables\n  model.lastTickBounds = [];\n  vtkScalarBarActorHelper(publicAPI, model);\n}, 'vtkScalarBarActorHelper');\n\n//\n// Now we define the public class that the application sets view independent\n// properties on. This class is fairly small as it mainly just holds\n// properties setter and getters leaving all calculations to the helper\n// class.\n//\nfunction vtkScalarBarActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkScalarBarActor');\n  publicAPI.setTickTextStyle = tickStyle => {\n    model.tickTextStyle = {\n      ...model.tickTextStyle,\n      ...tickStyle\n    };\n    publicAPI.modified();\n  };\n  publicAPI.setAxisTextStyle = axisStyle => {\n    model.axisTextStyle = {\n      ...model.axisTextStyle,\n      ...axisStyle\n    };\n    publicAPI.modified();\n  };\n  publicAPI.resetAutoLayoutToDefault = () => {\n    publicAPI.setAutoLayout(defaultAutoLayout(publicAPI, model));\n  };\n  publicAPI.resetGenerateTicksToDefault = () => {\n    publicAPI.setGenerateTicks(defaultGenerateTicks());\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    automated: true,\n    autoLayout: null,\n    axisLabel: 'Scalar Value',\n    barPosition: [0, 0],\n    barSize: [0, 0],\n    boxPosition: [0.88, -0.92],\n    boxSize: [0.1, 1.1],\n    scalarToColors: null,\n    axisTitlePixelOffset: 36.0,\n    axisTextStyle: {\n      fontColor: 'white',\n      fontStyle: 'normal',\n      fontSize: 18,\n      fontFamily: 'serif'\n    },\n    tickLabelPixelOffset: 14.0,\n    tickTextStyle: {\n      fontColor: 'white',\n      fontStyle: 'normal',\n      fontSize: 14,\n      fontFamily: 'serif'\n    },\n    generateTicks: null,\n    drawNanAnnotation: true,\n    drawBelowRangeSwatch: true,\n    drawAboveRangeSwatch: true,\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n  if (!model.autoLayout) model.autoLayout = defaultAutoLayout(publicAPI, model);\n  if (!model.generateTicks) model.generateTicks = defaultGenerateTicks();\n\n  // Inheritance\n  vtkActor.extend(publicAPI, model, initialValues);\n  publicAPI.getProperty().setDiffuse(0.0);\n  publicAPI.getProperty().setAmbient(1.0);\n  macro.setGet(publicAPI, model, ['automated', 'autoLayout', 'axisTitlePixelOffset', 'axisLabel', 'scalarsToColors', 'tickLabelPixelOffset', 'generateTicks', 'drawNanAnnotation', 'drawBelowRangeSwatch', 'drawAboveRangeSwatch']);\n  macro.get(publicAPI, model, ['axisTextStyle', 'tickTextStyle']);\n  macro.getArray(publicAPI, model, ['barPosition', 'barSize', 'boxPosition', 'boxSize']);\n  macro.setArray(publicAPI, model, ['barPosition', 'barSize', 'boxPosition', 'boxSize'], 2);\n\n  // Object methods\n  vtkScalarBarActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkScalarBarActor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkScalarBarActor$1 = {\n  newInstance,\n  extend,\n  newScalarBarActorHelper\n};\n\nexport { vtkScalarBarActor$1 as default, extend, newInstance };\n", "import { n as newInstance$1 } from '../../macros2.js';\nimport vtkScalarBarActor from '../Core/ScalarBarActor.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLScalarBarActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLScalarBarActor(publicAPI, model) {\n  model.classHierarchy.push('vtkOpenGLScalarBarActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\n      if (!model.scalarBarActorHelper.getRenderable()) {\n        model.scalarBarActorHelper.setRenderable(model.renderable);\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getBarActor());\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getTmActor());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      const camera = model._openGLRenderer ? model._openGLRenderer.getRenderable().getActiveCamera() : null;\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\n      model.scalarBarActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model._openGLRenderWindow.getRenderable());\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.scalarBarActorHelper = vtkScalarBarActor.newScalarBarActorHelper();\n\n  // Object methods\n  vtkOpenGLScalarBarActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLScalarBarActor');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkScalarBarActor', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { mat3, mat4 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet, g as get, c as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport { Representation } from '../Core/Property/Constants.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLSkybox methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLSkybox(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLSkybox');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.openGLTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\n      const ren = model._openGLRenderer.getRenderable();\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(ren.getActiveCamera());\n    }\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      renderPass.incrementOpaqueActorCount();\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass && !model._openGLRenderer.getSelector()) {\n      publicAPI.updateBufferObjects();\n      model.context.depthMask(true);\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(model.tris.getProgram());\n      model.openGLTexture.render(model._openGLRenderWindow);\n      const texUnit = model.openGLTexture.getTextureUnit();\n      model.tris.getProgram().setUniformi('sbtexture', texUnit);\n      const ren = model._openGLRenderer.getRenderable();\n      const keyMats = model.openGLCamera.getKeyMatrices(ren);\n      const imat = new Float64Array(16);\n      mat4.invert(imat, keyMats.wcpc);\n      model.tris.getProgram().setUniformMatrix('IMCPCMatrix', imat);\n      if (model.lastFormat === 'box') {\n        const camPos = ren.getActiveCamera().getPosition();\n        model.tris.getProgram().setUniform3f('camPos', camPos[0], camPos[1], camPos[2]);\n      }\n      model.tris.getVAO().bind();\n\n      // draw polygons\n      model.context.drawArrays(model.context.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n      model.tris.getVAO().release();\n      model.openGLTexture.deactivate();\n    }\n  };\n  publicAPI.updateBufferObjects = () => {\n    // build the VBO if needed, only happens once\n    if (!model.tris.getCABO().getElementCount()) {\n      const ptsArray = new Float32Array(12);\n      for (let i = 0; i < 4; i++) {\n        ptsArray[i * 3] = i % 2 * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = 1.0;\n      }\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        cellOffset: 0\n      });\n    }\n\n    // update the program?\n    if (model.renderable.getFormat() !== model.lastFormat) {\n      model.lastFormat = model.renderable.getFormat();\n      if (model.lastFormat === 'box') {\n        // we invert Y below because opengl is messed up!\n        // Cube Maps have been specified to follow the RenderMan\n        // specification (for whatever reason), and RenderMan\n        // assumes the images' origin being in the upper left,\n        // contrary to the usual OpenGL behaviour of having the\n        // image origin in the lower left. That's why things get\n        // swapped in the Y direction. It totally breaks with the usual\n        // OpenGL semantics and doesn't make sense at all.\n        // But now we're stuck with it.  From\n        // https://stackoverflow.com/questions/11685608/convention-of-faces-in-opengl-cubemapping\n        //\n        model.tris.setProgram(model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(`//VTK::System::Dec\n             attribute vec3 vertexMC;\n             uniform mat4 IMCPCMatrix;\n             varying vec3 TexCoords;\n             void main () {\n              gl_Position = vec4(vertexMC.xyz, 1.0);\n              vec4 wpos = IMCPCMatrix * gl_Position;\n              TexCoords = wpos.xyz/wpos.w;\n             }`, `//VTK::System::Dec\n             //VTK::Output::Dec\n             varying vec3 TexCoords;\n             uniform samplerCube sbtexture;\n             uniform vec3 camPos;\n             void main () {\n               // skybox looks from inside out\n               // which means we have to adjust\n               // our tcoords. Otherwise text would\n               // be flipped\n               vec3 tc = normalize(TexCoords - camPos);\n               if (abs(tc.z) < max(abs(tc.x),abs(tc.y)))\n               {\n                 tc = vec3(1.0, 1.0, -1.0) * tc;\n               }\n               else\n               {\n                 tc = vec3(-1.0, 1.0, 1.0) * tc;\n               }\n               gl_FragData[0] = textureCube(sbtexture, tc);\n             }`, ''));\n      }\n      if (model.lastFormat === 'background') {\n        // maps the texture to the window\n        model.tris.setProgram(model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(`//VTK::System::Dec\n             attribute vec3 vertexMC;\n             uniform mat4 IMCPCMatrix;\n             varying vec2 TexCoords;\n             void main () {\n              gl_Position = vec4(vertexMC.xyz, 1.0);\n              vec4 wpos = IMCPCMatrix * gl_Position;\n              TexCoords = vec2(vertexMC.x, vertexMC.y)*0.5 + 0.5;\n             }`, `//VTK::System::Dec\n             //VTK::Output::Dec\n             varying vec2 TexCoords;\n             uniform sampler2D sbtexture;\n             void main () {\n               gl_FragData[0] = texture2D(sbtexture, TexCoords);\n             }`, ''));\n      }\n      model.tris.getShaderSourceTime().modified();\n      model.tris.getVAO().bind();\n      if (!model.tris.getVAO().addAttributeArray(model.tris.getProgram(), model.tris.getCABO(), 'vertexMC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\n        vtkErrorMacro('Error setting vertexMC in shader VAO.');\n      }\n    }\n\n    // set/update the texture map if needed\n    const tmaps = model.renderable.getTextures();\n    if (!tmaps.length) {\n      vtkErrorMacro('vtkSkybox requires a texture map');\n    }\n    if (model.openGLTexture.getRenderable() !== tmaps[0]) {\n      model.openGLTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.openGLTexture.setRenderable(tmaps[0]);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.openGLTexture = vtkOpenGLTexture.newInstance();\n  model.tris = vtkHelper.newInstance();\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: mat3.identity(new Float64Array(9)),\n    mcwc: mat4.identity(new Float64Array(16))\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context']);\n  get(publicAPI, model, ['activeTextures']);\n\n  // Object methods\n  vtkOpenGLSkybox(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkSkybox = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkSkybox', newInstance);\n\nexport { vtkSkybox as default, extend, newInstance };\n", "import { n as newInstance$1, c as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// import { mat4, vec3 }     from 'gl-matrix';\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLPixelSpaceCallbackMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkOpenGLPixelSpaceCallbackMapper');\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n    model._openGLRenderWindow = model._openGLRenderer.getLastAncestorOfType('vtkOpenGLRenderWindow');\n    const aspectRatio = model._openGLRenderer.getAspectRatio();\n    const camera = model._openGLRenderer ? model._openGLRenderer.getRenderable().getActiveCamera() : null;\n    const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\n    let texels = null;\n    if (model.renderable.getUseZValues()) {\n      const zbt = renderPass.getZBufferTexture();\n      const width = Math.floor(zbt.getWidth());\n      const height = Math.floor(zbt.getHeight());\n      const gl = model._openGLRenderWindow.getContext();\n      zbt.bind();\n\n      // Here we need to use vtkFramebuffer to save current settings (bindings/buffers)\n      const fb = renderPass.getFramebuffer();\n      if (!fb) {\n        vtkDebugMacro('No framebuffer to save/restore');\n      } else {\n        // save framebuffer settings\n        fb.saveCurrentBindingsAndBuffers();\n      }\n      const framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, zbt.getHandle(), 0);\n      if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\n        texels = new Uint8Array(width * height * 4);\n        gl.viewport(0, 0, width, height);\n        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, texels);\n      }\n\n      // Now we need to restore framebuffer bindings/buffers\n      if (fb) {\n        fb.restorePreviousBindingsAndBuffers();\n      }\n      gl.deleteFramebuffer(framebuffer);\n    }\n    model.renderable.invokeCallback(model.renderable.getInputData(), camera, aspectRatio, tsize, texels);\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (model.renderable.getUseZValues()) {\n        renderPass.requestDepth();\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkOpenGLPixelSpaceCallbackMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPixelSpaceCallbackMapper = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkPixelSpaceCallbackMapper', newInstance);\n\nexport { vtkPixelSpaceCallbackMapper as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkViewNodeFactory from '../SceneGraph/ViewNodeFactory.js';\n\nconst CLASS_MAPPING = Object.create(null);\nfunction registerOverride(className, fn) {\n  CLASS_MAPPING[className] = fn;\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUViewNodeFactory');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Static class mapping shared across instances\n  model.overrides = CLASS_MAPPING;\n\n  // Inheritance\n  vtkViewNodeFactory.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkWebGPUViewNodeFactory(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUViewNodeFactory');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUViewNodeFactory$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUViewNodeFactory$1 as default, extend, newInstance, registerOverride };\n", "import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUCamera');\n  publicAPI.getProjectionMatrix = (outMat, aspect, cRange, windowCenter) => {\n    mat4.identity(outMat);\n    if (model.renderable.getParallelProjection()) {\n      // set up a rectangular parallelipiped\n      const parallelScale = model.renderable.getParallelScale();\n      const width = parallelScale * aspect;\n      const height = parallelScale;\n      const xmin = (windowCenter[0] - 1.0) * width;\n      const xmax = (windowCenter[0] + 1.0) * width;\n      const ymin = (windowCenter[1] - 1.0) * height;\n      const ymax = (windowCenter[1] + 1.0) * height;\n      const xr = 1.0 / (xmax - xmin);\n      const yr = 1.0 / (ymax - ymin);\n      outMat[0] = 2.0 * xr;\n      outMat[5] = 2.0 * yr;\n      outMat[10] = 1.0 / (cRange[1] - cRange[0]);\n      outMat[12] = (xmax + xmin) * xr;\n      outMat[13] = (ymax + ymin) * yr;\n      outMat[14] = cRange[1] / (cRange[1] - cRange[0]);\n    } else {\n      const tmp = Math.tan(Math.PI * model.renderable.getViewAngle() / 360.0);\n      let width;\n      let height;\n      if (model.renderable.getUseHorizontalViewAngle() === true) {\n        width = cRange[0] * tmp;\n        height = cRange[0] * tmp / aspect;\n      } else {\n        width = cRange[0] * tmp * aspect;\n        height = cRange[0] * tmp;\n      }\n      const xmin = (windowCenter[0] - 1.0) * width;\n      const xmax = (windowCenter[0] + 1.0) * width;\n      const ymin = (windowCenter[1] - 1.0) * height;\n      const ymax = (windowCenter[1] + 1.0) * height;\n      outMat[0] = 2.0 * cRange[0] / (xmax - xmin);\n      outMat[5] = 2.0 * cRange[0] / (ymax - ymin);\n      outMat[12] = (xmin + xmax) / (xmax - xmin);\n      outMat[13] = (ymin + ymax) / (ymax - ymin);\n      outMat[10] = 0.0;\n      outMat[14] = cRange[0];\n      outMat[11] = -1.0;\n      outMat[15] = 0.0;\n    }\n  };\n  publicAPI.convertToOpenGLDepth = val => {\n    if (model.renderable.getParallelProjection()) {\n      return 1.0 - val;\n    }\n    const cRange = model.renderable.getClippingRangeByReference();\n    let zval = -cRange[0] / val;\n    zval = (cRange[0] + cRange[1]) / (cRange[1] - cRange[0]) + 2.0 * cRange[0] * cRange[1] / (zval * (cRange[1] - cRange[0]));\n    return 0.5 * zval + 0.5;\n  };\n  publicAPI.getKeyMatrices = webGPURenderer => {\n    // has the camera changed?\n    const ren = webGPURenderer.getRenderable();\n    const webGPURenderWindow = webGPURenderer.getParent();\n    if (Math.max(webGPURenderWindow.getMTime(), publicAPI.getMTime(), ren.getMTime(), model.renderable.getMTime(), webGPURenderer.getStabilizedTime()) > model.keyMatrixTime.getMTime()) {\n      const wcvc = model.renderable.getViewMatrix();\n      mat4.copy(model.keyMatrices.normalMatrix, wcvc);\n      // zero out translation\n      model.keyMatrices.normalMatrix[3] = 0.0;\n      model.keyMatrices.normalMatrix[7] = 0.0;\n      model.keyMatrices.normalMatrix[11] = 0.0;\n      mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, wcvc);\n      const center = webGPURenderer.getStabilizedCenterByReference();\n      mat4.translate(model.keyMatrices.scvc, model.keyMatrices.wcvc, center);\n      const aspectRatio = webGPURenderer.getAspectRatio();\n      const cRange = model.renderable.getClippingRangeByReference();\n      publicAPI.getProjectionMatrix(model.keyMatrices.vcpc, aspectRatio, cRange, model.renderable.getWindowCenterByReference());\n      mat4.multiply(model.keyMatrices.scpc, model.keyMatrices.vcpc, model.keyMatrices.scvc);\n      mat4.invert(model.keyMatrices.pcsc, model.keyMatrices.scpc);\n      model.keyMatrixTime.modified();\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  keyMatrixTime: null,\n  keyMatrices: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime);\n\n  // values always get set by the get method\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    vcpc: new Float64Array(16),\n    pcsc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    scpc: new Float64Array(16),\n    scvc: new Float64Array(16)\n  };\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['keyMatrixTime']);\n\n  // Object methods\n  vtkWebGPUCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkCamera', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUBindGroup methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBindGroup(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBindGroup');\n  publicAPI.setBindables = bindables => {\n    // is there a difference between the old and new list?\n    if (model.bindables.length === bindables.length) {\n      let allMatch = true;\n      for (let i = 0; i < model.bindables.length; i++) {\n        if (model.bindables[i] !== bindables[i]) {\n          allMatch = false;\n        }\n      }\n      if (allMatch) {\n        return;\n      }\n    }\n\n    // there is a difference\n    model.bindables = bindables;\n    publicAPI.modified();\n  };\n  publicAPI.getBindGroupLayout = device => {\n    const entries = [];\n    for (let i = 0; i < model.bindables.length; i++) {\n      const entry = model.bindables[i].getBindGroupLayoutEntry();\n      entry.binding = i;\n      entries.push(entry);\n    }\n    return device.getBindGroupLayout({\n      entries\n    });\n  };\n  publicAPI.getBindGroup = device => {\n    // check mtime\n    let mtime = publicAPI.getMTime();\n    for (let i = 0; i < model.bindables.length; i++) {\n      const tm = model.bindables[i].getBindGroupTime().getMTime();\n      mtime = tm > mtime ? tm : mtime;\n    }\n    if (mtime < model.bindGroupTime.getMTime()) {\n      return model.bindGroup;\n    }\n    const entries = [];\n    for (let i = 0; i < model.bindables.length; i++) {\n      const entry = model.bindables[i].getBindGroupEntry();\n      entry.binding = i;\n      entries.push(entry);\n    }\n    model.bindGroup = device.getHandle().createBindGroup({\n      layout: publicAPI.getBindGroupLayout(device),\n      entries,\n      label: model.label\n    });\n    model.bindGroupTime.modified();\n    return model.bindGroup;\n  };\n  publicAPI.getShaderCode = pipeline => {\n    const lines = [];\n    const bgroup = pipeline.getBindGroupLayoutCount(model.label);\n    for (let i = 0; i < model.bindables.length; i++) {\n      lines.push(model.bindables[i].getShaderCode(i, bgroup));\n    }\n    return lines.join('\\n');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  label: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  model.bindables = [];\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['label', 'device', 'arrayInformation']);\n  vtkWebGPUBindGroup(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUBindGroup$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUBindGroup$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderModule methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUShaderModule(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderModule');\n  publicAPI.initialize = (device, shaderDesc) => {\n    model.device = device;\n    // console.log(shaderDesc.getCode());\n    model.handle = model.device.getHandle().createShaderModule({\n      code: shaderDesc.getCode()\n    });\n  };\n\n  // publicAPI.setLastCameraMTime = (mtime) => {\n  //   model.lastCameraMTime = mtime;\n  // };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['lastCameraMTime']);\n  macro.setGet(publicAPI, model, ['device', 'handle']);\n\n  // Object methods\n  vtkWebGPUShaderModule(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUShaderModule');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderModule$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUShaderModule$1 as default };\n", "import { m as macro } from '../../macros2.js';\nimport vtkWebGPUShaderModule from './ShaderModule.js';\n\n// perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\nfunction substitute(source, search, replace) {\n  let all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  let replaced = false;\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n  let gflag = '';\n  if (all) {\n    gflag = 'g';\n  }\n  const regex = new RegExp(search, gflag);\n  const resultstr = source.replace(regex, replaceStr);\n  return {\n    replace: replaced,\n    result: resultstr\n  };\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderCache');\n  publicAPI.getShaderModule = shaderDesc => {\n    // has it already been created?\n    const sType = shaderDesc.getType();\n    const sHash = shaderDesc.getHash();\n    const keys = model._shaderModules.keys();\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key.getHash() === sHash && key.getType() === sType) {\n        return model._shaderModules.get(key);\n      }\n    }\n\n    // console.log(JSON.stringify(shaderDesc));\n\n    const sm = vtkWebGPUShaderModule.newInstance();\n    sm.initialize(model.device, shaderDesc);\n    model._shaderModules.set(shaderDesc, sm);\n    return sm;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  shaderModules: null,\n  device: null,\n  window: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects\n  model._shaderModules = new Map();\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device', 'window']);\n\n  // Object methods\n  vtkWebGPUShaderCache(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUShaderCache');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderCache$1 = {\n  newInstance,\n  extend,\n  substitute\n};\n\nexport { vtkWebGPUShaderCache$1 as default, extend, newInstance };\n", "import { n as newInstance$1, o as obj, g as get, e as setGet } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUPipeline methods\n// ----------------------------------------------------------------------------\nfunction vtkWebGPUPipeline(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPipeline');\n  publicAPI.getShaderDescriptions = () => model.shaderDescriptions;\n  publicAPI.initialize = (device, hash) => {\n    // start with the renderencoder settings\n    model.pipelineDescription = model.renderEncoder.getPipelineSettings();\n    model.pipelineDescription.primitive.topology = model.topology;\n    model.pipelineDescription.vertex = model.vertexState;\n    model.pipelineDescription.label = hash;\n\n    // add in bind group layouts\n    const bindGroupLayouts = [];\n    for (let i = 0; i < model.layouts.length; i++) {\n      bindGroupLayouts.push(model.layouts[i].layout);\n    }\n    model.pipelineLayout = device.getHandle().createPipelineLayout({\n      bindGroupLayouts\n    });\n    model.pipelineDescription.layout = model.pipelineLayout;\n    for (let i = 0; i < model.shaderDescriptions.length; i++) {\n      const sd = model.shaderDescriptions[i];\n      const sm = device.getShaderModule(sd);\n      if (sd.getType() === 'vertex') {\n        model.pipelineDescription.vertex.module = sm.getHandle();\n        model.pipelineDescription.vertex.entryPoint = 'main';\n      }\n      if (sd.getType() === 'fragment') {\n        model.pipelineDescription.fragment.module = sm.getHandle();\n        model.pipelineDescription.fragment.entryPoint = 'main';\n      }\n    }\n    model.handle = device.getHandle().createRenderPipeline(model.pipelineDescription);\n  };\n  publicAPI.getShaderDescription = stype => {\n    for (let i = 0; i < model.shaderDescriptions.length; i++) {\n      if (model.shaderDescriptions[i].getType() === stype) return model.shaderDescriptions[i];\n    }\n    return null;\n  };\n  publicAPI.addBindGroupLayout = bindGroup => {\n    if (!bindGroup) {\n      return;\n    }\n    model.layouts.push({\n      layout: bindGroup.getBindGroupLayout(model.device),\n      label: bindGroup.getLabel()\n    });\n  };\n  publicAPI.getBindGroupLayout = idx => model.layouts[idx].layout;\n  publicAPI.getBindGroupLayoutCount = llabel => {\n    for (let i = 0; i < model.layouts.length; i++) {\n      if (model.layouts[i].label === llabel) {\n        return i;\n      }\n    }\n    return 0;\n  };\n  publicAPI.bindVertexInput = (renderEncoder, vInput) => {\n    vInput.bindBuffers(renderEncoder);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  handle: null,\n  layouts: null,\n  renderEncoder: null,\n  shaderDescriptions: null,\n  vertexState: null,\n  topology: null,\n  pipelineDescription: null\n};\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  obj(publicAPI, model);\n  model.layouts = [];\n  model.shaderDescriptions = [];\n  get(publicAPI, model, ['handle', 'pipelineDescription']);\n  setGet(publicAPI, model, ['device', 'renderEncoder', 'topology', 'vertexState']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n  vtkWebGPUPipeline(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nconst newInstance = newInstance$1(extend, 'vtkWebGPUPipeline');\n\n// ----------------------------------------------------------------------------\nvar vtkWebGPUPipeline$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUPipeline$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderDescription methods\n// ----------------------------------------------------------------------------\n\n// shader description\n\nfunction vtkWebGPUShaderDescription(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderDescription');\n  publicAPI.hasOutput = name => model.outputNames.includes(name);\n  publicAPI.addOutput = function (type, name) {\n    let interpolation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    model.outputTypes.push(type);\n    model.outputNames.push(name);\n    model.outputInterpolations.push(interpolation);\n  };\n  publicAPI.addBuiltinOutput = (type, name) => {\n    model.builtinOutputTypes.push(type);\n    model.builtinOutputNames.push(name);\n  };\n  publicAPI.addBuiltinInput = (type, name) => {\n    model.builtinInputTypes.push(type);\n    model.builtinInputNames.push(name);\n  };\n\n  // perform shader replacements for the input and outputs\n  // of this shader. That includes vertex inputs if specified\n  publicAPI.replaceShaderCode = (priorStage, vertexInput) => {\n    const inputImpl = [];\n    let iodec = [];\n    if (vertexInput) {\n      inputImpl.push(vertexInput.getShaderCode());\n    }\n    if (priorStage || model.builtinInputNames.length) {\n      const inputStruct = [];\n      inputStruct.push(`struct ${model.type}Input\\n{`);\n      if (priorStage) {\n        const inputNames = priorStage.getOutputNamesByReference();\n        const inputTypes = priorStage.getOutputTypesByReference();\n        const inputInterpolations = priorStage.getOutputInterpolationsByReference();\n        for (let i = 0; i < inputNames.length; i++) {\n          if (inputInterpolations[i] !== undefined) {\n            inputStruct.push(`  @location(${i}) @interpolate(${inputInterpolations[i]}) ${inputNames[i]} : ${inputTypes[i]},`);\n          } else {\n            inputStruct.push(`  @location(${i}) ${inputNames[i]} : ${inputTypes[i]},`);\n          }\n        }\n      }\n      for (let i = 0; i < model.builtinInputNames.length; i++) {\n        inputStruct.push(`  ${model.builtinInputNames[i]} : ${model.builtinInputTypes[i]},`);\n      }\n      if (inputStruct.length > 1) {\n        inputStruct.push('};');\n        iodec = inputStruct;\n        inputImpl[inputImpl.length - 1] += ',';\n        inputImpl.push(`input: ${model.type}Input`);\n      }\n    }\n    if (inputImpl.length) {\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Input', inputImpl).result;\n    }\n    if (model.outputNames.length + model.builtinOutputNames.length) {\n      const outputStruct = [`struct ${model.type}Output\\n{`];\n      for (let i = 0; i < model.outputNames.length; i++) {\n        if (model.outputInterpolations[i] !== undefined) {\n          outputStruct.push(`  @location(${i}) @interpolate(${model.outputInterpolations[i]}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\n        } else {\n          outputStruct.push(`  @location(${i}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\n        }\n      }\n      for (let i = 0; i < model.builtinOutputNames.length; i++) {\n        outputStruct.push(`  ${model.builtinOutputNames[i]} : ${model.builtinOutputTypes[i]},`);\n      }\n      outputStruct.push('};');\n      iodec = iodec.concat(outputStruct);\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Output', [`-> ${model.type}Output`]).result;\n    }\n    model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Dec', iodec).result;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  type: null,\n  // 'vertex' or 'fragment'\n  hash: null,\n  code: null,\n  outputNames: null,\n  outputTypes: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.outputNames = [];\n  model.outputTypes = [];\n  model.outputInterpolations = [];\n  model.builtinOutputNames = [];\n  model.builtinOutputTypes = [];\n  model.builtinInputNames = [];\n  model.builtinInputTypes = [];\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['type', 'hash', 'code']);\n  macro.getArray(publicAPI, model, ['outputTypes', 'outputNames', 'outputInterpolations']);\n\n  // Object methods\n  vtkWebGPUShaderDescription(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUShaderDescription');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderDescription$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUShaderDescription$1 as default, extend, newInstance };\n", "import { r as vtkErrorMacro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUDevice static functions\n//\n// WebGPU uses types in a many places and calls, and often those types\n// need to be associated with byte sizes, alignments, native arrays etc.\n// The folowing methods are designed to help vtk.js introspect those types.\n// WebGPU currently tends to use multiple type formats:\n//  - buffer types such as float32x4\n//  - shader types suchs as vec4<f32>\n//  - texture types such as rgba32float\n// ----------------------------------------------------------------------------\n\n// see https://gpuweb.github.io/gpuweb/#texture-formats\n// for possible formats, there are a lot of them\nconst textureDetails = {\n  // 8-bit formats\n  r8unorm: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  r8snorm: {\n    numComponents: 1,\n    nativeType: Int8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  r8uint: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  r8sint: {\n    numComponents: 1,\n    nativeType: Int8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  // 16-bit formats\n  r16uint: {\n    numComponents: 1,\n    nativeType: Uint16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  r16sint: {\n    numComponents: 1,\n    nativeType: Int16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  r16float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  rg8unorm: {\n    numComponents: 2,\n    nativeType: Uint8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rg8snorm: {\n    numComponents: 2,\n    nativeType: Int8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rg8uint: {\n    numComponents: 2,\n    nativeType: Uint8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  rg8sint: {\n    numComponents: 2,\n    nativeType: Int8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  // 32-bit formats\n  r32uint: {\n    numComponents: 1,\n    nativeType: Uint32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  r32sint: {\n    numComponents: 1,\n    nativeType: Int32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  r32float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  rg16uint: {\n    numComponents: 2,\n    nativeType: Uint16Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  rg16sint: {\n    numComponents: 2,\n    nativeType: Int16Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  rg16float: {\n    numComponents: 2,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  rgba8unorm: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  'rgba8unorm-srgb': {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rgba8snorm: {\n    numComponents: 4,\n    nativeType: Int8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rgba8uint: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  rgba8sint: {\n    numComponents: 4,\n    nativeType: Int8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  bgra8unorm: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  'bgra8unorm-srgb': {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  // Packed 32-bit formats\n  rgb9e5ufloat: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  rgb10a2unorm: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  rg11b10ufloat: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  // 64-bit formats\n  rg32uint: {\n    numComponents: 2,\n    nativeType: Uint32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  rg32sint: {\n    numComponents: 2,\n    nativeType: Int32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  rg32float: {\n    numComponents: 2,\n    nativeType: Float32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  rgba16uint: {\n    numComponents: 4,\n    nativeType: Uint16Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  rgba16sint: {\n    numComponents: 4,\n    nativeType: Int16Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  rgba16float: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  // 128-bit formats\n  rgba32uint: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  rgba32sint: {\n    numComponents: 4,\n    nativeType: Int32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  rgba32float: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  // Depth and stencil formats\n  stencil8: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  depth16unorm: {\n    numComponents: 1,\n    nativeType: Uint16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'depth'\n  },\n  depth24plus: {\n    numComponents: 1,\n    nativeType: Uint32Array,\n    stride: 4,\n    elementSize: 3,\n    sampleType: 'depth'\n  },\n  'depth24plus-stencil8': {\n    numComponents: 2,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'mixed'\n  },\n  depth32float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'depth'\n  }\n};\nfunction getDetailsFromTextureFormat(format) {\n  if (!format || format.length < 6) return 0;\n  if (format in textureDetails === true) {\n    return textureDetails[format];\n  }\n  vtkErrorMacro(`unknown format ${format}`);\n  return null;\n}\n\n// see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\nfunction getByteStrideFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0;\n\n  // options are x2, x3, x4 or nothing\n  let numComp = 1;\n  if (format[format.length - 2] === 'x') {\n    numComp = Number(format[format.length - 1]);\n  }\n  const sizeStart = numComp === 1 ? format.length - 1 : format.length - 3;\n  // options are 8, 16, 32 resulting in 8, 6, 2 as the last char\n  // plugged into the formula below gives 1, 2, 4 respectively\n  const num = Number(format[sizeStart]);\n  if (Number.isNaN(num)) {\n    vtkErrorMacro(`unknown format ${format}`);\n    return 0;\n  }\n  const typeSize = 5 - num / 2;\n  return numComp * typeSize;\n}\n\n// see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\nfunction getNumberOfComponentsFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0;\n\n  // options are x2, x3, x4 or nothing\n  let numComp = 1;\n  if (format[format.length - 2] === 'x') {\n    numComp = Number(format[format.length - 1]);\n  }\n  return numComp;\n}\n\n// see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\nfunction getNativeTypeFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0;\n\n  // raw types are Uint Int or Float as follows\n  let result;\n  if (format[0] === 'f') {\n    result = 'Float';\n  } else if (format[0] === 's') {\n    result = 'Int';\n  } else if (format[0] === 'u') {\n    result = 'Uint';\n  } else {\n    vtkErrorMacro(`unknown format ${format}`);\n    return undefined;\n  }\n\n  // options are 8, 16, 32 resulting in 8, 6, 2 as the last char\n  // plugged into the formula below gives 1, 2, 4 respectively\n  const base = format.split('x')[0];\n  const num = Number(base[base.length - 1]);\n  if (Number.isNaN(num)) {\n    vtkErrorMacro(`unknown format ${format}`);\n    return undefined;\n  }\n  result += 8 * (5 - num / 2);\n  result += 'Array';\n  return result;\n}\nfunction getShaderTypeFromBufferFormat(format) {\n  let dataType;\n  if (format[0] === 'f' || format[1] === 'n') {\n    dataType = 'f32';\n  } else if (format[0] === 's' && format[1] === 'i') {\n    dataType = 'i32';\n  } else if (format[0] === 'u' && format[1] === 'i') {\n    dataType = 'u32';\n  } else {\n    vtkErrorMacro(`unknown format ${format}`);\n    return undefined;\n  }\n\n  // options are x2, x3, x4 or nothing\n  let numComp = 1;\n  if (format[format.length - 2] === 'x') {\n    numComp = Number(format[format.length - 1]);\n  }\n  if (numComp === 4) return `vec4<${dataType}>`;\n  if (numComp === 3) return `vec3<${dataType}>`;\n  if (numComp === 2) return `vec2<${dataType}>`;\n  return dataType;\n}\nfunction getByteStrideFromShaderFormat(format) {\n  if (!format) return 0;\n  let numComp = 1;\n  if (format.substring(0, 3) === 'vec') {\n    numComp = Number(format[3]);\n  } else if (format.substring(0, 3) === 'mat') {\n    numComp = format[3] * format[5];\n  }\n  const typeSize = 4;\n  return numComp * typeSize;\n}\nfunction getNativeTypeFromShaderFormat(format) {\n  if (!format) return undefined;\n  if (format.includes('f32')) return 'Float32Array';\n  if (format.includes('i32')) return 'Int32Array';\n  if (format.includes('u32')) return 'Uint32Array';\n  vtkErrorMacro(`unknown format ${format}`);\n  return undefined;\n}\nvar vtkWebGPUTypes = {\n  getDetailsFromTextureFormat,\n  getByteStrideFromBufferFormat,\n  getNumberOfComponentsFromBufferFormat,\n  getNativeTypeFromBufferFormat,\n  getShaderTypeFromBufferFormat,\n  getByteStrideFromShaderFormat,\n  getNativeTypeFromShaderFormat\n};\n\nexport { vtkWebGPUTypes as default };\n", "import { n as newInstance$1, o as obj, e as setGet } from '../../macros2.js';\nimport vtkWebGPUTypes from './Types.js';\n\nfunction arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (!b.includes(a[i])) return false;\n  }\n  return true;\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUVertexInput methods\n// ----------------------------------------------------------------------------\nfunction vtkWebGPUVertexInput(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUVertexInput');\n  publicAPI.addBuffer = function (buffer, inames) {\n    let stepMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'vertex';\n    let names = inames;\n    if (!Array.isArray(names)) {\n      names = [names];\n    }\n    // only add if it is a new setting\n    for (let i = 0; i < model.inputs.length; i++) {\n      if (arraysEqual(model.inputs[i].names, names)) {\n        if (model.inputs[i].buffer === buffer) {\n          return;\n        }\n        model.inputs[i].buffer = buffer;\n        return;\n      }\n    }\n\n    // when adding a new entry, make sure we sort the array\n    // as the order is important to the shader and must always\n    // be the same, so alphabetical is an easy option\n    model.inputs.push({\n      buffer,\n      stepMode,\n      names\n    });\n    model.inputs = model.inputs.sort((v1, v2) => {\n      if (v1.names[0] < v2.names[0]) {\n        return -1;\n      }\n      if (v1.names[0] > v2.names[0]) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n  publicAPI.removeBufferIfPresent = name => {\n    for (let i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        model.inputs.splice(i, 1);\n      }\n    }\n  };\n  publicAPI.getBuffer = name => {\n    for (let i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return model.inputs[i].buffer;\n      }\n    }\n    return null;\n  };\n  publicAPI.hasAttribute = name => {\n    for (let i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  publicAPI.getAttributeTime = name => {\n    for (let i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return model.inputs[i].buffer.getSourceTime();\n      }\n    }\n    return 0;\n  };\n  publicAPI.getShaderCode = () => {\n    let result = '';\n    let nameCount = 0;\n    for (let i = 0; i < model.inputs.length; i++) {\n      for (let nm = 0; nm < model.inputs[i].names.length; nm++) {\n        const arrayInfo = model.inputs[i].buffer.getArrayInformation()[nm];\n        const type = vtkWebGPUTypes.getShaderTypeFromBufferFormat(arrayInfo.format);\n        if (nameCount > 0) {\n          result += ',\\n';\n        }\n        result = `${result}  @location(${nameCount}) ${model.inputs[i].names[nm]} : ${type}`;\n        nameCount++;\n      }\n    }\n    return result;\n  };\n  publicAPI.getVertexInputInformation = () => {\n    const info = {};\n    if (model.inputs.length) {\n      const vertexBuffers = [];\n      let nameCount = 0;\n      for (let i = 0; i < model.inputs.length; i++) {\n        const buf = model.inputs[i].buffer;\n        const buffer = {\n          arrayStride: buf.getStrideInBytes(),\n          stepMode: model.inputs[i].stepMode,\n          attributes: []\n        };\n        const arrayInfo = buf.getArrayInformation();\n        for (let nm = 0; nm < model.inputs[i].names.length; nm++) {\n          buffer.attributes.push({\n            shaderLocation: nameCount,\n            offset: arrayInfo[nm].offset,\n            format: arrayInfo[nm].format\n          });\n          nameCount++;\n        }\n        vertexBuffers.push(buffer);\n      }\n      info.buffers = vertexBuffers;\n    }\n    return info;\n  };\n  publicAPI.bindBuffers = renderEncoder => {\n    for (let i = 0; i < model.inputs.length; i++) {\n      renderEncoder.setVertexBuffer(i, model.inputs[i].buffer.getHandle());\n    }\n    if (model.indexBuffer) {\n      renderEncoder.setIndexBuffer(model.indexBuffer.getHandle(), model.indexBuffer.getArrayInformation()[0].format);\n    }\n  };\n  publicAPI.getReady = () => {};\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.created) {\n      model.inputs = [];\n      model.bindingDescriptions = [];\n      model.attributeDescriptions = [];\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  inputs: null,\n  bindingDescriptions: false,\n  attributeDescriptions: null,\n  indexBuffer: null\n};\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  obj(publicAPI, model);\n  model.bindingDescriptions = [];\n  model.attributeDescriptions = [];\n  model.inputs = [];\n  setGet(publicAPI, model, ['created', 'device', 'handle', 'indexBuffer']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n  vtkWebGPUVertexInput(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nconst newInstance = newInstance$1(extend, 'vtkWebGPUVertexInput');\n\n// ----------------------------------------------------------------------------\nvar vtkWebGPUVertexInput$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUVertexInput$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport vtkWebGPUBindGroup from './BindGroup.js';\nimport vtkWebGPUPipeline from './Pipeline.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUShaderDescription from './ShaderDescription.js';\nimport vtkWebGPUVertexInput from './VertexInput.js';\n\nconst vtkWebGPUSimpleMapperVS = `\n//VTK::Renderer::Dec\n\n//VTK::Color::Dec\n\n//VTK::Normal::Dec\n\n//VTK::TCoord::Dec\n\n//VTK::Select::Dec\n\n//VTK::Mapper::Dec\n\n//VTK::IOStructs::Dec\n\n@vertex\nfn main(\n//VTK::IOStructs::Input\n)\n//VTK::IOStructs::Output\n{\n  var output : vertexOutput;\n\n  // var vertex: vec4<f32> = vertexBC;\n\n  //VTK::Color::Impl\n\n  //VTK::Normal::Impl\n\n  //VTK::TCoord::Impl\n\n  //VTK::Select::Impl\n\n  //VTK::Position::Impl\n\n  return output;\n}\n`;\nconst vtkWebGPUSimpleMapperFS = `\n//VTK::Renderer::Dec\n\n//VTK::Color::Dec\n\n//VTK::Normal::Dec\n\n//VTK::TCoord::Dec\n\n//VTK::Select::Dec\n\n//VTK::RenderEncoder::Dec\n\n//VTK::Mapper::Dec\n\n//VTK::IOStructs::Dec\n\n@fragment\nfn main(\n//VTK::IOStructs::Input\n)\n//VTK::IOStructs::Output\n{\n  var output : fragmentOutput;\n\n  //VTK::Color::Impl\n\n  //VTK::Normal::Impl\n\n  //VTK::Light::Impl\n\n  //VTK::TCoord::Impl\n\n  //VTK::Select::Impl\n\n  // var computedColor:vec4<f32> = vec4<f32>(1.0,0.5,0.5,1.0);\n\n  //VTK::RenderEncoder::Impl\n  return output;\n}\n`;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUSimpleMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUSimpleMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUSimpleMapper');\n  publicAPI.generateShaderDescriptions = (hash, pipeline, vertexInput) => {\n    // create the shader descriptions\n    const vDesc = vtkWebGPUShaderDescription.newInstance({\n      type: 'vertex',\n      hash,\n      code: model.vertexShaderTemplate\n    });\n    const fDesc = vtkWebGPUShaderDescription.newInstance({\n      type: 'fragment',\n      hash,\n      code: model.fragmentShaderTemplate\n    });\n\n    // add them to the pipeline\n    const sdrs = pipeline.getShaderDescriptions();\n    sdrs.push(vDesc);\n    sdrs.push(fDesc);\n\n    // look for replacements to invoke\n    const scode = model.vertexShaderTemplate + model.fragmentShaderTemplate;\n    // eslint-disable-next-line prefer-regex-literals\n    const re = new RegExp('//VTK::[^:]*::', 'g');\n    const unique = scode.match(re).filter((v, i, a) => a.indexOf(v) === i);\n    const fnames = unique.map(v => `replaceShader${v.substring(7, v.length - 2)}`);\n\n    // now invoke shader replacement functions\n    for (let i = 0; i < fnames.length; i++) {\n      const fname = fnames[i];\n      if (fname !== 'replaceShaderIOStructs' && model.shaderReplacements.has(fname)) {\n        model.shaderReplacements.get(fname)(hash, pipeline, vertexInput);\n      }\n    }\n\n    // always replace the IOStructs last as other replacement funcs may\n    // add inputs or outputs\n    publicAPI.replaceShaderIOStructs(hash, pipeline, vertexInput);\n\n    // console.log(vDesc.getCode());\n    // console.log(fDesc.getCode());\n  };\n\n  publicAPI.replaceShaderIOStructs = (hash, pipeline, vertexInput) => {\n    const vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.replaceShaderCode(null, vertexInput);\n    const fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.replaceShaderCode(vDesc);\n  };\n  publicAPI.replaceShaderRenderEncoder = (hash, pipeline, vertexInput) => {\n    model.renderEncoder.replaceShaderCode(pipeline);\n  };\n  model.shaderReplacements.set('replaceShaderRenderEncoder', publicAPI.replaceShaderRenderEncoder);\n  publicAPI.replaceShaderRenderer = (hash, pipeline, vertexInput) => {\n    if (!model.WebGPURenderer) {\n      return;\n    }\n    const ubocode = model.WebGPURenderer.getBindGroup().getShaderCode(pipeline);\n    const vDesc = pipeline.getShaderDescription('vertex');\n    let code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Renderer::Dec', [ubocode]).result;\n    vDesc.setCode(code);\n    const fDesc = pipeline.getShaderDescription('fragment');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Renderer::Dec', [ubocode]).result;\n    fDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderRenderer', publicAPI.replaceShaderRenderer);\n  publicAPI.replaceShaderMapper = (hash, pipeline, vertexInput) => {\n    const ubocode = model.bindGroup.getShaderCode(pipeline);\n    const vDesc = pipeline.getShaderDescription('vertex');\n    let code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Mapper::Dec', [ubocode]).result;\n    vDesc.setCode(code);\n    const fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.addBuiltinInput('bool', '@builtin(front_facing) frontFacing');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Mapper::Dec', [ubocode]).result;\n    fDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderMapper', publicAPI.replaceShaderMapper);\n  publicAPI.replaceShaderPosition = (hash, pipeline, vertexInput) => {\n    const vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    let code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    output.Position = rendererUBO.SCPCMatrix*vertexBC;']).result;\n    vDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n  publicAPI.replaceShaderTCoord = (hash, pipeline, vertexInput) => {\n    const vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addOutput('vec2<f32>', 'tcoordVS');\n  };\n  model.shaderReplacements.set('replaceShaderTCoord', publicAPI.replaceShaderTCoord);\n  publicAPI.addTextureView = view => {\n    // is it already there?\n    if (model.textureViews.includes(view)) {\n      return;\n    }\n    model.textureViews.push(view);\n  };\n\n  // do everything required for this mapper to be rerady to draw\n  // but do not bind or do the actual draw commands as the pipeline\n  // is not neccessarily bound yet\n  publicAPI.prepareToDraw = renderEncoder => {\n    model.renderEncoder = renderEncoder;\n\n    // do anything needed to get our input data up to date\n    publicAPI.updateInput();\n\n    // make sure buffers are created and up to date\n    publicAPI.updateBuffers();\n\n    // update bindings and bind groups/layouts\n    // does not acutally bind them, that is done in draw(...)\n    publicAPI.updateBindings();\n\n    // update the pipeline, includes computing the hash, and if needed\n    // creating the pipeline, shader code etc\n    publicAPI.updatePipeline();\n  };\n  publicAPI.updateInput = () => {};\n  publicAPI.updateBuffers = () => {};\n  publicAPI.updateBindings = () => {\n    // bindings can change without a pipeline change\n    // as long as their layout remains the same.\n    // That is why this is done even when the pipeline\n    // hash doesn't change.\n    model.bindGroup.setBindables(publicAPI.getBindables());\n  };\n  publicAPI.computePipelineHash = () => {};\n  publicAPI.registerDrawCallback = encoder => {\n    encoder.registerDrawCallback(model.pipeline, publicAPI.draw);\n  };\n  publicAPI.prepareAndDraw = encoder => {\n    publicAPI.prepareToDraw(encoder);\n    encoder.setPipeline(model.pipeline);\n    publicAPI.draw(encoder);\n  };\n\n  // do the rest of the calls required to draw this mapper\n  // at this point the command encouder and pipeline are\n  // created and bound\n  publicAPI.draw = renderEncoder => {\n    const pipeline = renderEncoder.getBoundPipeline();\n\n    // bind the mapper bind group\n    renderEncoder.activateBindGroup(model.bindGroup);\n    if (model.WebGPURenderer) {\n      model.WebGPURenderer.bindUBO(renderEncoder);\n    }\n\n    // bind the vertex input\n    pipeline.bindVertexInput(renderEncoder, model.vertexInput);\n    const indexBuffer = model.vertexInput.getIndexBuffer();\n    if (indexBuffer) {\n      renderEncoder.drawIndexed(indexBuffer.getIndexCount(), model.numberOfInstances, 0, 0, 0);\n    } else {\n      renderEncoder.draw(model.numberOfVertices, model.numberOfInstances, 0, 0);\n    }\n  };\n  publicAPI.getBindables = () => {\n    const bindables = [...model.additionalBindables];\n    if (model.UBO) {\n      bindables.push(model.UBO);\n    }\n    if (model.SSBO) {\n      bindables.push(model.SSBO);\n    }\n\n    // add texture BindGroupLayouts\n    for (let t = 0; t < model.textureViews.length; t++) {\n      bindables.push(model.textureViews[t]);\n      const samp = model.textureViews[t].getSampler();\n      if (samp) {\n        bindables.push(samp);\n      }\n    }\n    return bindables;\n  };\n  publicAPI.updatePipeline = () => {\n    publicAPI.computePipelineHash();\n    model.pipeline = model.device.getPipeline(model.pipelineHash);\n\n    // build the pipeline if needed\n    if (!model.pipeline) {\n      model.pipeline = vtkWebGPUPipeline.newInstance();\n      model.pipeline.setDevice(model.device);\n      if (model.WebGPURenderer) {\n        model.pipeline.addBindGroupLayout(model.WebGPURenderer.getBindGroup());\n      }\n      model.pipeline.addBindGroupLayout(model.bindGroup);\n      publicAPI.generateShaderDescriptions(model.pipelineHash, model.pipeline, model.vertexInput);\n      model.pipeline.setTopology(model.topology);\n      model.pipeline.setRenderEncoder(model.renderEncoder);\n      model.pipeline.setVertexState(model.vertexInput.getVertexInputInformation());\n      model.device.createPipeline(model.pipelineHash, model.pipeline);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  additionalBindables: undefined,\n  bindGroup: null,\n  device: null,\n  fragmentShaderTemplate: null,\n  numberOfInstances: 1,\n  numberOfVertices: 0,\n  pipelineHash: null,\n  shaderReplacements: null,\n  SSBO: null,\n  textureViews: null,\n  topology: 'triangle-list',\n  UBO: null,\n  vertexShaderTemplate: null,\n  WebGPURenderer: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.textureViews = [];\n  model.vertexInput = vtkWebGPUVertexInput.newInstance();\n  model.bindGroup = vtkWebGPUBindGroup.newInstance({\n    label: 'mapperBG'\n  });\n  model.additionalBindables = [];\n  model.fragmentShaderTemplate = model.fragmentShaderTemplate || vtkWebGPUSimpleMapperFS;\n  model.vertexShaderTemplate = model.vertexShaderTemplate || vtkWebGPUSimpleMapperVS;\n  model.shaderReplacements = new Map();\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['pipeline', 'vertexInput']);\n  macro.setGet(publicAPI, model, ['additionalBindables', 'device', 'fragmentShaderTemplate', 'interpolate', 'numberOfInstances', 'numberOfVertices', 'pipelineHash', 'shaderReplacements', 'SSBO', 'textureViews', 'topology', 'UBO', 'vertexShaderTemplate', 'WebGPURenderer']);\n\n  // Object methods\n  vtkWebGPUSimpleMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUSimpleMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUSimpleMapper$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUSimpleMapper$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUSimpleMapper from './SimpleMapper.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUFullScreenQuad methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUFullScreenQuad(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUFullScreenQuad');\n  publicAPI.replaceShaderPosition = (hash, pipeline, vertexInput) => {\n    const vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    vDesc.addOutput('vec4<f32>', 'vertexVC');\n    let code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['output.tcoordVS = vec2<f32>(vertexBC.x * 0.5 + 0.5, 1.0 - vertexBC.y * 0.5 - 0.5);', 'output.Position = vec4<f32>(vertexBC, 1.0);', 'output.vertexVC = vec4<f32>(vertexBC, 1);']).result;\n    vDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n  publicAPI.updateBuffers = () => {\n    const buff = model.device.getBufferManager().getFullScreenQuadBuffer();\n    model.vertexInput.addBuffer(buff, ['vertexBC']);\n    model.numberOfVertices = 6;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkWebGPUSimpleMapper.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkWebGPUFullScreenQuad(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUFullScreenQuad');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUFullScreenQuad$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUFullScreenQuad$1 as default, extend, newInstance };\n", "const BufferUsage = {\n  Verts: 0,\n  Lines: 1,\n  Triangles: 2,\n  Strips: 3,\n  LinesFromStrips: 4,\n  LinesFromTriangles: 5,\n  Points: 6,\n  UniformArray: 7,\n  PointArray: 8,\n  NormalsFromPoints: 9,\n  Texture: 10,\n  RawVertex: 11,\n  Storage: 12,\n  Index: 13\n};\nconst PrimitiveTypes = {\n  Start: 0,\n  Points: 0,\n  Lines: 1,\n  Triangles: 2,\n  TriangleStrips: 3,\n  TriangleEdges: 4,\n  TriangleStripEdges: 5,\n  End: 6\n};\nvar Constants = {\n  BufferUsage,\n  PrimitiveTypes\n};\n\nexport { BufferUsage, PrimitiveTypes, Constants as default };\n", "import { m as macro } from '../../macros2.js';\nimport Constants from './BufferManager/Constants.js';\n\n// methods we forward to the handle\nconst forwarded = ['getMappedRange', 'mapAsync', 'unmap'];\nfunction bufferSubData(device, destBuffer, destOffset, srcArrayBuffer) {\n  const byteCount = srcArrayBuffer.byteLength;\n  const srcBuffer = device.createBuffer({\n    size: byteCount,\n    /* eslint-disable no-undef */\n    usage: GPUBufferUsage.COPY_SRC,\n    /* eslint-enable no-undef */\n    mappedAtCreation: true\n  });\n  const arrayBuffer = srcBuffer.getMappedRange(0, byteCount);\n  new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer)); // memcpy\n  srcBuffer.unmap();\n  const encoder = device.createCommandEncoder();\n  encoder.copyBufferToBuffer(srcBuffer, 0, destBuffer, destOffset, byteCount);\n  const commandBuffer = encoder.finish();\n  const queue = device.queue;\n  queue.submit([commandBuffer]);\n  srcBuffer.destroy();\n}\n// ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBuffer');\n  publicAPI.create = (sizeInBytes, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: sizeInBytes,\n      usage,\n      label: model.label\n    });\n    model.sizeInBytes = sizeInBytes;\n    model.usage = usage;\n  };\n  publicAPI.write = data => {\n    bufferSubData(model.device.getHandle(), model.handle, 0, data.buffer);\n  };\n  publicAPI.createAndWrite = (data, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: data.byteLength,\n      usage,\n      mappedAtCreation: true,\n      label: model.label\n    });\n    model.sizeInBytes = data.byteLength;\n    model.usage = usage;\n    new Uint8Array(model.handle.getMappedRange()).set(new Uint8Array(data.buffer)); // memcpy\n    model.handle.unmap();\n  };\n\n  // simple forwarders\n  for (let i = 0; i < forwarded.length; i++) {\n    publicAPI[forwarded[i]] = function () {\n      return model.handle[forwarded[i]](...arguments);\n    };\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  sizeInBytes: 0,\n  strideInBytes: 0,\n  arrayInformation: null,\n  usage: null,\n  label: null,\n  sourceTime: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['strideInBytes', 'device', 'arrayInformation', 'label', 'sourceTime']);\n  vtkWebGPUBuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUBuffer$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkWebGPUBuffer$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport Constants from './BufferManager/Constants.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkWebGPUBuffer from './Buffer.js';\n\nconst {\n  Representation\n} = vtkProperty;\nconst {\n  PrimitiveTypes\n} = Constants;\n\n// Simulate a small map of pointId to flatId for a cell. The original code\n// used a map and was 2.6x slower (4.7 to 1.9 seconds). Using two fixed\n// length arrays with a count is so much faster even with the required for\n// loops and if statements. This only works as we know the usage is\n// restricted to clear(), set() get() and has() so the count is always\n// incrmenting except for clear where it goes back to 0. Performance\n// improvement is probably due to this appoach not hitting the heap but wow\n// it is so much faster. Code that adds to these vectors checks against 9 to\n// make sure there is room. Switching to test against vec.length -1 results\n// in a small performance hit, so if you change 10, search for 9 in this\n// small class and change those as well.\nclass _LimitedMap {\n  constructor() {\n    this.keys = new Uint32Array(10);\n    this.values = new Uint32Array(10);\n    this.count = 0;\n  }\n  clear() {\n    this.count = 0;\n  }\n  has(key) {\n    for (let i = 0; i < this.count; i++) {\n      if (this.keys[i] === key) {\n        return true;\n      }\n    }\n    return undefined;\n  }\n  get(key) {\n    for (let i = 0; i < this.count; i++) {\n      if (this.keys[i] === key) {\n        return this.values[i];\n      }\n    }\n    return undefined;\n  }\n  set(key, value) {\n    if (this.count < 9) {\n      this.keys[this.count] = key;\n      this.values[this.count++] = value;\n    }\n  }\n}\nfunction getPrimitiveName(primType) {\n  switch (primType) {\n    case PrimitiveTypes.Points:\n      return 'points';\n    case PrimitiveTypes.Lines:\n      return 'lines';\n    case PrimitiveTypes.Triangles:\n    case PrimitiveTypes.TriangleEdges:\n      return 'polys';\n    case PrimitiveTypes.TriangleStripEdges:\n    case PrimitiveTypes.TriangleStrips:\n      return 'strips';\n    default:\n      return '';\n  }\n}\nfunction _getOrAddFlatId(state, ptId, cellId) {\n  let flatId = state.pointIdToFlatId[ptId];\n  if (flatId < 0) {\n    flatId = state.flatId;\n    state.pointIdToFlatId[ptId] = flatId;\n    state.flatIdToPointId[state.flatId] = ptId;\n    state.flatIdToCellId[state.flatId] = cellId;\n    state.flatId++;\n  }\n  return flatId;\n}\nfunction fillCell(ptIds, cellId, state) {\n  const numPtIds = ptIds.length;\n  // are any points already marked for this cell? If so use that as the provoking point\n  for (let ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\n    let ptId = ptIds[ptIdx];\n    if (state.cellProvokedMap.has(ptId)) {\n      state.ibo[state.iboId++] = state.cellProvokedMap.get(ptId);\n\n      // insert remaining ptIds (they do not need to provoke)\n      for (let ptIdx2 = ptIdx + 1; ptIdx2 < ptIdx + numPtIds; ptIdx2++) {\n        ptId = ptIds[ptIdx2 % numPtIds];\n        const flatId = _getOrAddFlatId(state, ptId, cellId);\n        // add to ibo\n        state.ibo[state.iboId++] = flatId;\n      }\n      // all done now\n      return;\n    }\n  }\n\n  // else have any of the points not been used yet? (not in provokedPointIds)\n  for (let ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\n    let ptId = ptIds[ptIdx];\n    if (!state.provokedPointIds[ptId]) {\n      let flatId = _getOrAddFlatId(state, ptId, cellId);\n      // mark provoking and add to ibo\n      state.provokedPointIds[ptId] = 1;\n      state.cellProvokedMap.set(ptId, flatId);\n      // when provoking always set the cellId as an original non-provoking value\n      // will have been stored and we need to overwrite that\n      state.flatIdToCellId[flatId] = cellId;\n      state.ibo[state.iboId++] = flatId;\n\n      // insert remaining ptIds (they do not need to provoke)\n      for (let ptIdx2 = ptIdx + 1; ptIdx2 < ptIdx + numPtIds; ptIdx2++) {\n        ptId = ptIds[ptIdx2 % numPtIds];\n        flatId = _getOrAddFlatId(state, ptId, cellId);\n        // add to ibo\n        state.ibo[state.iboId++] = flatId;\n      }\n      // all done now\n      return;\n    }\n  }\n\n  // if we got here then none of the ptIds could be used to provoke\n  // so just duplicate the first one\n  let ptId = ptIds[0];\n  let flatId = state.flatId;\n  state.cellProvokedMap.set(ptId, flatId);\n  state.flatIdToPointId[state.flatId] = ptId;\n  state.flatIdToCellId[state.flatId] = cellId;\n  state.flatId++;\n\n  // add to ibo\n  state.ibo[state.iboId++] = flatId;\n\n  // insert remaining ptIds (they do not need to provoke)\n  for (let ptIdx2 = 1; ptIdx2 < numPtIds; ptIdx2++) {\n    ptId = ptIds[ptIdx2];\n    flatId = _getOrAddFlatId(state, ptId, cellId);\n    // add to ibo\n    state.ibo[state.iboId++] = flatId;\n  }\n}\nfunction countCell(ptIds, cellId, state) {\n  const numPtIds = ptIds.length;\n  state.iboSize += numPtIds;\n\n  // are any points already marked for this cell? If so use that as the provoking point\n  for (let ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\n    const ptId = ptIds[ptIdx];\n    if (state.cellProvokedMap.has(ptId)) {\n      return;\n    }\n  }\n\n  // else have any of the points not been used yet? (not in provokedPointIds)\n  for (let ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\n    const ptId = ptIds[ptIdx];\n    if (!state.provokedPointIds[ptId]) {\n      state.provokedPointIds[ptId] = 1;\n      state.cellProvokedMap.set(ptId, 1);\n      return;\n    }\n  }\n  // if we got here then none of the ptIds could be used to provoke\n  state.cellProvokedMap.set(ptIds[0], 1);\n  state.extraPoints++;\n}\nlet processCell;\nconst _single = new Uint32Array(1);\nconst _double = new Uint32Array(2);\nconst _triple = new Uint32Array(3);\nconst _indexCellBuilders = {\n  // easy, every input point becomes an output point\n  anythingToPoints(numPoints, cellPts, offset, cellId, state) {\n    for (let i = 0; i < numPoints; ++i) {\n      _single[0] = cellPts[offset + i];\n      processCell(_single, cellId, state);\n    }\n  },\n  linesToWireframe(numPoints, cellPts, offset, cellId, state) {\n    // for lines we add a bunch of segments\n    for (let i = 0; i < numPoints - 1; ++i) {\n      _double[0] = cellPts[offset + i];\n      _double[1] = cellPts[offset + i + 1];\n      processCell(_double, cellId, state);\n    }\n  },\n  polysToWireframe(numPoints, cellPts, offset, cellId, state) {\n    // for polys we add a bunch of segments and close it\n    if (numPoints > 2) {\n      for (let i = 0; i < numPoints; ++i) {\n        _double[0] = cellPts[offset + i];\n        _double[1] = cellPts[offset + (i + 1) % numPoints];\n        processCell(_double, cellId, state);\n      }\n    }\n  },\n  stripsToWireframe(numPoints, cellPts, offset, cellId, state) {\n    if (numPoints > 2) {\n      // for strips we add a bunch of segments and close it\n      for (let i = 0; i < numPoints - 1; ++i) {\n        _double[0] = cellPts[offset + i];\n        _double[1] = cellPts[offset + i + 1];\n        processCell(_double, cellId, state);\n      }\n      for (let i = 0; i < numPoints - 2; i++) {\n        _double[0] = cellPts[offset + i];\n        _double[1] = cellPts[offset + i + 2];\n        processCell(_double, cellId, state);\n      }\n    }\n  },\n  polysToSurface(npts, cellPts, offset, cellId, state) {\n    for (let i = 0; i < npts - 2; i++) {\n      _triple[0] = cellPts[offset];\n      _triple[1] = cellPts[offset + i + 1];\n      _triple[2] = cellPts[offset + i + 2];\n      processCell(_triple, cellId, state);\n    }\n  },\n  stripsToSurface(npts, cellPts, offset, cellId, state) {\n    for (let i = 0; i < npts - 2; i++) {\n      _triple[0] = cellPts[offset + i];\n      _triple[1] = cellPts[offset + i + 1 + i % 2];\n      _triple[2] = cellPts[offset + i + 1 + (i + 1) % 2];\n      processCell(_triple, cellId, state);\n    }\n  }\n};\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUIndexBufferManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUIndexBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUIndexBuffer');\n  publicAPI.buildIndexBuffer = req => {\n    const cellArray = req.cells;\n    const primitiveType = req.primitiveType;\n    const representation = req.representation;\n    const cellOffset = req.cellOffset;\n    const array = cellArray.getData();\n    const cellArraySize = array.length;\n    const inRepName = getPrimitiveName(primitiveType);\n    const numPts = req.numberOfPoints;\n    const state = {\n      provokedPointIds: new Uint8Array(numPts),\n      // size is good\n      extraPoints: 0,\n      iboSize: 0,\n      flatId: 0,\n      iboId: 0,\n      cellProvokedMap: new _LimitedMap()\n    };\n    let func = null;\n    if (representation === Representation.POINTS || primitiveType === PrimitiveTypes.Points) {\n      func = _indexCellBuilders.anythingToPoints;\n    } else if (representation === Representation.WIREFRAME || primitiveType === PrimitiveTypes.Lines) {\n      func = _indexCellBuilders[`${inRepName}ToWireframe`];\n    } else {\n      func = _indexCellBuilders[`${inRepName}ToSurface`];\n    }\n\n    // first we count how many extra provoking points we need\n    processCell = countCell;\n    let cellId = cellOffset || 0;\n    for (let cellArrayIndex = 0; cellArrayIndex < cellArraySize;) {\n      state.cellProvokedMap.clear();\n      func(array[cellArrayIndex], array, cellArrayIndex + 1, cellId, state);\n      cellArrayIndex += array[cellArrayIndex] + 1;\n      cellId++;\n    }\n\n    // then we allocate the remaining structures\n    // (we pick the best size to save space and transfer costs)\n    if (numPts <= 0xffff) {\n      state.flatIdToPointId = new Uint16Array(numPts + state.extraPoints);\n    } else {\n      state.flatIdToPointId = new Uint32Array(numPts + state.extraPoints);\n    }\n    if (numPts + state.extraPoints < 0x8fff) {\n      state.pointIdToFlatId = new Int16Array(numPts);\n    } else {\n      state.pointIdToFlatId = new Int32Array(numPts);\n    }\n    if (numPts + state.extraPoints <= 0xffff) {\n      state.ibo = new Uint16Array(state.iboSize);\n      req.format = 'uint16';\n    } else {\n      state.ibo = new Uint32Array(state.iboSize);\n      req.format = 'uint32';\n    }\n    if (cellId <= 0xffff) {\n      state.flatIdToCellId = new Uint16Array(numPts + state.extraPoints);\n    } else {\n      state.flatIdToCellId = new Uint32Array(numPts + state.extraPoints);\n    }\n    state.pointIdToFlatId.fill(-1);\n    state.provokedPointIds.fill(0);\n\n    // and fill them in\n    processCell = fillCell;\n    cellId = cellOffset || 0;\n    for (let cellArrayIndex = 0; cellArrayIndex < cellArraySize;) {\n      state.cellProvokedMap.clear();\n      func(array[cellArrayIndex], array, cellArrayIndex + 1, cellId, state);\n      cellArrayIndex += array[cellArrayIndex] + 1;\n      cellId++;\n    }\n    delete state.provokedPointIds;\n    delete state.pointIdToFlatId;\n\n    // store the results we need\n    req.nativeArray = state.ibo;\n    model.flatIdToPointId = state.flatIdToPointId;\n    model.flatIdToCellId = state.flatIdToCellId;\n    model.flatSize = state.flatId;\n    model.indexCount = state.iboId;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  flatIdToPointId: null,\n  flatIdToCellId: null,\n  flatSize: 0,\n  indexCount: 0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkWebGPUBuffer.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['flatIdToPointId', 'flatIdToCellId', 'flatSize', 'indexCount']);\n  vtkWebGPUIndexBuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUIndexBuffer$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkWebGPUIndexBuffer$1 as default, extend, newInstance };\n", "import { n as newInstance$1, o as obj, e as setGet, c as macro, a as newTypedArray } from '../../macros2.js';\nimport { j as cross, l as normalize } from '../../Common/Core/Math/index.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUIndexBuffer from './IndexBuffer.js';\nimport vtkWebGPUTypes from './Types.js';\nimport Constants from './BufferManager/Constants.js';\n\nconst {\n  BufferUsage\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  VtkDataTypes\n} = vtkDataArray;\n\n// the webgpu constants all show up as undefined\n/* eslint-disable no-undef */\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {};\nfunction _getFormatForDataArray(dataArray) {\n  let format;\n  switch (dataArray.getDataType()) {\n    case VtkDataTypes.UNSIGNED_CHAR:\n      format = 'uint8';\n      break;\n    case VtkDataTypes.FLOAT:\n      format = 'float32';\n      break;\n    case VtkDataTypes.UNSIGNED_INT:\n      format = 'uint32';\n      break;\n    case VtkDataTypes.INT:\n      format = 'sint32';\n      break;\n    case VtkDataTypes.DOUBLE:\n      format = 'float32';\n      break;\n    case VtkDataTypes.UNSIGNED_SHORT:\n      format = 'uint16';\n      break;\n    case VtkDataTypes.SHORT:\n      format = 'sin16';\n      break;\n    default:\n      format = 'float32';\n      break;\n  }\n  switch (dataArray.getNumberOfComponents()) {\n    case 2:\n      format += 'x2';\n      break;\n    case 3:\n      // only 32bit types support x3\n      if (!format.includes('32')) {\n        vtkErrorMacro(`unsupported x3 type for ${format}`);\n      }\n      format += 'x3';\n      break;\n    case 4:\n      format += 'x4';\n      break;\n  }\n  return format;\n}\nfunction packArray(indexBuffer, inArrayData, numComp, outputType, options) {\n  const result = {};\n  const flatSize = indexBuffer.getFlatSize();\n  if (!flatSize) {\n    return result;\n  }\n\n  // setup shift and scale\n  let shift = [0.0, 0.0, 0.0, 0.0];\n  if (options.shift) {\n    if (options.shift.length) {\n      shift = options.shift;\n    } else {\n      shift.fill(options.shift);\n    }\n  }\n  let scale = [1.0, 1.0, 1.0, 1.0];\n  if (options.scale) {\n    if (options.scale.length) {\n      scale = options.scale;\n    } else {\n      scale.fill(options.scale);\n    }\n  }\n  const packExtra = Object.prototype.hasOwnProperty.call(options, 'packExtra') ? options.packExtra : false;\n  let addAPoint;\n  let vboidx = 0;\n  const stride = numComp + (packExtra ? 1 : 0);\n  const packedVBO = newTypedArray(outputType, flatSize * stride);\n\n  // pick the right function based on point versus cell data\n  let flatIdMap = indexBuffer.getFlatIdToPointId();\n  if (options.cellData) {\n    flatIdMap = indexBuffer.getFlatIdToCellId();\n  }\n\n  // add data based on number of components\n  if (numComp === 1) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n    };\n  } else if (numComp === 2) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n    };\n  } else if (numComp === 3 && !packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n    };\n  } else if (numComp === 3 && packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * 1.0 + shift[3];\n    };\n  } else if (numComp === 4) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * inArrayData[i + 3] + shift[3];\n    };\n  }\n\n  // for each entry in the flat array process it\n  for (let index = 0; index < flatSize; index++) {\n    const inArrayId = numComp * flatIdMap[index];\n    addAPoint(inArrayId);\n  }\n  result.nativeArray = packedVBO;\n  return result;\n}\nfunction getNormal(pointData, i0, i1, i2) {\n  const v1 = [pointData[i2 * 3] - pointData[i1 * 3], pointData[i2 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i2 * 3 + 2] - pointData[i1 * 3 + 2]];\n  const v2 = [pointData[i0 * 3] - pointData[i1 * 3], pointData[i0 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i0 * 3 + 2] - pointData[i1 * 3 + 2]];\n  const result = [];\n  cross(v1, v2, result);\n  normalize(result);\n  return result;\n}\nfunction generateNormals(cellArray, pointArray) {\n  const pointData = pointArray.getData();\n  const cellArrayData = cellArray.getData();\n  if (!cellArrayData || !pointData) {\n    return null;\n  }\n\n  // return a cellArray of normals\n  const packedVBO = new Int8Array(cellArray.getNumberOfCells() * 4);\n  const size = cellArrayData.length;\n  let vboidx = 0;\n  for (let index = 0; index < size;) {\n    const normal = getNormal(pointData, cellArrayData[index + 1], cellArrayData[index + 2], cellArrayData[index + 3]);\n    packedVBO[vboidx++] = 127 * normal[0];\n    packedVBO[vboidx++] = 127 * normal[1];\n    packedVBO[vboidx++] = 127 * normal[2];\n    packedVBO[vboidx++] = 127;\n    index += cellArrayData[index] + 1;\n  }\n  return packedVBO;\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\nfunction vtkWebGPUBufferManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBufferManager');\n  function _createBuffer(req) {\n    // if a dataArray is provided set the nativeArray\n    if (req.dataArray && !req.nativeArray) {\n      req.nativeArray = req.dataArray.getData();\n    }\n    let buffer;\n    let gpuUsage;\n\n    // handle index buffers\n    if (req.usage === BufferUsage.Index) {\n      // todo change to FlattenedIndex to be more clear\n      buffer = vtkWebGPUIndexBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n      buffer.buildIndexBuffer(req);\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setArrayInformation([{\n        format: req.format\n      }]);\n    }\n\n    // create one if not done already\n    if (!buffer) {\n      buffer = vtkWebGPUBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n    }\n\n    // handle uniform buffers\n    if (req.usage === BufferUsage.UniformArray) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    }\n\n    // handle storage buffers\n    if (req.usage === BufferUsage.Storage) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    }\n\n    // handle textures\n    if (req.usage === BufferUsage.Texture) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.COPY_SRC;\n      /* eslint-enable no-bitwise */\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    }\n\n    // all of the below types that have gpuUsage = VERTEX require format\n    // to be provided.\n\n    // handle point data\n    if (req.usage === BufferUsage.PointArray) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      const arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      const result = packArray(req.indexBuffer, req.dataArray.getData(), req.dataArray.getNumberOfComponents(), arrayType, {\n        packExtra: req.packExtra,\n        shift: req.shift,\n        scale: req.scale,\n        cellData: req.cellData,\n        cellOffset: req.cellOffset\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: req.cellData ? 'flat' : 'perspective'\n      }]);\n    }\n\n    // handle normals from points, snorm8x4\n    if (req.usage === BufferUsage.NormalsFromPoints) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      const arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      const normals = generateNormals(req.cells, req.dataArray);\n      const result = packArray(req.indexBuffer, normals, 4, arrayType, {\n        cellData: true\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: 'flat'\n      }]);\n    }\n    if (req.usage === BufferUsage.RawVertex) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format\n      }]);\n    }\n    buffer.setSourceTime(req.time);\n    return buffer;\n  }\n\n  // is the buffer already present?\n  publicAPI.hasBuffer = hash => model.device.hasCachedObject(hash);\n  publicAPI.getBuffer = req => {\n    // if we have a source the get/create/cache the buffer\n    if (req.hash) {\n      return model.device.getCachedObject(req.hash, _createBuffer, req);\n    }\n    return _createBuffer(req);\n  };\n  publicAPI.getBufferForPointArray = (dataArray, indexBuffer) => {\n    const format = _getFormatForDataArray(dataArray);\n    const buffRequest = {\n      hash: `${dataArray.getMTime()}I${indexBuffer.getMTime()}${format}`,\n      usage: BufferUsage.PointArray,\n      format,\n      dataArray,\n      indexBuffer\n    };\n    return publicAPI.getBuffer(buffRequest);\n  };\n  publicAPI.getFullScreenQuadBuffer = () => {\n    if (model.fullScreenQuadBuffer) {\n      return model.fullScreenQuadBuffer;\n    }\n    model.fullScreenQuadBuffer = vtkWebGPUBuffer.newInstance();\n    model.fullScreenQuadBuffer.setDevice(model.device);\n\n    // prettier-ignore\n    const array = new Float32Array([-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0]);\n    model.fullScreenQuadBuffer.createAndWrite(array, GPUBufferUsage.VERTEX);\n    model.fullScreenQuadBuffer.setStrideInBytes(12);\n    model.fullScreenQuadBuffer.setArrayInformation([{\n      offset: 0,\n      format: 'float32x3'\n    }]);\n    return model.fullScreenQuadBuffer;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  fullScreenQuadBuffer: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  obj(publicAPI, model);\n  setGet(publicAPI, model, ['device']);\n  vtkWebGPUBufferManager(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUBufferManager$1 = {\n  newInstance,\n  extend,\n  ...STATIC,\n  ...Constants\n};\n\nexport { STATIC, vtkWebGPUBufferManager$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUTypes from './Types.js';\n\nconst {\n  BufferUsage\n} = vtkWebGPUBufferManager;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUStorageBuffer - similar to the UniformBuffer class\n// but YOU are responsible for layout issues and alignment.\n// The order you add entries is the order they will be layed out\n// in memory. But you must follow layout rules.\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUStorageBuffer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUStorageBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUStorageBuffer');\n  publicAPI.addEntry = (name, type) => {\n    if (model._bufferEntryNames.has(name)) {\n      vtkErrorMacro(`entry named ${name} already exists`);\n      return;\n    }\n    model._bufferEntryNames.set(name, model.bufferEntries.length);\n    const sizeInBytes = vtkWebGPUTypes.getByteStrideFromShaderFormat(type);\n    model.bufferEntries.push({\n      name,\n      type,\n      sizeInBytes,\n      offset: model.sizeInBytes,\n      nativeType: vtkWebGPUTypes.getNativeTypeFromShaderFormat(type)\n    });\n    model.sizeInBytes += sizeInBytes;\n  };\n  publicAPI.send = device => {\n    if (!model._buffer) {\n      const req = {\n        nativeArray: model.Float32Array,\n        usage: BufferUsage.Storage,\n        label: model.label\n      };\n      model._buffer = device.getBufferManager().getBuffer(req);\n      model.bindGroupTime.modified();\n      model._sendTime.modified();\n      return;\n    }\n    device.getHandle().queue.writeBuffer(model._buffer.getHandle(), 0, model.arrayBuffer, 0, model.sizeInBytes * model.numberOfInstances);\n    model._sendTime.modified();\n  };\n  publicAPI.createView = type => {\n    if (type in model === false) {\n      if (!model.arrayBuffer) {\n        model.arrayBuffer = new ArrayBuffer(model.sizeInBytes * model.numberOfInstances);\n      }\n      model[type] = macro.newTypedArray(type, model.arrayBuffer);\n    }\n  };\n  publicAPI.setValue = (name, instance, val) => {\n    const idx = model._bufferEntryNames.get(name);\n    if (idx === undefined) {\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\n      return;\n    }\n    const entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    const view = model[entry.nativeType];\n    view[(entry.offset + instance * model.sizeInBytes) / view.BYTES_PER_ELEMENT] = val;\n  };\n  publicAPI.setArray = (name, instance, arr) => {\n    const idx = model._bufferEntryNames.get(name);\n    if (idx === undefined) {\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\n      return;\n    }\n    const entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    const view = model[entry.nativeType];\n    const ioffset = (entry.offset + instance * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n    for (let i = 0; i < arr.length; i++) {\n      view[ioffset + i] = arr[i];\n    }\n  };\n  publicAPI.setAllInstancesFromArray = (name, arr) => {\n    const idx = model._bufferEntryNames.get(name);\n    if (idx === undefined) {\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\n      return;\n    }\n    const entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    const view = model[entry.nativeType];\n    const numComponents = arr.length / model.numberOfInstances;\n    for (let inst = 0; inst < model.numberOfInstances; inst++) {\n      const ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n      for (let i = 0; i < numComponents; i++) {\n        view[ioffset + i] = arr[inst * numComponents + i];\n      }\n    }\n  };\n  publicAPI.setAllInstancesFromArrayColorToFloat = (name, arr) => {\n    const idx = model._bufferEntryNames.get(name);\n    if (idx === undefined) {\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\n      return;\n    }\n    const entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    const view = model[entry.nativeType];\n    const numComponents = arr.length / model.numberOfInstances;\n    for (let inst = 0; inst < model.numberOfInstances; inst++) {\n      const ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n      for (let i = 0; i < numComponents; i++) {\n        view[ioffset + i] = arr[inst * numComponents + i] / 255.0;\n      }\n    }\n  };\n  publicAPI.setAllInstancesFromArray3x3To4x4 = (name, arr) => {\n    const idx = model._bufferEntryNames.get(name);\n    if (idx === undefined) {\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\n      return;\n    }\n    const entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    const view = model[entry.nativeType];\n    const numComponents = 9;\n    for (let inst = 0; inst < model.numberOfInstances; inst++) {\n      const ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n      for (let j = 0; j < 3; j++) {\n        for (let i = 0; i < 3; i++) {\n          view[ioffset + j * 4 + i] = arr[inst * numComponents + j * 3 + i];\n        }\n      }\n    }\n  };\n  publicAPI.getSendTime = () => model._sendTime.getMTime();\n  publicAPI.getShaderCode = (binding, group) => {\n    const lines = [`struct ${model.label}StructEntry\\n{`];\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      lines.push(`  ${entry.name}: ${entry.type},`);\n    }\n    lines.push(`\n};\nstruct ${model.label}Struct\n{\n  values: array<${model.label}StructEntry>,\n};\n@binding(${binding}) @group(${group}) var<storage, read> ${model.label}: ${model.label}Struct;\n`);\n    return lines.join('\\n');\n  };\n  publicAPI.getBindGroupEntry = () => {\n    const foo = {\n      resource: {\n        buffer: model._buffer.getHandle()\n      }\n    };\n    return foo;\n  };\n  publicAPI.clearData = () => {\n    model.numberOfInstances = 0;\n    model.sizeInBytes = 0;\n    model.bufferEntries = [];\n    model._bufferEntryNames = new Map();\n    model._buffer = null;\n    delete model.arrayBuffer;\n    delete model.Float32Array;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bufferEntries: null,\n  bufferEntryNames: null,\n  sizeInBytes: 0,\n  label: null,\n  numberOfInstances: 1\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  // Internal objects\n  model._bufferEntryNames = new Map();\n  model.bufferEntries = [];\n  model._sendTime = {};\n  macro.obj(model._sendTime, {\n    mtime: 0\n  });\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n\n  // default SSBO desc\n  model.bindGroupLayoutEntry = model.bindGroupLayoutEntry || {\n    buffer: {\n      type: 'read-only-storage'\n    }\n  };\n  macro.get(publicAPI, model, ['bindGroupTime']);\n  macro.setGet(publicAPI, model, ['device', 'bindGroupLayoutEntry', 'label', 'numberOfInstances', 'sizeInBytes']);\n\n  // Object methods\n  vtkWebGPUStorageBuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUStorageBuffer');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUStorageBuffer$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUStorageBuffer$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUTypes from './Types.js';\n\nconst {\n  BufferUsage\n} = vtkWebGPUBufferManager;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUUniformBuffer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUUniformBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUUniformBuffer');\n  publicAPI.addEntry = (name, type) => {\n    if (model._bufferEntryNames.has(name)) {\n      vtkErrorMacro(`entry named ${name} already exists`);\n      return;\n    }\n    model.sortDirty = true;\n    model._bufferEntryNames.set(name, model.bufferEntries.length);\n    model.bufferEntries.push({\n      name,\n      type,\n      sizeInBytes: vtkWebGPUTypes.getByteStrideFromShaderFormat(type),\n      offset: -1,\n      nativeType: vtkWebGPUTypes.getNativeTypeFromShaderFormat(type),\n      packed: false\n    });\n  };\n\n  // UBOs have layout rules in terms of how memory is aligned so we\n  // have to be careful how we order the entries. For example a vec4<f32>\n  // must be aligned on a 16 byte offset, etc. See\n  // https://gpuweb.github.io/gpuweb/wgsl/#memory-layouts\n  // for more details. Right now you can create a situation that would fail\n  // in the future we could add dummy spacer entries where needed to\n  // handle alignment issues\n  publicAPI.sortBufferEntries = () => {\n    if (!model.sortDirty) {\n      return;\n    }\n    let currOffset = 0;\n    const newEntries = [];\n\n    // compute the max alignment, this is required as WebGPU defines a UBO to have\n    // a size that is a multiple of the maxAlignment\n    let maxAlignment = 4;\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      if (entry.sizeInBytes % 16 === 0) {\n        maxAlignment = Math.max(16, maxAlignment);\n      }\n      if (entry.sizeInBytes % 8 === 0) {\n        maxAlignment = Math.max(8, maxAlignment);\n      }\n    }\n\n    // pack anything whose size is a multiple of 16 bytes first\n    // this includes a couple types that don't require 16 byte alignment\n    // such as mat2x2<f32> but that is OK\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      if (entry.packed === false && entry.sizeInBytes % 16 === 0) {\n        entry.packed = true;\n        entry.offset = currOffset;\n        newEntries.push(entry);\n        currOffset += entry.sizeInBytes;\n      }\n    }\n\n    // now it gets tough, we have the following common types (f32, i32, u32)\n    // - vec2<f32> 8 byte size, 8 byte alignment\n    // - vec3<f32> 12 byte size, 16 byte alignment\n    // - f32 4 byte size, 4 byte alignment\n\n    // try adding 12 byte, 4 byte pairs\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      if (entry.packed === false && entry.sizeInBytes === 12) {\n        for (let i2 = 0; i2 < model.bufferEntries.length; i2++) {\n          const entry2 = model.bufferEntries[i2];\n          if (entry2.packed === false && entry2.sizeInBytes === 4) {\n            entry.packed = true;\n            entry.offset = currOffset;\n            newEntries.push(entry);\n            currOffset += entry.sizeInBytes;\n            entry2.packed = true;\n            entry2.offset = currOffset;\n            newEntries.push(entry2);\n            currOffset += entry2.sizeInBytes;\n            break;\n          }\n        }\n      }\n    }\n\n    // try adding 8 byte, 8 byte pairs\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      if (!entry.packed && entry.sizeInBytes % 8 === 0) {\n        for (let i2 = i + 1; i2 < model.bufferEntries.length; i2++) {\n          const entry2 = model.bufferEntries[i2];\n          if (!entry2.packed && entry2.sizeInBytes % 8 === 0) {\n            entry.packed = true;\n            entry.offset = currOffset;\n            newEntries.push(entry);\n            currOffset += entry.sizeInBytes;\n            entry2.packed = true;\n            entry2.offset = currOffset;\n            newEntries.push(entry2);\n            currOffset += entry2.sizeInBytes;\n            break;\n          }\n        }\n      }\n    }\n\n    // try adding 8 byte, 4 byte 4 byte triplets\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      if (!entry.packed && entry.sizeInBytes % 8 === 0) {\n        let found = false;\n        for (let i2 = 0; !found && i2 < model.bufferEntries.length; i2++) {\n          const entry2 = model.bufferEntries[i2];\n          if (!entry2.packed && entry2.sizeInBytes === 4) {\n            for (let i3 = i2 + 1; i3 < model.bufferEntries.length; i3++) {\n              const entry3 = model.bufferEntries[i3];\n              if (!entry3.packed && entry3.sizeInBytes === 4) {\n                entry.packed = true;\n                entry.offset = currOffset;\n                newEntries.push(entry);\n                currOffset += entry.sizeInBytes;\n                entry2.packed = true;\n                entry2.offset = currOffset;\n                newEntries.push(entry2);\n                currOffset += entry2.sizeInBytes;\n                entry3.packed = true;\n                entry3.offset = currOffset;\n                newEntries.push(entry3);\n                currOffset += entry3.sizeInBytes;\n                found = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Add anything remaining that is larger than 4 bytes and hope we get lucky.\n    // Likely if there is more than one item added here it will result\n    // in a failed UBO\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      if (!entry.packed && entry.sizeInBytes > 4) {\n        entry.packed = true;\n        entry.offset = currOffset;\n        newEntries.push(entry);\n        currOffset += entry.sizeInBytes;\n      }\n    }\n\n    // finally add remaining 4 byte items\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      if (!entry.packed) {\n        entry.packed = true;\n        entry.offset = currOffset;\n        newEntries.push(entry);\n        currOffset += entry.sizeInBytes;\n      }\n    }\n\n    // update entries and entryNames\n    model.bufferEntries = newEntries;\n    model._bufferEntryNames.clear();\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      model._bufferEntryNames.set(model.bufferEntries[i].name, i);\n    }\n    model.sizeInBytes = currOffset;\n    model.sizeInBytes = maxAlignment * Math.ceil(model.sizeInBytes / maxAlignment);\n    model.sortDirty = false;\n  };\n  publicAPI.sendIfNeeded = device => {\n    if (!model.UBO) {\n      const req = {\n        nativeArray: model.Float32Array,\n        usage: BufferUsage.UniformArray,\n        label: model.label\n      };\n      model.UBO = device.getBufferManager().getBuffer(req);\n      model.bindGroupTime.modified();\n      model.sendDirty = false;\n    }\n\n    // send data down if needed\n    if (model.sendDirty) {\n      device.getHandle().queue.writeBuffer(model.UBO.getHandle(), 0, model.arrayBuffer, 0, model.sizeInBytes);\n      model.sendDirty = false;\n    }\n\n    // always updated as mappers depend on this time\n    // it is more of a sentIfNeededTime\n    model.sendTime.modified();\n  };\n  publicAPI.createView = type => {\n    if (type in model === false) {\n      if (!model.arrayBuffer) {\n        model.arrayBuffer = new ArrayBuffer(model.sizeInBytes);\n      }\n      model[type] = macro.newTypedArray(type, model.arrayBuffer);\n    }\n  };\n  publicAPI.setValue = (name, val) => {\n    publicAPI.sortBufferEntries();\n    const idx = model._bufferEntryNames.get(name);\n    if (idx === undefined) {\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\n      return;\n    }\n    const entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    const view = model[entry.nativeType];\n    if (entry.lastValue !== val) {\n      view[entry.offset / view.BYTES_PER_ELEMENT] = val;\n      model.sendDirty = true;\n    }\n    entry.lastValue = val;\n  };\n  publicAPI.setArray = (name, arr) => {\n    publicAPI.sortBufferEntries();\n    const idx = model._bufferEntryNames.get(name);\n    if (idx === undefined) {\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\n      return;\n    }\n    const entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    const view = model[entry.nativeType];\n    let changed = false;\n    for (let i = 0; i < arr.length; i++) {\n      if (!entry.lastValue || entry.lastValue[i] !== arr[i]) {\n        view[entry.offset / view.BYTES_PER_ELEMENT + i] = arr[i];\n        changed = true;\n      }\n    }\n    if (changed) {\n      model.sendDirty = true;\n      entry.lastValue = [...arr];\n    }\n  };\n  publicAPI.getBindGroupEntry = () => {\n    const foo = {\n      resource: {\n        buffer: model.UBO.getHandle()\n      }\n    };\n    return foo;\n  };\n  publicAPI.getSendTime = () => model.sendTime.getMTime();\n  publicAPI.getShaderCode = (binding, group) => {\n    // sort the entries\n    publicAPI.sortBufferEntries();\n    const lines = [`struct ${model.label}Struct\\n{`];\n    for (let i = 0; i < model.bufferEntries.length; i++) {\n      const entry = model.bufferEntries[i];\n      lines.push(`  ${entry.name}: ${entry.type},`);\n    }\n    lines.push(`};\\n@binding(${binding}) @group(${group}) var<uniform> ${model.label}: ${model.label}Struct;`);\n    return lines.join('\\n');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bufferEntries: null,\n  bufferEntryNames: null,\n  sizeInBytes: 0,\n  label: null,\n  bindGroupLayoutEntry: null,\n  bindGroupEntry: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n\n  // Internal objects\n  model._bufferEntryNames = new Map();\n  model.bufferEntries = [];\n\n  // default UBO desc\n  model.bindGroupLayoutEntry = model.bindGroupLayoutEntry || {\n    buffer: {\n      type: 'uniform'\n    }\n  };\n  model.sendTime = {};\n  macro.obj(model.sendTime, {\n    mtime: 0\n  });\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  model.sendDirty = true;\n  model.sortDirty = true;\n  macro.get(publicAPI, model, ['binding', 'bindGroupTime']);\n  macro.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'device', 'label', 'sizeInBytes']);\n\n  // Object methods\n  vtkWebGPUUniformBuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUUniformBuffer');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUUniformBuffer$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUUniformBuffer$1 as default, extend, newInstance };\n", "import { mat4, vec3 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, g as get, k as getArray, e as setGet, c as macro } from '../../macros2.js';\nimport { r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport vtkWebGPUBindGroup from './BindGroup.js';\nimport vtkWebGPUFullScreenQuad from './FullScreenQuad.js';\nimport vtkWebGPUStorageBuffer from './StorageBuffer.js';\nimport vtkWebGPUUniformBuffer from './UniformBuffer.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\nconst clearFragColorTemplate = `\n//VTK::Renderer::Dec\n\n//VTK::Mapper::Dec\n\n//VTK::TCoord::Dec\n\n//VTK::RenderEncoder::Dec\n\n//VTK::IOStructs::Dec\n\n@fragment\nfn main(\n//VTK::IOStructs::Input\n)\n//VTK::IOStructs::Output\n{\n  var output: fragmentOutput;\n\n  var computedColor: vec4<f32> = mapperUBO.BackgroundColor;\n\n  //VTK::RenderEncoder::Impl\n  return output;\n}\n`;\nconst clearFragTextureTemplate = `\nfn vecToRectCoord(dir: vec3<f32>) -> vec2<f32> {\n  var tau: f32 = 6.28318530718;\n  var pi: f32 = 3.14159265359;\n  var out: vec2<f32> = vec2<f32>(0.0);\n\n  out.x = atan2(dir.z, dir.x) / tau;\n  out.x += 0.5;\n\n  var phix: f32 = length(vec2(dir.x, dir.z));\n  out.y = atan2(dir.y, phix) / pi + 0.5;\n\n  return out;\n}\n\n//VTK::Renderer::Dec\n\n//VTK::Mapper::Dec\n\n//VTK::TCoord::Dec\n\n//VTK::RenderEncoder::Dec\n\n//VTK::IOStructs::Dec\n\n@fragment\nfn main(\n//VTK::IOStructs::Input\n)\n//VTK::IOStructs::Output\n{\n  var output: fragmentOutput;\n\n  var tcoord: vec4<f32> = vec4<f32>(input.vertexVC.xy, -1, 1);\n  var V: vec4<f32> = normalize(mapperUBO.FSQMatrix * tcoord); // vec2<f32>((input.tcoordVS.x - 0.5) * 2, -(input.tcoordVS.y - 0.5) * 2);\n  // textureSampleLevel gets rid of some ugly artifacts\n  var background = textureSampleLevel(EnvironmentTexture, EnvironmentTextureSampler, vecToRectCoord(V.xyz), 0.0);\n  var computedColor: vec4<f32> = vec4<f32>(background.rgb, 1);\n\n  //VTK::RenderEncoder::Impl\n  return output;\n}\n`;\nconst _fsqClearMat4 = new Float64Array(16);\nconst _tNormalMat4 = new Float64Array(16);\n\n// Light type index gives either 0, 1, or 2 which indicates what type of light there is.\n// While technically, there are only spot and directional lights, within the CellArrayMapper\n// there is a third, positional light. It is technically just a variant of a spot light with\n// a cone angle of 90 or above, however certain calculations can be skipped if it is treated\n// separately.\n// The mappings are shown below:\n// 0 -> positional light\n// 1 -> directional light\n// 2 -> spot light\nfunction getLightTypeIndex(light) {\n  if (light.getPositional()) {\n    if (light.getConeAngle() >= 90) {\n      return 0;\n    }\n    return 2;\n  }\n  return 1;\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPURenderer methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-bitwise */\n\nfunction vtkWebGPURenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPURenderer');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n      model.camera = model.renderable.getActiveCamera();\n      publicAPI.updateLights();\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.camera);\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\n      publicAPI.removeUnusedNodes();\n      model.webgpuCamera = publicAPI.getViewNodeFor(model.camera);\n      publicAPI.updateStabilizedMatrix();\n    }\n  };\n  publicAPI.updateStabilizedMatrix = () => {\n    // This method is designed to help with floating point\n    // issues when rendering datasets that push the limits of\n    // resolutions on float.\n    //\n    // One of the most common cases is when the dataset is located far\n    // away from the origin relative to the clipping range we are looking\n    // at. For that case we want to perform the floating point sensitive\n    // multiplications on the CPU in double. To this end we want the\n    // vertex rendering ops to look something like\n    //\n    // Compute shifted points and load those into the VBO\n    // pointCoordsSC = WorldToStabilizedMatrix * pointCoords;\n    //\n    // In the vertex shader do the following\n    // positionVC = StabilizedToDeviceMatrix * ModelToStabilizedMatrix*vertexIn;\n    //\n    // We use two matrices because it is expensive to change the\n    // WorldToStabilized matrix as we have to reupload all pointCoords\n    // So that matrix (MCSCMatrix) is fairly static, the Stabilized to\n    // Device matrix is the one that gets updated every time the camera\n    // changes.\n    //\n    // The basic idea is that we should translate the data so that\n    // when the center of the view frustum moves a lot\n    // we recenter it. The center of the view frustum is roughly\n    // camPos + dirOfProj*(far + near)*0.5\n    const clipRange = model.camera.getClippingRange();\n    const pos = model.camera.getPositionByReference();\n    const dop = model.camera.getDirectionOfProjectionByReference();\n    const center = [];\n    const offset = [];\n    vec3.scale(offset, dop, 0.5 * (clipRange[0] + clipRange[1]));\n    vec3.add(center, pos, offset);\n    vec3.sub(offset, center, model.stabilizedCenter);\n    const length = vec3.len(offset);\n    if (length / (clipRange[1] - clipRange[0]) > model.recenterThreshold) {\n      model.stabilizedCenter = center;\n      model.stabilizedTime.modified();\n    }\n  };\n  publicAPI.updateLights = () => {\n    let count = 0;\n    const lights = model.renderable.getLightsByReference();\n    for (let index = 0; index < lights.length; ++index) {\n      if (lights[index].getSwitch() > 0.0) {\n        count++;\n      }\n    }\n    if (!count) {\n      vtkDebugMacro('No lights are on, creating one.');\n      model.renderable.createLight();\n    }\n    return count;\n  };\n  publicAPI.updateUBO = () => {\n    // make sure the data is up to date\n    // has the camera changed?\n    const utime = model.UBO.getSendTime();\n    if (model._parent.getMTime() > utime || publicAPI.getMTime() > utime || model.camera.getMTime() > utime || model.renderable.getMTime() > utime) {\n      const keyMats = model.webgpuCamera.getKeyMatrices(publicAPI);\n      model.UBO.setArray('WCVCMatrix', keyMats.wcvc);\n      model.UBO.setArray('SCPCMatrix', keyMats.scpc);\n      model.UBO.setArray('PCSCMatrix', keyMats.pcsc);\n      model.UBO.setArray('SCVCMatrix', keyMats.scvc);\n      model.UBO.setArray('VCPCMatrix', keyMats.vcpc);\n      model.UBO.setArray('WCVCNormals', keyMats.normalMatrix);\n      model.UBO.setValue('LightCount', model.renderable.getLights().length);\n      model.UBO.setValue('MaxEnvironmentMipLevel', model.renderable.getEnvironmentTexture()?.getMipLevel());\n      model.UBO.setValue('BackgroundDiffuseStrength', model.renderable.getEnvironmentTextureDiffuseStrength());\n      model.UBO.setValue('BackgroundSpecularStrength', model.renderable.getEnvironmentTextureSpecularStrength());\n      const tsize = publicAPI.getYInvertedTiledSizeAndOrigin();\n      model.UBO.setArray('viewportSize', [tsize.usize, tsize.vsize]);\n      model.UBO.setValue('cameraParallel', model.camera.getParallelProjection());\n      const device = model._parent.getDevice();\n      model.UBO.sendIfNeeded(device);\n    }\n  };\n  publicAPI.updateSSBO = () => {\n    const lights = model.renderable.getLights();\n    const keyMats = model.webgpuCamera.getKeyMatrices(publicAPI);\n    let lightTimeString = `${model.renderable.getMTime()}`;\n    for (let i = 0; i < lights.length; i++) {\n      lightTimeString += lights[i].getMTime();\n    }\n    if (lightTimeString !== model.lightTimeString) {\n      const lightPosArray = new Float32Array(lights.length * 4);\n      const lightDirArray = new Float32Array(lights.length * 4);\n      const lightColorArray = new Float32Array(lights.length * 4);\n      const lightTypeArray = new Float32Array(lights.length * 4);\n      for (let i = 0; i < lights.length; i++) {\n        const offset = i * 4;\n\n        // Position\n        const viewCoordinatePosition = lights[i].getPosition();\n        vec3.transformMat4(viewCoordinatePosition, viewCoordinatePosition, keyMats.wcvc);\n        // viewCoordinatePosition\n        lightPosArray[offset] = viewCoordinatePosition[0];\n        lightPosArray[offset + 1] = viewCoordinatePosition[1];\n        lightPosArray[offset + 2] = viewCoordinatePosition[2];\n        lightPosArray[offset + 3] = 0;\n\n        // Rotation (All are negative to correct for -Z being forward)\n        lightDirArray[offset] = -lights[i].getDirection()[0];\n        lightDirArray[offset + 1] = -lights[i].getDirection()[1];\n        lightDirArray[offset + 2] = -lights[i].getDirection()[2];\n        lightDirArray[offset + 3] = 0;\n\n        // Color\n        lightColorArray[offset] = lights[i].getColor()[0];\n        lightColorArray[offset + 1] = lights[i].getColor()[1];\n        lightColorArray[offset + 2] = lights[i].getColor()[2];\n        lightColorArray[offset + 3] = lights[i].getIntensity() * 5; // arbitrary multiplication to fix the dullness of low value PBR lights\n\n        // Type\n        lightTypeArray[offset] = getLightTypeIndex(lights[i]); // Type\n        lightTypeArray[offset + 1] = Math.cos(radiansFromDegrees(lights[i].getConeAngle())); // Inner Phi, should probably do some check on these to make sure they dont excede limits\n        lightTypeArray[offset + 2] = Math.cos(radiansFromDegrees(lights[i].getConeAngle() + lights[i].getConeFalloff())); // Outer Phi\n        lightTypeArray[offset + 3] = 0;\n      }\n\n      // Im not sure how correct this is, but this is what the example does\n      // https://kitware.github.io/vtk-js/api/Rendering_WebGPU_VolumePassFSQ.html\n      model.SSBO.clearData();\n      model.SSBO.setNumberOfInstances(lights.length);\n      model.SSBO.addEntry('LightPos', 'vec4<f32>'); // Position\n      model.SSBO.addEntry('LightDir', 'vec4<f32>'); // Direction\n      model.SSBO.addEntry('LightColor', 'vec4<f32>'); // Color (r, g, b, intensity)\n      model.SSBO.addEntry('LightData', 'vec4<f32>'); // Other data (type, etc, etc, etc)\n\n      model.SSBO.setAllInstancesFromArray('LightPos', lightPosArray);\n      model.SSBO.setAllInstancesFromArray('LightDir', lightDirArray);\n      model.SSBO.setAllInstancesFromArray('LightColor', lightColorArray);\n      model.SSBO.setAllInstancesFromArray('LightData', lightTypeArray);\n      const device = model._parent.getDevice();\n      model.SSBO.send(device);\n    }\n    model.lightTimeString = lightTimeString;\n  };\n  publicAPI.scissorAndViewport = encoder => {\n    const tsize = publicAPI.getYInvertedTiledSizeAndOrigin();\n    encoder.getHandle().setViewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize, 0.0, 1.0);\n    // set scissor\n    encoder.getHandle().setScissorRect(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n  };\n  publicAPI.bindUBO = renderEncoder => {\n    renderEncoder.activateBindGroup(model.bindGroup);\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\n      publicAPI.updateUBO();\n      publicAPI.updateSSBO();\n    } else {\n      publicAPI.scissorAndViewport(model.renderEncoder);\n      publicAPI.clear();\n      model.renderEncoder.end();\n    }\n  };\n  publicAPI.clear = () => {\n    if (model.renderable.getTransparent() || model.suppressClear) {\n      return;\n    }\n    const device = model._parent.getDevice();\n    // Normal Solid Color\n    if (!model.clearFSQ) {\n      model.clearFSQ = vtkWebGPUFullScreenQuad.newInstance();\n      model.clearFSQ.setDevice(device);\n      model.clearFSQ.setPipelineHash('clearfsq');\n      model.clearFSQ.setFragmentShaderTemplate(clearFragColorTemplate);\n      const ubo = vtkWebGPUUniformBuffer.newInstance({\n        label: 'mapperUBO'\n      });\n      ubo.addEntry('FSQMatrix', 'mat4x4<f32>');\n      ubo.addEntry('BackgroundColor', 'vec4<f32>');\n      model.clearFSQ.setUBO(ubo);\n      model.backgroundTex = model.renderable.getEnvironmentTexture();\n    }\n    // Textured Background\n    if (model.clearFSQ.getPipelineHash() !== 'clearfsqwithtexture' && model.renderable.getUseEnvironmentTextureAsBackground() && model.backgroundTex?.getImageLoaded()) {\n      model.clearFSQ.setFragmentShaderTemplate(clearFragTextureTemplate);\n      const ubo = vtkWebGPUUniformBuffer.newInstance({\n        label: 'mapperUBO'\n      });\n      ubo.addEntry('FSQMatrix', 'mat4x4<f32>');\n      ubo.addEntry('BackgroundColor', 'vec4<f32>');\n      model.clearFSQ.setUBO(ubo);\n      const environmentTextureHash = device.getTextureManager().getTextureForVTKTexture(model.backgroundTex);\n      if (environmentTextureHash.getReady()) {\n        const tview = environmentTextureHash.createView(`EnvironmentTexture`);\n        model.clearFSQ.setTextureViews([tview]);\n        model.backgroundTexLoaded = true;\n        const interpolate = model.backgroundTex.getInterpolate() ? 'linear' : 'nearest';\n        tview.addSampler(device, {\n          addressModeU: 'repeat',\n          addressModeV: 'clamp-to-edge',\n          addressModeW: 'repeat',\n          minFilter: interpolate,\n          magFilter: interpolate,\n          mipmapFilter: 'linear'\n        });\n      }\n      model.clearFSQ.setPipelineHash('clearfsqwithtexture');\n    } else if (model.clearFSQ.getPipelineHash() === 'clearfsqwithtexture' && !model.renderable.getUseEnvironmentTextureAsBackground()) {\n      // In case the mode is changed at runtime\n      model.clearFSQ = vtkWebGPUFullScreenQuad.newInstance();\n      model.clearFSQ.setDevice(device);\n      model.clearFSQ.setPipelineHash('clearfsq');\n      model.clearFSQ.setFragmentShaderTemplate(clearFragColorTemplate);\n      const ubo = vtkWebGPUUniformBuffer.newInstance({\n        label: 'mapperUBO'\n      });\n      ubo.addEntry('FSQMatrix', 'mat4x4<f32>');\n      ubo.addEntry('BackgroundColor', 'vec4<f32>');\n      model.clearFSQ.setUBO(ubo);\n    }\n    const keyMats = model.webgpuCamera.getKeyMatrices(publicAPI);\n    const background = model.renderable.getBackgroundByReference();\n    model.clearFSQ.getUBO().setArray('BackgroundColor', background);\n    mat4.transpose(_tNormalMat4, keyMats.normalMatrix);\n    mat4.mul(_fsqClearMat4, keyMats.scvc, keyMats.pcsc);\n    mat4.mul(_fsqClearMat4, _tNormalMat4, _fsqClearMat4);\n    model.clearFSQ.getUBO().setArray('FSQMatrix', _fsqClearMat4);\n    model.clearFSQ.getUBO().sendIfNeeded(device);\n    model.clearFSQ.prepareAndDraw(model.renderEncoder);\n  };\n  publicAPI.translucentPass = prepass => {\n    if (prepass) {\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\n    } else {\n      publicAPI.scissorAndViewport(model.renderEncoder);\n      model.renderEncoder.end();\n    }\n  };\n  publicAPI.volumeDepthRangePass = prepass => {\n    if (prepass) {\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\n    } else {\n      publicAPI.scissorAndViewport(model.renderEncoder);\n      model.renderEncoder.end();\n    }\n  };\n  publicAPI.getAspectRatio = () => {\n    const size = model._parent.getSizeByReference();\n    const viewport = model.renderable.getViewportByReference();\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\n  };\n  publicAPI.convertToOpenGLDepth = val => model.webgpuCamera.convertToOpenGLDepth(val);\n  publicAPI.getYInvertedTiledSizeAndOrigin = () => {\n    const res = publicAPI.getTiledSizeAndOrigin();\n    const size = model._parent.getSizeByReference();\n    res.lowerLeftV = size[1] - res.vsize - res.lowerLeftV;\n    return res;\n  };\n  publicAPI.getTiledSizeAndOrigin = () => {\n    const vport = model.renderable.getViewportByReference();\n\n    // if there is no window assume 0 1\n    const tileViewPort = [0.0, 0.0, 1.0, 1.0];\n\n    // find the lower left corner of the viewport, taking into account the\n    // lower left boundary of this tile\n    const vpu = vport[0] - tileViewPort[0];\n    const vpv = vport[1] - tileViewPort[1];\n\n    // store the result as a pixel value\n    const ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\n    const lowerLeftU = Math.round(ndvp[0]);\n    const lowerLeftV = Math.round(ndvp[1]);\n\n    // find the upper right corner of the viewport, taking into account the\n    // lower left boundary of this tile\n    const vpu2 = vport[2] - tileViewPort[0];\n    const vpv2 = vport[3] - tileViewPort[1];\n    const ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2);\n\n    // now compute the size of the intersection of the viewport with the\n    // current tile\n    let usize = Math.round(ndvp2[0]) - lowerLeftU;\n    let vsize = Math.round(ndvp2[1]) - lowerLeftV;\n    if (usize < 0) {\n      usize = 0;\n    }\n    if (vsize < 0) {\n      vsize = 0;\n    }\n    return {\n      usize,\n      vsize,\n      lowerLeftU,\n      lowerLeftV\n    };\n  };\n  publicAPI.getPropFromID = id => {\n    for (let i = 0; i < model.children.length; i++) {\n      const res = model.children[i].getPropID ? model.children[i].getPropID() : -1;\n      if (res === id) {\n        return model.children[i];\n      }\n    }\n    return null;\n  };\n  publicAPI.getStabilizedTime = () => model.stabilizedTime.getMTime();\n  publicAPI.releaseGraphicsResources = () => {\n    if (model.selector !== null) {\n      model.selector.releaseGraphicsResources();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bindGroup: null,\n  selector: null,\n  renderEncoder: null,\n  recenterThreshold: 20.0,\n  suppressClear: false,\n  stabilizedCenter: [0.0, 0.0, 0.0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // UBO\n  model.UBO = vtkWebGPUUniformBuffer.newInstance({\n    label: 'rendererUBO'\n  });\n  model.UBO.addEntry('WCVCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('SCPCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('PCSCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('SCVCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('VCPCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('WCVCNormals', 'mat4x4<f32>');\n  model.UBO.addEntry('viewportSize', 'vec2<f32>');\n  model.UBO.addEntry('LightCount', 'i32');\n  model.UBO.addEntry('MaxEnvironmentMipLevel', 'f32');\n  model.UBO.addEntry('BackgroundDiffuseStrength', 'f32');\n  model.UBO.addEntry('BackgroundSpecularStrength', 'f32');\n  model.UBO.addEntry('cameraParallel', 'u32');\n\n  // SSBO (Light data)\n  model.SSBO = vtkWebGPUStorageBuffer.newInstance({\n    label: 'rendererLightSSBO'\n  });\n  model.lightTimeString = '';\n  model.bindGroup = vtkWebGPUBindGroup.newInstance({\n    label: 'rendererBG'\n  });\n  model.bindGroup.setBindables([model.UBO, model.SSBO]);\n  model.tmpMat4 = mat4.identity(new Float64Array(16));\n  model.stabilizedTime = {};\n  obj(model.stabilizedTime, {\n    mtime: 0\n  });\n\n  // Build VTK API\n  get(publicAPI, model, ['bindGroup', 'stabilizedTime']);\n  getArray(publicAPI, model, ['stabilizedCenter']);\n  setGet(publicAPI, model, ['renderEncoder', 'selector', 'suppressClear', 'UBO']);\n\n  // Object methods\n  vtkWebGPURenderer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPURenderer');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkRenderer', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkProp from '../Core/Prop.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  CoordinateSystem\n} = vtkProp;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUActor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType('vtkWebGPURenderWindow');\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    if (model.children[0]) {\n      model.children[0].traverse(renderPass);\n    }\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    if (model.children[0]) {\n      model.children[0].traverse(renderPass);\n    }\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n  publicAPI.getBufferShift = wgpuRen => {\n    publicAPI.getKeyMatrices(wgpuRen);\n    return model.bufferShift;\n  };\n  publicAPI.getKeyMatrices = wgpuRen => {\n    // has the actor or stabilization center changed?\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\n      model.renderable.computeMatrix();\n      const mcwc = model.renderable.getMatrix();\n\n      // compute the net shift, only apply stabilized coords with world coordinates\n      model.bufferShift[0] = mcwc[3];\n      model.bufferShift[1] = mcwc[7];\n      model.bufferShift[2] = mcwc[11];\n      const center = wgpuRen.getStabilizedCenterByReference();\n      if (model.renderable.getCoordinateSystem() === CoordinateSystem.WORLD) {\n        model.bufferShift[0] -= center[0];\n        model.bufferShift[1] -= center[1];\n        model.bufferShift[2] -= center[2];\n      }\n      mat4.transpose(model.keyMatrices.bcwc, mcwc);\n      if (model.renderable.getIsIdentity()) {\n        mat4.identity(model.keyMatrices.normalMatrix);\n      } else {\n        // we use bcwc BEFORE the translate below (just to get transposed mcvc)\n        mat4.copy(model.keyMatrices.normalMatrix, model.keyMatrices.bcwc);\n        // zero out translation\n        model.keyMatrices.normalMatrix[3] = 0.0;\n        model.keyMatrices.normalMatrix[7] = 0.0;\n        model.keyMatrices.normalMatrix[11] = 0.0;\n        mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n        mat4.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      }\n\n      // only need the buffer shift to get to world\n      mat4.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [-model.bufferShift[0], -model.bufferShift[1], -model.bufferShift[2]]);\n\n      // to get to stabilized we also need the center\n      if (model.renderable.getCoordinateSystem() === CoordinateSystem.WORLD) {\n        mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\n      } else {\n        mat4.copy(model.keyMatrices.bcsc, model.keyMatrices.bcwc);\n      }\n      model.keyMatricesTime.modified();\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  keyMatricesTime: null,\n  keyMatrices: null,\n  propID: undefined,\n  bufferShift: undefined\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatricesTime = {};\n  macro.obj(model.keyMatricesTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16)\n  };\n  macro.get(publicAPI, model, ['propID', 'keyMatricesTime']);\n  model.bufferShift = [0, 0, 0, 0];\n\n  // Object methods\n  vtkWebGPUActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkActor', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkProp from '../Core/Prop.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  CoordinateSystem\n} = vtkProp;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUActor2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUActor2D');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType('vtkWebGPURenderWindow');\n      if (model.propID === undefined) {\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.renderable.getMapper());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseOpaquePass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    if (model.children[0]) {\n      model.children[0].traverse(renderPass);\n    }\n    publicAPI.apply(renderPass, false);\n  };\n\n  // we draw textures, then mapper, then post pass textures\n  publicAPI.traverseTranslucentPass = renderPass => {\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\n      return;\n    }\n    publicAPI.apply(renderPass, true);\n    if (model.children[0]) {\n      model.children[0].traverse(renderPass);\n    }\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.queryPass = (prepass, renderPass) => {\n    if (prepass) {\n      if (!model.renderable || !model.renderable.getVisibility()) {\n        return;\n      }\n      if (model.renderable.getIsOpaque()) {\n        renderPass.incrementOpaqueActorCount();\n      } else {\n        renderPass.incrementTranslucentActorCount();\n      }\n    }\n  };\n  publicAPI.getBufferShift = wgpuRen => {\n    publicAPI.getKeyMatrices(wgpuRen);\n    return model.bufferShift;\n  };\n  publicAPI.getKeyMatrices = wgpuRen => {\n    // has the actor or stabilization center changed?\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\n      // compute the net shift, only apply stabilized coords with world coordinates\n      model.bufferShift[0] = 0.0;\n      model.bufferShift[1] = 0.0;\n      model.bufferShift[2] = 0.0;\n      const center = wgpuRen.getStabilizedCenterByReference();\n      if (model.renderable.getCoordinateSystem() === CoordinateSystem.WORLD) {\n        model.bufferShift[0] -= center[0];\n        model.bufferShift[1] -= center[1];\n        model.bufferShift[2] -= center[2];\n      }\n      mat4.identity(model.keyMatrices.bcwc);\n      mat4.identity(model.keyMatrices.normalMatrix);\n\n      // only meed the buffer shift to get to world\n      mat4.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [-model.bufferShift[0], -model.bufferShift[1], -model.bufferShift[2]]);\n\n      // to get to stabilized we also need the center\n      if (model.renderable.getCoordinateSystem() === CoordinateSystem.WORLD) {\n        mat4.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\n      } else {\n        mat4.copy(model.keyMatrices.bcsc, model.keyMatrices.bcwc);\n      }\n      model.keyMatricesTime.modified();\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  keyMatricesTime: null,\n  keyMatrices: null,\n  propID: undefined,\n  bufferShift: undefined\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatricesTime = {};\n  macro.obj(model.keyMatricesTime, {\n    mtime: 0\n  });\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    bcwc: new Float64Array(16),\n    bcsc: new Float64Array(16)\n  };\n  macro.get(publicAPI, model, ['propID', 'keyMatricesTime']);\n  model.bufferShift = [0, 0, 0, 0];\n\n  // Object methods\n  vtkWebGPUActor2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkActor2D', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { n as newInstance$1 } from '../../macros2.js';\nimport vtkCubeAxesActor from '../Core/CubeAxesActor.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUCubeAxesActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUCubeAxesActor(publicAPI, model) {\n  model.classHierarchy.push('vtkWebGPUCubeAxesActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\n      if (!model.CubeAxesActorHelper.getRenderable()) {\n        model.CubeAxesActorHelper.setRenderable(model.renderable);\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.CubeAxesActorHelper.getTmActor());\n      publicAPI.addMissingNode(model.renderable.getGridActor());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      const camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\n      const tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\n      model.CubeAxesActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model.WebGPURenderWindow.getRenderable());\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.CubeAxesActorHelper = vtkCubeAxesActor.newCubeAxesActorHelper();\n\n  // Object methods\n  vtkWebGPUCubeAxesActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUCubeAxesActor');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkCubeAxesActor', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport Constants from './Property2D/Constants.js';\nimport { Representation } from './Property/Constants.js';\n\nconst {\n  DisplayLocation\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkProperty2D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProperty2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProperty2D');\n  publicAPI.setDisplayLocationToBackground = () => publicAPI.setDisplayLocation(DisplayLocation.BACKGROUND);\n  publicAPI.setDisplayLocationToForeground = () => publicAPI.setDisplayLocation(DisplayLocation.FOREGROUND);\n  publicAPI.setRepresentationToWireframe = () => publicAPI.setRepresentation(Representation.WIREFRAME);\n  publicAPI.setRepresentationToSurface = () => publicAPI.setRepresentation(Representation.SURFACE);\n  publicAPI.setRepresentationToPoints = () => publicAPI.setRepresentation(Representation.POINTS);\n  publicAPI.getRepresentationAsString = () => macro.enumToString(Representation, model.representation);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  color: [1, 1, 1],\n  opacity: 1,\n  pointSize: 1,\n  lineWidth: 1,\n  representation: Representation.SURFACE,\n  displayLocation: DisplayLocation.FOREGROUND\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['opacity', 'lineWidth', 'pointSize', 'displayLocation', 'representation']);\n  macro.setGetArray(publicAPI, model, ['color'], 3);\n\n  // Object methods\n  vtkProperty2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProperty2D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProperty2D$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkProperty2D$1 as default, extend, newInstance };\n", "import { mat3, mat4 } from 'gl-matrix';\nimport { n as newInstance$1, e as setGet } from '../../macros2.js';\nimport vtkMapper from '../Core/Mapper.js';\nimport vtkProp from '../Core/Prop.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkProperty2D from '../Core/Property2D.js';\nimport vtkTexture from '../Core/Texture.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUUniformBuffer from './UniformBuffer.js';\nimport vtkWebGPUSimpleMapper from './SimpleMapper.js';\nimport vtkWebGPUTypes from './Types.js';\n\nconst {\n  BufferUsage,\n  PrimitiveTypes\n} = vtkWebGPUBufferManager;\nconst {\n  Representation\n} = vtkProperty;\nconst {\n  ScalarMode\n} = vtkMapper;\nconst {\n  CoordinateSystem\n} = vtkProp;\nconst {\n  DisplayLocation\n} = vtkProperty2D;\nconst vtkWebGPUPolyDataVS = `\n//VTK::Renderer::Dec\n\n//VTK::Color::Dec\n\n//VTK::Normal::Dec\n\n//VTK::TCoord::Dec\n\n//VTK::Select::Dec\n\n//VTK::Mapper::Dec\n\n//VTK::IOStructs::Dec\n\n@vertex\nfn main(\n//VTK::IOStructs::Input\n)\n//VTK::IOStructs::Output\n{\n  var output : vertexOutput;\n\n  var vertex: vec4<f32> = vertexBC;\n\n  //VTK::Color::Impl\n\n  //VTK::Normal::Impl\n\n  //VTK::TCoord::Impl\n\n  //VTK::Select::Impl\n\n  //VTK::Position::Impl\n\n  return output;\n}\n`;\nconst vtkWebGPUPolyDataFS = `\nstruct PBRData {\n  diffuse: vec3<f32>,\n  specular: vec3<f32>,\n}\n\n// Dot product with the max already in it\nfn mdot(a: vec3<f32>, b: vec3<f32>) -> f32 {\n  return max(0.0, dot(a, b));\n}\n// Dot product with a max in it that does not allow for negative values\n// Physically based rendering is accurate as long as normals are accurate,\n// however this is pretty often not the case. In order to prevent negative\n// values from ruining light calculations and creating zones of zero light,\n// this remapping is used, which smoothly clamps the dot product between\n// zero and one while still maintaining a good amount of accuracy.\nfn cdot(a: vec3<f32>, b: vec3<f32>) -> f32 {\n  var d: f32 = max(0.0, dot(a, b));\n  d = pow((d + 1.0) / 2.0, 2.6);\n  return d;\n}\n\n// Lambertian diffuse model\nfn lambertDiffuse(base: vec3<f32>, N: vec3<f32>, L: vec3<f32>) -> vec3<f32> {\n  var pi: f32 = 3.14159265359; \n  var NdotL: f32 = mdot(N, L);\n  NdotL = pow(NdotL, 1.5);\n  return (base/pi)*NdotL;\n}\n\n// Yasuhiro Fujii improvement on the Oren-Nayar model\n// https://mimosa-pudica.net/improved-oren-nayar.html\n// p is surface color, o is roughness\nfn fujiiOrenNayar(p: vec3<f32>, o: f32, N: vec3<f32>, L: vec3<f32>, V: vec3<f32>) -> vec3<f32> {\n  var invpi: f32 = 0.31830988618; // 1/pi\n\n  var o2 = o*o;\n  var NdotL: f32 = mdot(N, L);\n  NdotL = pow(NdotL, 1.5); // Less physically accurate, but hides the \"seams\" between lights better\n\n  var NdotV: f32 = mdot(N, V);\n  var LdotV: f32 = mdot(L, V);\n\n  var s: f32 = LdotV - NdotL*NdotV;\n  var t: f32 = mix(1.0, max(NdotL, NdotV), step(0.0, s)); // Mix with step is the equivalent of an if statement\n  var A: vec3<f32> = 0.5*(o2 / (o2 + 0.33)) + 0.17*p*(o2 / (o2 + 0.13));\n  A = invpi*(1 - A);\n  var B: f32 = 0.45*(o2 / (o2 + 0.09));\n  B = invpi*B;\n\n  return p*NdotL*(A + B*(s/t));\n}\n\n// Fresnel portion of BRDF (IOR only, simplified)\nfn schlickFresnelIOR(V: vec3<f32>, N: vec3<f32>, ior: f32, k: f32) -> f32 {\n  var NdotV: f32 = mdot(V, N);\n  var F0: f32 = (pow((ior - 1.0), 2.0) + k*k) / (pow((ior + 1.0), 2.0) + k*k); // This takes into account the roughness, which the other one does not\n  return F0 + (1.0 - F0) * pow((1.0-NdotV), 5.0);\n}\n\n// Fresnel portion of BRDF (Color ior, better)\nfn schlickFresnelRGB(V: vec3<f32>, N: vec3<f32>, F0: vec3<f32>) -> vec3<f32> {\n  var NdotV: f32 = mdot(V, N);\n  return F0 + (1.0 - F0) * pow((1-NdotV), 5.0);\n}\n\n// Normal portion of BRDF\n// https://learnopengl.com/PBR/Theory\n// Trowbridge-Reitz GGX functions: normal, halfway, roughness^2\nfn trGGX(N: vec3<f32>, H: vec3<f32>, a: f32) -> f32 {\n  var pi: f32 = 3.14159265359; \n\n  var a2: f32 = a*a;\n  var NdotH = mdot(N, H);\n  var NdotH2 = NdotH*NdotH;\n  \n  var denom: f32 = NdotH2 * (a2 - 1.0) + 1.0;\n\n  return a2 / max((pi*denom*denom), 0.000001);\n}\n\n// A VERY bad approximation of anisotropy. Real anisotropic calculations require tangent and bitangent\nfn anisotrophicTrGGX(N: vec3<f32>, H: vec3<f32>, O: vec3<f32>, s: f32, a: f32) -> f32 {\n  var Op: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(O) * s, 0.)).xyz;\n\n  var ggx1: f32 = trGGX(N + Op*s, H, a);\n  var ggx2: f32 = trGGX(N - Op*s, H, a);\n  return (0.5 * ggx1 + 0.5 * ggx2);\n}\n\n// Geometry portion of BRDF\nfn schlickGGX(N: vec3<f32>, X: vec3<f32>, k: f32) -> f32 {\n  var NdotX = cdot(N, X);\n  return NdotX / max(0.000001, (NdotX*(1.0-k) + k));\n}\n\nfn smithSurfaceRoughness(N: vec3<f32>, V: vec3<f32>, L: vec3<f32>, k: f32) -> f32 {\n  var ggx1: f32 = min(1.0, schlickGGX(N, V, k));\n  var ggx2: f32 = min(1.0, schlickGGX(N, L, k));\n  return ggx1*ggx2;\n}\n\n// BRDF Combination\nfn cookTorrance(D: f32, F: f32, G: f32, N: vec3<f32>, V: vec3<f32>, L: vec3<f32>) -> f32 {\n  var num: f32 = D*F*G;\n  var denom: f32 = 4*cdot(V, N)*cdot(L, N);\n\n  return num / max(denom, 0.000001);\n}\n\n// Different lighting calculations for different light sources\nfn calcDirectionalLight(N: vec3<f32>, V: vec3<f32>, ior: f32, roughness: f32, metallic: f32, direction: vec3<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {  \n  var L: vec3<f32> = normalize(direction); // Light Vector\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\n\n  var alpha = roughness*roughness;\n  var k: f32 = alpha*alpha / 2;\n\n  var D: f32 = trGGX(N, H, alpha); // Distribution\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\n\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L); // Fresnel term is replaced with 1 because it is added later\n  var incoming: vec3<f32> = color;\n  var angle: f32 = mdot(L, N);\n  angle = pow(angle, 1.5);\n\n  var specular: vec3<f32> = brdf*incoming*angle;\n  // Oren-Nayar gives a clay-like effect when fully rough which some people may not want, so it might be better to give a separate\n  // control property for the diffuse vs specular roughness\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V); \n  // Stores the specular and diffuse separately to allow for finer post processing\n  var out = PBRData(diffuse, specular);\n  \n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\n}\n\n// TODO: find some way to reduce the number of arguments going in here\nfn calcPointLight(N: vec3<f32>, V: vec3<f32>, fragPos: vec3<f32>, ior: f32, roughness: f32, metallic: f32, position: vec3<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {\n  var L: vec3<f32> = normalize(position - fragPos); // Light Vector\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\n  var dist = distance(position, fragPos);\n\n  var alpha = roughness*roughness;\n  var k: f32 = alpha*alpha / 2.0; // could also be pow(alpha + 1.0, 2) / 8\n\n  var D: f32 = trGGX(N, H, alpha); // Distribution\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\n\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L);\n  var incoming: vec3<f32> = color * (1.0 / (dist*dist));\n  var angle: f32 = mdot(L, N);\n  angle = pow(angle, 1.5); // Smoothing factor makes it less accurate, but reduces ugly \"seams\" bewteen light sources\n\n  var specular: vec3<f32> = brdf*incoming*angle;\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V);\n\n  // Stores the specular and diffuse separately to allow for finer post processing\n  // Could also be done (propably more properly) with a struct\n  var out = PBRData(diffuse, specular);\n  \n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\n}\n\n// For a reason unknown to me, spheres dont seem to behave propperly with head-on spot lights\nfn calcSpotLight(N: vec3<f32>, V: vec3<f32>, fragPos: vec3<f32>, ior: f32, roughness: f32, metallic: f32, position: vec3<f32>, direction: vec3<f32>, cones: vec2<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {\n  var L: vec3<f32> = normalize(position - fragPos);\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\n  var dist = distance(position, fragPos);\n\n  var alpha = roughness*roughness;\n  var k: f32 = alpha*alpha / 2.0; // could also be pow(alpha + 1.0, 2) / 8\n\n  var D: f32 = trGGX(N, H, alpha); // Distribution\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\n\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L);\n  \n  // Cones.x is the inner phi and cones.y is the outer phi\n  var theta: f32 = mdot(normalize(direction), L);\n  var epsilon: f32 = cones.x - cones.y;\n  var intensity: f32 = (theta - cones.y) / epsilon;\n  intensity = clamp(intensity, 0.0, 1.0);\n  intensity /= dist*dist;\n\n  var incoming: vec3<f32> = color * intensity;\n\n  var angle: f32 = mdot(L, N);\n  angle = pow(angle, 1.5); // Smoothing factor makes it less accurate, but reduces ugly \"seams\" bewteen light sources\n\n  var specular: vec3<f32> = brdf*incoming*angle;\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V);\n\n  // Stores the specular and diffuse separately to allow for finer post processing\n  // Could also be done (propably more properly) with a struct\n  var out = PBRData(diffuse, specular);\n  \n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\n}\n\n// Environment mapping stuff\n// Takes in a vector and converts it to an equivalent coordinate in a rectilinear texture. Should be replaced with cubemaps at some point\nfn vecToRectCoord(dir: vec3<f32>) -> vec2<f32> {\n  var tau: f32 = 6.28318530718;\n  var pi: f32 = 3.14159265359;\n  var out: vec2<f32> = vec2<f32>(0.0);\n\n  out.x = atan2(dir.z, dir.x) / tau;\n  out.x += 0.5;\n\n  var phix: f32 = length(vec2(dir.x, dir.z));\n  out.y = atan2(dir.y, phix) / pi + 0.5;\n\n  return out;\n}\n\n//VTK::Renderer::Dec\n\n//VTK::Color::Dec\n\n//VTK::TCoord::Dec\n\n// optional surface normal declaration\n//VTK::Normal::Dec\n\n//VTK::Select::Dec\n\n//VTK::RenderEncoder::Dec\n\n//VTK::Mapper::Dec\n\n//VTK::IOStructs::Dec\n\n@fragment\nfn main(\n//VTK::IOStructs::Input\n)\n//VTK::IOStructs::Output\n{\n  var output : fragmentOutput;\n\n  // Temporary ambient, diffuse, and opacity\n  var ambientColor: vec4<f32> = mapperUBO.AmbientColor;\n  var diffuseColor: vec4<f32> = mapperUBO.DiffuseColor;\n  var opacity: f32 = mapperUBO.Opacity;\n\n  // This should be declared somewhere else\n  var _diffuseMap: vec4<f32> = vec4<f32>(1.0);\n  var _roughnessMap: vec4<f32> = vec4<f32>(1.0);\n  var _metallicMap: vec4<f32> = vec4<f32>(1.0);\n  var _normalMap: vec4<f32> = vec4<f32>(0.0, 0.0, 1.0, 0.0); // normal map was setting off the normal vector detection in fragment\n  var _ambientOcclusionMap: vec4<f32> = vec4<f32>(1.);\n  var _emissionMap: vec4<f32> = vec4<f32>(0.);\n\n  //VTK::Color::Impl\n\n  //VTK::TCoord::Impl\n\n  //VTK::Normal::Impl\n\n  var computedColor: vec4<f32> = vec4<f32>(diffuseColor.rgb, 1.0);\n\n  //VTK::Light::Impl\n\n  //VTK::Select::Impl\n\n  if (computedColor.a == 0.0) { discard; };\n\n  //VTK::Position::Impl\n\n  //VTK::RenderEncoder::Impl\n\n  return output;\n}\n`;\nfunction isEdges(hash) {\n  // edge pipelines have \"edge\" in them\n  return hash.indexOf('edge') >= 0;\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUCellArrayMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUCellArrayMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUCellArrayMapper');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      if (model.is2D) {\n        model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor2D');\n        model.forceZValue = true;\n      } else {\n        model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor');\n        model.forceZValue = false;\n      }\n      model.coordinateSystem = model.WebGPUActor.getRenderable().getCoordinateSystem();\n      model.useRendererMatrix = model.coordinateSystem !== CoordinateSystem.DISPLAY;\n      model.WebGPURenderer = model.WebGPUActor.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\n      model.device = model.WebGPURenderWindow.getDevice();\n    }\n  };\n\n  // Renders myself\n  publicAPI.translucentPass = prepass => {\n    if (prepass) {\n      publicAPI.prepareToDraw(model.WebGPURenderer.getRenderEncoder());\n      model.renderEncoder.registerDrawCallback(model.pipeline, publicAPI.draw);\n    }\n  };\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      publicAPI.prepareToDraw(model.WebGPURenderer.getRenderEncoder());\n      model.renderEncoder.registerDrawCallback(model.pipeline, publicAPI.draw);\n    }\n  };\n  publicAPI.updateUBO = () => {\n    // make sure the data is up to date\n    const actor = model.WebGPUActor.getRenderable();\n    const ppty = actor.getProperty();\n    const utime = model.UBO.getSendTime();\n    if (publicAPI.getMTime() > utime || ppty.getMTime() > utime || model.renderable.getMTime() > utime) {\n      // Matricies\n      const keyMats = model.WebGPUActor.getKeyMatrices(model.WebGPURenderer);\n      model.UBO.setArray('BCWCMatrix', keyMats.bcwc);\n      model.UBO.setArray('BCSCMatrix', keyMats.bcsc);\n      model.UBO.setArray('MCWCNormals', keyMats.normalMatrix);\n      if (model.is2D) {\n        model.UBO.setValue('ZValue', model.WebGPUActor.getRenderable().getProperty().getDisplayLocation() === DisplayLocation.FOREGROUND ? 1.0 : 0.0);\n        const aColor = ppty.getColorByReference();\n        model.UBO.setValue('AmbientIntensity', 1.0);\n        model.UBO.setArray('DiffuseColor', [aColor[0], aColor[1], aColor[2], 1.0]);\n        model.UBO.setValue('DiffuseIntensity', 0.0);\n        model.UBO.setValue('SpecularIntensity', 0.0);\n      } else {\n        // Base Colors\n        let aColor = ppty.getAmbientColorByReference();\n        model.UBO.setValue('AmbientIntensity', ppty.getAmbient());\n        model.UBO.setArray('AmbientColor', [aColor[0], aColor[1], aColor[2], 1.0]);\n        model.UBO.setValue('DiffuseIntensity', ppty.getDiffuse());\n        aColor = ppty.getDiffuseColorByReference();\n        model.UBO.setArray('DiffuseColor', [aColor[0], aColor[1], aColor[2], 1.0]);\n        // Roughness\n        model.UBO.setValue('Roughness', ppty.getRoughness());\n        model.UBO.setValue('BaseIOR', ppty.getBaseIOR());\n        // Metallic\n        model.UBO.setValue('Metallic', ppty.getMetallic());\n        // Normal\n        model.UBO.setValue('NormalStrength', ppty.getNormalStrength());\n        // Emission\n        model.UBO.setValue('Emission', ppty.getEmission());\n        // Specular\n        model.UBO.setValue('SpecularIntensity', ppty.getSpecular());\n        aColor = ppty.getSpecularColorByReference();\n        model.UBO.setArray('SpecularColor', [aColor[0], aColor[1], aColor[2], 1.0]);\n      }\n      // Edge and line rendering\n      const aColor = ppty.getEdgeColorByReference?.();\n      if (aColor) {\n        model.UBO.setArray('EdgeColor', [aColor[0], aColor[1], aColor[2], 1.0]);\n      }\n      model.UBO.setValue('LineWidth', ppty.getLineWidth());\n      model.UBO.setValue('Opacity', ppty.getOpacity());\n      model.UBO.setValue('PropID', model.WebGPUActor.getPropID());\n      const device = model.WebGPURenderWindow.getDevice();\n      model.UBO.sendIfNeeded(device);\n    }\n  };\n  publicAPI.haveWideLines = () => {\n    const actor = model.WebGPUActor.getRenderable();\n    const representation = actor.getProperty().getRepresentation();\n    if (actor.getProperty().getLineWidth() <= 1.0) {\n      return false;\n    }\n    if (model.primitiveType === PrimitiveTypes.Verts) {\n      return false;\n    }\n    if (model.primitiveType === PrimitiveTypes.Triangles || model.primitiveType === PrimitiveTypes.TriangleStrips) {\n      return representation === Representation.WIREFRAME;\n    }\n    return true;\n  };\n  publicAPI.replaceShaderPosition = (hash, pipeline, vertexInput) => {\n    const vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    if (!vDesc.hasOutput('vertexVC')) vDesc.addOutput('vec4<f32>', 'vertexVC');\n    let code = vDesc.getCode();\n    if (model.useRendererMatrix) {\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    var pCoord: vec4<f32> = rendererUBO.SCPCMatrix*mapperUBO.BCSCMatrix*vertexBC;', '    output.vertexVC = rendererUBO.SCVCMatrix * mapperUBO.BCSCMatrix * vec4<f32>(vertexBC.xyz, 1.0);', '//VTK::Position::Impl']).result;\n      if (model.forceZValue) {\n        code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['pCoord = vec4<f32>(pCoord.xyz/pCoord.w, 1.0);', 'pCoord.z = mapperUBO.ZValue;', '//VTK::Position::Impl']).result;\n      }\n    } else {\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    var pCoord: vec4<f32> = mapperUBO.BCSCMatrix*vertexBC;', '    pCoord.x = 2.0* pCoord.x / rendererUBO.viewportSize.x - 1.0;', '    pCoord.y = 2.0* pCoord.y / rendererUBO.viewportSize.y - 1.0;', '    pCoord.z = 0.5 - 0.5 * pCoord.z;', '//VTK::Position::Impl']).result;\n      if (model.forceZValue) {\n        code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    pCoord.z = mapperUBO.ZValue;', '//VTK::Position::Impl']).result;\n      }\n    }\n    if (publicAPI.haveWideLines()) {\n      vDesc.addBuiltinInput('u32', '@builtin(instance_index) instanceIndex');\n      // widen the edge\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    var tmpPos: vec4<f32> = pCoord;', '    var numSteps: f32 = ceil(mapperUBO.LineWidth - 1.0);', '    var offset: f32 = (mapperUBO.LineWidth - 1.0) * (f32(input.instanceIndex / 2u) - numSteps/2.0) / numSteps;', '    var tmpPos2: vec3<f32> = tmpPos.xyz / tmpPos.w;', '    tmpPos2.x = tmpPos2.x + 2.0 * (f32(input.instanceIndex) % 2.0) * offset / rendererUBO.viewportSize.x;', '    tmpPos2.y = tmpPos2.y + 2.0 * (f32(input.instanceIndex + 1u) % 2.0) * offset / rendererUBO.viewportSize.y;', '    tmpPos2.z = min(1.0, tmpPos2.z + 0.00001);',\n      // could become a setting\n      '    pCoord = vec4<f32>(tmpPos2.xyz * tmpPos.w, tmpPos.w);', '//VTK::Position::Impl']).result;\n    }\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    output.Position = pCoord;']).result;\n    vDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n  publicAPI.replaceShaderNormal = (hash, pipeline, vertexInput) => {\n    const normalBuffer = vertexInput.getBuffer('normalMC');\n    const actor = model.WebGPUActor.getRenderable();\n    if (normalBuffer) {\n      const vDesc = pipeline.getShaderDescription('vertex');\n      if (!vDesc.hasOutput('normalVC')) {\n        vDesc.addOutput('vec3<f32>', 'normalVC', normalBuffer.getArrayInformation()[0].interpolation);\n      }\n      if (!vDesc.hasOutput('tangentVC')) {\n        vDesc.addOutput('vec3<f32>', 'tangentVC', normalBuffer.getArrayInformation()[0].interpolation);\n      }\n      if (!vDesc.hasOutput('bitangentVC')) {\n        vDesc.addOutput('vec3<f32>', 'bitangentVC', normalBuffer.getArrayInformation()[0].interpolation);\n      }\n      let code = vDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Normal::Impl', ['  output.normalVC = normalize((rendererUBO.WCVCNormals * mapperUBO.MCWCNormals * normalMC).xyz);',\n      // This is just an approximation, but it happens to work extremely well\n      // It only works well for normals that are head on and not super angled though\n      // Definitely needs to be replaced\n      '  var c1: vec3<f32> = cross(output.normalVC, vec3<f32>(0, 0, 1));', '  var c2: vec3<f32> = cross(output.normalVC, vec3<f32>(0, 1, 0));', '  var tangent: vec3<f32> = mix(c1, c2, distance(c1, c2));', '  output.tangentVC = normalize(tangent);', '  output.bitangentVC = normalize(cross(output.normalVC, tangent));']).result;\n      vDesc.setCode(code);\n      const fDesc = pipeline.getShaderDescription('fragment');\n      code = fDesc.getCode();\n      if (actor.getProperty().getNormalTexture()) {\n        code = vtkWebGPUShaderCache.substitute(code, '//VTK::Normal::Impl', ['  var normal: vec3<f32> = input.normalVC;', '  if (!input.frontFacing) { normal = -normal; }', '  var tangent: vec3<f32> = input.tangentVC;', '  var bitangent: vec3<f32> = input.bitangentVC;', '  var TCVCMatrix: mat3x3<f32> = mat3x3<f32>(', '    tangent.x, bitangent.x, normal.x,', '    tangent.y, bitangent.y, normal.y,', '    tangent.z, bitangent.z, normal.z,', '  );', '  var mappedNormal: vec3<f32> = TCVCMatrix * (_normalMap.xyz * 2 - 1);', '  normal = mix(normal, mappedNormal, mapperUBO.NormalStrength);', '  normal = normalize(normal);']).result;\n      } else {\n        code = vtkWebGPUShaderCache.substitute(code, '//VTK::Normal::Impl', ['  var normal: vec3<f32> = input.normalVC;', '  if (!input.frontFacing) { normal = -normal; }', '  normal = normalize(normal);']).result;\n      }\n      fDesc.setCode(code);\n    }\n  };\n  model.shaderReplacements.set('replaceShaderNormal', publicAPI.replaceShaderNormal);\n\n  // we only apply lighting when there is a \"var normal\" declaration in the\n  // fragment shader code. That is the lighting trigger.\n  publicAPI.replaceShaderLight = (hash, pipeline, vertexInput) => {\n    if (hash.includes('sel')) return;\n    const vDesc = pipeline.getShaderDescription('vertex');\n    if (!vDesc.hasOutput('vertexVC')) vDesc.addOutput('vec4<f32>', 'vertexVC');\n    const renderer = model.WebGPURenderer.getRenderable();\n    const fDesc = pipeline.getShaderDescription('fragment');\n    let code = fDesc.getCode();\n\n    // Code that runs if the fragment shader includes normals\n    if (code.includes('var normal:') && model.useRendererMatrix && !isEdges(hash) && !model.is2D && !hash.includes('sel')) {\n      const lightingCode = [\n      // Constants\n      '  var pi: f32 = 3.14159265359;',\n      // Vectors needed for light calculations\n      '  var fragPos: vec3<f32> = vec3<f32>(input.vertexVC.xyz);', '  var V: vec3<f32> = mix(normalize(-fragPos), vec3<f32>(0, 0, 1), f32(rendererUBO.cameraParallel)); // View Vector',\n      // Values needed for light calculations\n      '  var baseColor: vec3<f32> = _diffuseMap.rgb * diffuseColor.rgb;', '  var roughness: f32 = max(0.000001, mapperUBO.Roughness * _roughnessMap.r);',\n      // Need to have a different way of sampling greyscale values aside from .r\n      '  var metallic: f32 = mapperUBO.Metallic * _metallicMap.r;', '  var alpha: f32 = roughness*roughness;', '  var ior: f32 = mapperUBO.BaseIOR;', '  var k: f32 = alpha*alpha / 2;',\n      // Split diffuse and specular components\n      '  var diffuse: vec3<f32> = vec3<f32>(0.);', '  var specular: vec3<f32> = vec3<f32>(0.);', '  var emission: vec3<f32> = _emissionMap.rgb * mapperUBO.Emission;',\n      // Summing diffuse and specular components of directional lights\n      '  {', '    var i: i32 = 0;', '    loop {', '      if !(i < rendererUBO.LightCount) { break; }', '      switch (i32(rendererLightSSBO.values[i].LightData.x)) {', '         // Point Light', '         case 0 {', '           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;', '           var pos: vec3<f32> = (rendererLightSSBO.values[i].LightPos).xyz;', '           var calculated: PBRData = calcPointLight(normal, V, fragPos, ior, roughness, metallic, pos, color, baseColor);', '           diffuse += max(vec3<f32>(0), calculated.diffuse);', '           specular += max(vec3<f32>(0), calculated.specular);', '          }', '         // Directional light', '         case 1 {', '           var dir: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(rendererLightSSBO.values[i].LightDir.xyz), 0.)).xyz;', '           dir = normalize(dir);', '           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;', '           var calculated: PBRData = calcDirectionalLight(normal, V, ior, roughness, metallic, dir, color, baseColor); // diffuseColor.rgb needs to be fixed with a more dynamic diffuse color', '           diffuse += max(vec3<f32>(0), calculated.diffuse);', '           specular += max(vec3<f32>(0), calculated.specular);', '         }', '         // Spot Light', '         case 2 {', '           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;', '           var pos: vec3<f32> = (rendererLightSSBO.values[i].LightPos).xyz;', '           var dir: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(rendererLightSSBO.values[i].LightDir.xyz), 0.)).xyz;', '           dir = normalize(dir);', '           var cones: vec2<f32> = vec2<f32>(rendererLightSSBO.values[i].LightData.y, rendererLightSSBO.values[i].LightData.z);', '           var calculated: PBRData = calcSpotLight(normal, V, fragPos, ior, roughness, metallic, pos, dir, cones, color, baseColor);', '           diffuse += max(vec3<f32>(0), calculated.diffuse);', '           specular += max(vec3<f32>(0), calculated.specular);', '         }', '         default { continue; }', '       }', '      continuing { i++; }', '    }', '  }',\n      // Final variables for combining specular and diffuse\n      '  var fresnel: f32 = schlickFresnelIOR(V, normal, ior, k); // Fresnel', '  fresnel = min(1.0, fresnel);', '  // This could be controlled with its own variable (that isnt base color) for better artistic control', '  var fresnelMetallic: vec3<f32> = schlickFresnelRGB(V, normal, baseColor); // Fresnel for metal, takes color into account', '  var kS: vec3<f32> = mix(vec3<f32>(fresnel), fresnelMetallic, metallic);', '  kS = min(vec3<f32>(1.0), kS);', '  var kD: vec3<f32> = (1.0 - kS) * (1.0 - metallic);', '  var PBR: vec3<f32> = mapperUBO.DiffuseIntensity*kD*diffuse + kS*specular;', '  PBR += emission;', '  computedColor = vec4<f32>(PBR, mapperUBO.Opacity);'];\n      if (renderer.getEnvironmentTexture()?.getImageLoaded()) {\n        lightingCode.push('  // To get diffuse IBL, the texture is sampled with normals in worldspace', '  var diffuseIBLCoords: vec3<f32> = (transpose(rendererUBO.WCVCNormals) * vec4<f32>(normal, 1.)).xyz;', '  var diffuseCoords: vec2<f32> = vecToRectCoord(diffuseIBLCoords);', '  // To get specular IBL, the texture is sampled as the worldspace reflection between the normal and view vectors', '  // Reflections are first calculated in viewspace, then converted to worldspace to sample the environment', '  var VreflN: vec3<f32> = normalize(reflect(-V, normal));', '  var reflectionIBLCoords = (transpose(rendererUBO.WCVCNormals) * vec4<f32>(VreflN, 1.)).xyz;', '  var specularCoords: vec2<f32> = vecToRectCoord(reflectionIBLCoords);', '  var diffuseIBL = textureSampleLevel(EnvironmentTexture, EnvironmentTextureSampler, diffuseCoords, rendererUBO.MaxEnvironmentMipLevel);',\n        // Level multiplier should be set by UBO\n        '  var level = roughness * rendererUBO.MaxEnvironmentMipLevel;', '  var specularIBL = textureSampleLevel(EnvironmentTexture, EnvironmentTextureSampler, specularCoords, level);',\n        // Manual mip smoothing since not all formats support smooth level sampling\n        '  var specularIBLContribution: vec3<f32> = specularIBL.rgb*rendererUBO.BackgroundSpecularStrength;', '  computedColor += vec4<f32>(specularIBLContribution*kS, 0);', '  var diffuseIBLContribution: vec3<f32> = diffuseIBL.rgb*rendererUBO.BackgroundDiffuseStrength;', '  diffuseIBLContribution *= baseColor * _ambientOcclusionMap.rgb;',\n        // Multipy by baseColor may be changed\n        '  computedColor += vec4<f32>(diffuseIBLContribution*kD, 0);');\n      }\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Light::Impl', lightingCode).result;\n      fDesc.setCode(code);\n      // If theres no normals, just set the specular color to be flat\n    } else {\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Light::Impl', ['  var diffuse: vec3<f32> = diffuseColor.rgb;', '  var specular: vec3<f32> = mapperUBO.SpecularColor.rgb * mapperUBO.SpecularColor.a;', '  computedColor = vec4<f32>(diffuse * _diffuseMap.rgb, mapperUBO.Opacity);']).result;\n      fDesc.setCode(code);\n    }\n  };\n  model.shaderReplacements.set('replaceShaderLight', publicAPI.replaceShaderLight);\n  publicAPI.replaceShaderColor = (hash, pipeline, vertexInput) => {\n    // By default, set the colors to be flat\n    if (isEdges(hash)) {\n      const fDesc = pipeline.getShaderDescription('fragment');\n      let code = fDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Color::Impl', ['ambientColor = mapperUBO.EdgeColor;', 'diffuseColor = mapperUBO.EdgeColor;']).result;\n      fDesc.setCode(code);\n      return;\n    }\n\n    // If there's no vertex color buffer return the shader as is\n    const colorBuffer = vertexInput.getBuffer('colorVI');\n    if (!colorBuffer) return;\n\n    // Modifies the vertex shader to include the vertex colors and interpolation in the outputs\n    const vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addOutput('vec4<f32>', 'color', colorBuffer.getArrayInformation()[0].interpolation);\n    let code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Color::Impl', ['  output.color = colorVI;']).result;\n    vDesc.setCode(code);\n\n    // Sets the fragment shader to accept the color inputs from the vertex shader\n    const fDesc = pipeline.getShaderDescription('fragment');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Color::Impl', ['ambientColor = input.color;', 'diffuseColor = input.color;', 'opacity = mapperUBO.Opacity * input.color.a;']).result;\n    fDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderColor', publicAPI.replaceShaderColor);\n  publicAPI.replaceShaderTCoord = (hash, pipeline, vertexInput) => {\n    if (!vertexInput.hasAttribute('tcoord')) return;\n    const vDesc = pipeline.getShaderDescription('vertex');\n    const tcoords = vertexInput.getBuffer('tcoord');\n    const numComp = vtkWebGPUTypes.getNumberOfComponentsFromBufferFormat(tcoords.getArrayInformation()[0].format);\n    let code = vDesc.getCode();\n    vDesc.addOutput(`vec${numComp}<f32>`, 'tcoordVS');\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::TCoord::Impl', ['  output.tcoordVS = tcoord;']).result;\n    vDesc.setCode(code);\n    const fDesc = pipeline.getShaderDescription('fragment');\n    code = fDesc.getCode();\n    const actor = model.WebGPUActor.getRenderable();\n    const checkDims = texture => {\n      if (!texture) return false;\n      const dims = texture.getDimensionality();\n      return dims === numComp;\n    };\n    const usedTextures = [];\n    if (actor.getProperty().getDiffuseTexture?.()?.getImageLoaded() || actor.getTextures()[0] || model.colorTexture) {\n      if (\n      // Chained or statements here are questionable\n      checkDims(actor.getProperty().getDiffuseTexture?.()) || checkDims(actor.getTextures()[0]) || checkDims(model.colorTexture)) {\n        usedTextures.push('_diffuseMap = textureSample(DiffuseTexture, DiffuseTextureSampler, input.tcoordVS);');\n      }\n    }\n    if (actor.getProperty().getRoughnessTexture?.()?.getImageLoaded()) {\n      if (checkDims(actor.getProperty().getRoughnessTexture())) {\n        usedTextures.push('_roughnessMap = textureSample(RoughnessTexture, RoughnessTextureSampler, input.tcoordVS);');\n      }\n    }\n    if (actor.getProperty().getMetallicTexture?.()?.getImageLoaded()) {\n      if (checkDims(actor.getProperty().getMetallicTexture())) {\n        usedTextures.push('_metallicMap = textureSample(MetallicTexture, MetallicTextureSampler, input.tcoordVS);');\n      }\n    }\n    if (actor.getProperty().getNormalTexture?.()?.getImageLoaded()) {\n      if (checkDims(actor.getProperty().getNormalTexture())) {\n        usedTextures.push('_normalMap = textureSample(NormalTexture, NormalTextureSampler, input.tcoordVS);');\n      }\n    }\n    if (actor.getProperty().getAmbientOcclusionTexture?.()?.getImageLoaded()) {\n      if (checkDims(actor.getProperty().getAmbientOcclusionTexture())) {\n        usedTextures.push('_ambientOcclusionMap = textureSample(AmbientOcclusionTexture, AmbientOcclusionTextureSampler, input.tcoordVS);');\n      }\n    }\n    if (actor.getProperty().getEmissionTexture?.()?.getImageLoaded()) {\n      if (checkDims(actor.getProperty().getEmissionTexture())) {\n        usedTextures.push('_emissionMap = textureSample(EmissionTexture, EmissionTextureSampler, input.tcoordVS);');\n      }\n    }\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::TCoord::Impl', usedTextures).result;\n    fDesc.setCode(code);\n  };\n  model.shaderReplacements.set('replaceShaderTCoord', publicAPI.replaceShaderTCoord);\n  publicAPI.replaceShaderSelect = (hash, pipeline, vertexInput) => {\n    if (hash.includes('sel')) {\n      const fDesc = pipeline.getShaderDescription('fragment');\n      let code = fDesc.getCode();\n      // by default there are no composites, so just 0\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Select::Impl', ['  var compositeID: u32 = 0u;']).result;\n      fDesc.setCode(code);\n    }\n  };\n  model.shaderReplacements.set('replaceShaderSelect', publicAPI.replaceShaderSelect);\n  publicAPI.getUsage = (rep, i) => {\n    if (rep === Representation.POINTS || i === PrimitiveTypes.Points) {\n      return BufferUsage.Verts;\n    }\n    if (i === PrimitiveTypes.Lines) {\n      return BufferUsage.Lines;\n    }\n    if (rep === Representation.WIREFRAME) {\n      if (i === PrimitiveTypes.Triangles) {\n        return BufferUsage.LinesFromTriangles;\n      }\n      return BufferUsage.LinesFromStrips;\n    }\n    if (i === PrimitiveTypes.Triangles) {\n      return BufferUsage.Triangles;\n    }\n    if (i === PrimitiveTypes.TriangleStrips) {\n      return BufferUsage.Strips;\n    }\n    if (i === PrimitiveTypes.TriangleEdges) {\n      return BufferUsage.LinesFromTriangles;\n    }\n\n    // only strip edges left which are lines\n    return BufferUsage.LinesFromStrips;\n  };\n  publicAPI.getHashFromUsage = usage => `pt${usage}`;\n  publicAPI.getTopologyFromUsage = usage => {\n    switch (usage) {\n      case BufferUsage.Triangles:\n        return 'triangle-list';\n      case BufferUsage.Verts:\n        return 'point-list';\n      case BufferUsage.Lines:\n      default:\n        return 'line-list';\n    }\n  };\n\n  // TODO: calculate tangents\n  publicAPI.buildVertexInput = () => {\n    const pd = model.currentInput;\n    const cells = model.cellArray;\n    const primType = model.primitiveType;\n    const actor = model.WebGPUActor.getRenderable();\n    let representation = actor.getProperty().getRepresentation();\n    const device = model.WebGPURenderWindow.getDevice();\n    let edges = false;\n    if (primType === PrimitiveTypes.TriangleEdges) {\n      edges = true;\n      representation = Representation.WIREFRAME;\n    }\n    const vertexInput = model.vertexInput;\n    const points = pd.getPoints();\n    let indexBuffer;\n\n    // get the flat mapping indexBuffer for the cells\n    if (cells) {\n      const buffRequest = {\n        hash: `R${representation}P${primType}${cells.getMTime()}`,\n        usage: BufferUsage.Index,\n        cells,\n        numberOfPoints: points.getNumberOfPoints(),\n        primitiveType: primType,\n        representation\n      };\n      indexBuffer = device.getBufferManager().getBuffer(buffRequest);\n      vertexInput.setIndexBuffer(indexBuffer);\n    } else {\n      vertexInput.setIndexBuffer(null);\n    }\n\n    // hash = all things that can change the values on the buffer\n    // since mtimes are unique we can use\n    // - indexBuffer mtime - because cells drive how we pack\n    // - relevant dataArray mtime - the source data\n    // - shift - not currently captured\n    // - scale - not currently captured\n    // - format\n    // - usage\n    // - packExtra - covered by format\n\n    // points\n    if (points) {\n      const shift = model.WebGPUActor.getBufferShift(model.WebGPURenderer);\n      const buffRequest = {\n        hash: `${points.getMTime()}I${indexBuffer.getMTime()}${shift.join()}float32x4`,\n        usage: BufferUsage.PointArray,\n        format: 'float32x4',\n        dataArray: points,\n        indexBuffer,\n        shift,\n        packExtra: true\n      };\n      const buff = device.getBufferManager().getBuffer(buffRequest);\n      vertexInput.addBuffer(buff, ['vertexBC']);\n    } else {\n      vertexInput.removeBufferIfPresent('vertexBC');\n    }\n\n    // normals, only used for surface rendering\n    const usage = publicAPI.getUsage(representation, primType);\n    model._usesCellNormals = false;\n    if (!model.is2D && (\n    // no lighting on Property2D\n    usage === BufferUsage.Triangles || usage === BufferUsage.Strips)) {\n      const normals = pd.getPointData().getNormals();\n      // https://vtk.org/doc/nightly/html/classvtkPolyDataTangents.html\n      // Need to find some way of using precomputed tangents (or computing new ones)\n      const buffRequest = {\n        format: 'snorm8x4',\n        indexBuffer,\n        packExtra: true,\n        shift: 0,\n        scale: 127\n      };\n      if (normals) {\n        buffRequest.hash = `${normals.getMTime()}I${indexBuffer.getMTime()}snorm8x4`;\n        buffRequest.dataArray = normals;\n        buffRequest.usage = BufferUsage.PointArray;\n        const buff = device.getBufferManager().getBuffer(buffRequest);\n        vertexInput.addBuffer(buff, ['normalMC']);\n      } else if (primType === PrimitiveTypes.Triangles) {\n        model._usesCellNormals = true;\n        buffRequest.hash = `PFN${points.getMTime()}I${indexBuffer.getMTime()}snorm8x4`;\n        buffRequest.dataArray = points;\n        buffRequest.cells = cells;\n        buffRequest.usage = BufferUsage.NormalsFromPoints;\n        const buff = device.getBufferManager().getBuffer(buffRequest);\n        vertexInput.addBuffer(buff, ['normalMC']);\n      } else {\n        vertexInput.removeBufferIfPresent('normalMC');\n      }\n    } else {\n      vertexInput.removeBufferIfPresent('normalMC');\n    }\n\n    // deal with colors but only if modified\n    let haveColors = false;\n    if (model.renderable.getScalarVisibility()) {\n      const c = model.renderable.getColorMapColors();\n      if (c && !edges) {\n        const scalarMode = model.renderable.getScalarMode();\n        let haveCellScalars = false;\n        // We must figure out how the scalars should be mapped to the polydata.\n        if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !pd.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\n          haveCellScalars = true;\n        }\n        const buffRequest = {\n          usage: BufferUsage.PointArray,\n          format: 'unorm8x4',\n          hash: `${haveCellScalars}${c.getMTime()}I${indexBuffer.getMTime()}unorm8x4`,\n          dataArray: c,\n          indexBuffer,\n          cellData: haveCellScalars,\n          cellOffset: 0\n        };\n        const buff = device.getBufferManager().getBuffer(buffRequest);\n        vertexInput.addBuffer(buff, ['colorVI']);\n        haveColors = true;\n      }\n    }\n    if (!haveColors) {\n      vertexInput.removeBufferIfPresent('colorVI');\n    }\n    let tcoords = null;\n    if (model.renderable.getInterpolateScalarsBeforeMapping?.() && model.renderable.getColorCoordinates()) {\n      tcoords = model.renderable.getColorCoordinates();\n    } else {\n      tcoords = pd.getPointData().getTCoords();\n    }\n    if (tcoords && !edges) {\n      const buff = device.getBufferManager().getBufferForPointArray(tcoords, vertexInput.getIndexBuffer());\n      vertexInput.addBuffer(buff, ['tcoord']);\n    } else {\n      vertexInput.removeBufferIfPresent('tcoord');\n    }\n  };\n  publicAPI.updateTextures = () => {\n    // we keep track of new and used textures so\n    // that we can clean up any unused textures so we don't hold onto them\n    const usedTextures = [];\n    const newTextures = [];\n\n    // do we have a scalar color texture\n    const idata = model.renderable.getColorTextureMap?.();\n    if (idata) {\n      if (!model.colorTexture) {\n        model.colorTexture = vtkTexture.newInstance({\n          label: 'polyDataColor'\n        });\n      }\n      model.colorTexture.setInputData(idata);\n      newTextures.push(['Diffuse', model.colorTexture]);\n    }\n\n    // actor textures?\n    const actor = model.WebGPUActor.getRenderable();\n    const renderer = model.WebGPURenderer.getRenderable();\n\n    // Reusing the old code for new and old textures, just loading in from properties instead of actor.getTextures()\n    const textures = [];\n\n    // Feels like there should be a better way than individually adding all\n    if (actor.getProperty().getDiffuseTexture?.()) {\n      const pair = ['Diffuse', actor.getProperty().getDiffuseTexture()];\n      textures.push(pair);\n    }\n    if (actor.getTextures()[0]) {\n      const pair = ['Diffuse', actor.getTextures()[0]];\n      textures.push(pair);\n    }\n    if (model.colorTexture) {\n      const pair = ['Diffuse', model.colorTexture];\n      textures.push(pair);\n    }\n    if (actor.getProperty().getRoughnessTexture?.()) {\n      const pair = ['Roughness', actor.getProperty().getRoughnessTexture()];\n      textures.push(pair);\n    }\n    if (actor.getProperty().getMetallicTexture?.()) {\n      const pair = ['Metallic', actor.getProperty().getMetallicTexture()];\n      textures.push(pair);\n    }\n    if (actor.getProperty().getNormalTexture?.()) {\n      const pair = ['Normal', actor.getProperty().getNormalTexture()];\n      textures.push(pair);\n    }\n    if (actor.getProperty().getAmbientOcclusionTexture?.()) {\n      const pair = ['AmbientOcclusion', actor.getProperty().getAmbientOcclusionTexture()];\n      textures.push(pair);\n    }\n    if (actor.getProperty().getEmissionTexture?.()) {\n      const pair = ['Emission', actor.getProperty().getEmissionTexture()];\n      textures.push(pair);\n    }\n    if (renderer.getEnvironmentTexture?.()) {\n      const pair = ['Environment', renderer.getEnvironmentTexture()];\n      textures.push(pair);\n    }\n    for (let i = 0; i < textures.length; i++) {\n      if (textures[i][1].getInputData() || textures[i][1].getJsImageData() || textures[i][1].getCanvas()) {\n        newTextures.push(textures[i]);\n      }\n      if (textures[i][1].getImage() && textures[i][1].getImageLoaded()) {\n        newTextures.push(textures[i]);\n      }\n    }\n    for (let i = 0; i < newTextures.length; i++) {\n      const srcTexture = newTextures[i][1];\n      const textureName = newTextures[i][0];\n      const newTex = model.device.getTextureManager().getTextureForVTKTexture(srcTexture); // Generates hash\n      if (newTex.getReady()) {\n        // is this a new texture\n        let found = false;\n        for (let t = 0; t < model.textures.length; t++) {\n          if (model.textures[t] === newTex) {\n            found = true;\n            usedTextures[t] = true;\n          }\n        }\n        if (!found) {\n          usedTextures[model.textures.length] = true;\n          const tview = newTex.createView(`${textureName}Texture`);\n          model.textures.push(newTex);\n          model.textureViews.push(tview);\n          const interpolate = srcTexture.getInterpolate() ? 'linear' : 'nearest';\n          let addressMode = null;\n          if (!addressMode && srcTexture.getEdgeClamp() && srcTexture.getRepeat()) addressMode = 'mirror-repeat';\n          if (!addressMode && srcTexture.getEdgeClamp()) addressMode = 'clamp-to-edge';\n          if (!addressMode && srcTexture.getRepeat()) addressMode = 'repeat';\n          if (textureName !== 'Environment') {\n            tview.addSampler(model.device, {\n              addressModeU: addressMode,\n              addressModeV: addressMode,\n              addressModeW: addressMode,\n              minFilter: interpolate,\n              magFilter: interpolate\n            });\n          } else {\n            tview.addSampler(model.device, {\n              addressModeU: 'repeat',\n              addressModeV: 'clamp-to-edge',\n              addressModeW: 'repeat',\n              minFilter: interpolate,\n              magFilter: interpolate,\n              mipmapFilter: 'linear'\n            });\n          }\n        }\n      }\n    }\n\n    // remove unused textures\n    for (let i = model.textures.length - 1; i >= 0; i--) {\n      if (!usedTextures[i]) {\n        model.textures.splice(i, 1);\n        model.textureViews.splice(i, 1);\n      }\n    }\n  };\n\n  // compute a unique hash for a pipeline, this needs to be unique enough to\n  // capture any pipeline code changes (which includes shader changes)\n  // or vertex input changes/ bind groups/ etc\n  publicAPI.computePipelineHash = () => {\n    let pipelineHash = `pd${model.useRendererMatrix ? 'r' : ''}${model.forceZValue ? 'z' : ''}`;\n    if (model.primitiveType === PrimitiveTypes.TriangleEdges || model.primitiveType === PrimitiveTypes.TriangleStripEdges) {\n      pipelineHash += 'edge';\n    } else {\n      if (model.vertexInput.hasAttribute(`normalMC`)) {\n        pipelineHash += `n`;\n      }\n      if (model.vertexInput.hasAttribute(`colorVI`)) {\n        pipelineHash += `c`;\n      }\n      if (model.vertexInput.hasAttribute(`tcoord`)) {\n        const tcoords = model.vertexInput.getBuffer('tcoord');\n        const numComp = vtkWebGPUTypes.getNumberOfComponentsFromBufferFormat(tcoords.getArrayInformation()[0].format);\n        pipelineHash += `t${numComp}`;\n      }\n      if (model.textures.length) {\n        pipelineHash += `tx${model.textures.length}`;\n      }\n    }\n    if (model._usesCellNormals) {\n      pipelineHash += `cn`;\n    }\n    if (model.SSBO) {\n      pipelineHash += `ssbo`;\n    }\n    const uhash = publicAPI.getHashFromUsage(model.usage);\n    pipelineHash += uhash;\n    pipelineHash += model.renderEncoder.getPipelineHash();\n    model.pipelineHash = pipelineHash;\n  };\n  publicAPI.updateBuffers = () => {\n    // handle textures if not edges\n    if (model.primitiveType !== PrimitiveTypes.TriangleEdges && model.primitiveType !== PrimitiveTypes.TriangleStripEdges) {\n      publicAPI.updateTextures();\n    }\n    const actor = model.WebGPUActor.getRenderable();\n    const rep = actor.getProperty().getRepresentation();\n\n    // handle per primitive type\n    model.usage = publicAPI.getUsage(rep, model.primitiveType);\n    publicAPI.buildVertexInput();\n    const vbo = model.vertexInput.getBuffer('vertexBC');\n    publicAPI.setNumberOfVertices(vbo.getSizeInBytes() / vbo.getStrideInBytes());\n    publicAPI.setTopology(publicAPI.getTopologyFromUsage(model.usage));\n    publicAPI.updateUBO();\n    if (publicAPI.haveWideLines()) {\n      const ppty = actor.getProperty();\n      publicAPI.setNumberOfInstances(Math.ceil(ppty.getLineWidth() * 2.0));\n    } else {\n      publicAPI.setNumberOfInstances(1);\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  is2D: false,\n  cellArray: null,\n  currentInput: null,\n  cellOffset: 0,\n  primitiveType: 0,\n  colorTexture: null,\n  renderEncoder: null,\n  textures: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initiaLalues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initiaLalues);\n\n  // Inheritance\n  vtkWebGPUSimpleMapper.extend(publicAPI, model, initiaLalues);\n  model.fragmentShaderTemplate = vtkWebGPUPolyDataFS;\n  model.vertexShaderTemplate = vtkWebGPUPolyDataVS;\n  model._tmpMat3 = mat3.identity(new Float64Array(9));\n  model._tmpMat4 = mat4.identity(new Float64Array(16));\n\n  // UBO\n  model.UBO = vtkWebGPUUniformBuffer.newInstance({\n    label: 'mapperUBO'\n  });\n  model.UBO.addEntry('BCWCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('BCSCMatrix', 'mat4x4<f32>');\n  model.UBO.addEntry('MCWCNormals', 'mat4x4<f32>');\n  model.UBO.addEntry('AmbientColor', 'vec4<f32>');\n  model.UBO.addEntry('DiffuseColor', 'vec4<f32>');\n  model.UBO.addEntry('EdgeColor', 'vec4<f32>');\n  model.UBO.addEntry('SpecularColor', 'vec4<f32>');\n  model.UBO.addEntry('AmbientIntensity', 'f32');\n  model.UBO.addEntry('DiffuseIntensity', 'f32');\n  model.UBO.addEntry('Roughness', 'f32');\n  model.UBO.addEntry('Metallic', 'f32');\n  model.UBO.addEntry('Ambient', 'f32');\n  model.UBO.addEntry('Normal', 'f32');\n  model.UBO.addEntry('Emission', 'f32');\n  model.UBO.addEntry('NormalStrength', 'f32');\n  model.UBO.addEntry('BaseIOR', 'f32');\n  model.UBO.addEntry('SpecularIntensity', 'f32');\n  model.UBO.addEntry('LineWidth', 'f32');\n  model.UBO.addEntry('Opacity', 'f32');\n  model.UBO.addEntry('ZValue', 'f32');\n  model.UBO.addEntry('PropID', 'u32');\n  model.UBO.addEntry('ClipNear', 'f32');\n  model.UBO.addEntry('ClipFar', 'f32');\n  model.UBO.addEntry('Time', 'u32');\n\n  // Build VTK API\n  setGet(publicAPI, model, ['cellArray', 'currentInput', 'cellOffset', 'is2D', 'primitiveType', 'renderEncoder']);\n  model.textures = [];\n\n  // Object methods\n  vtkWebGPUCellArrayMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUCellArrayMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUCellArrayMapper$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUCellArrayMapper$1 as default, extend, newInstance };\n", "import { n as newInstance$1 } from '../../macros2.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUCellArrayMapper from './CellArrayMapper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  PrimitiveTypes\n} = vtkWebGPUBufferManager;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPolyDataMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPolyDataMapper');\n  publicAPI.createCellArrayMapper = () => vtkWebGPUCellArrayMapper.newInstance();\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor');\n      if (!model.renderable.getStatic()) {\n        model.renderable.update();\n      }\n      const poly = model.renderable.getInputData();\n      model.renderable.mapScalars(poly, 1.0);\n      publicAPI.updateCellArrayMappers(poly);\n    }\n  };\n  publicAPI.updateCellArrayMappers = poly => {\n    const prims = [poly.getVerts(), poly.getLines(), poly.getPolys(), poly.getStrips()];\n\n    // we instantiate a cell array mapper for each cellArray that has cells\n    // and they handle the rendering of that cell array\n    const cellMappers = [];\n    let cellOffset = 0;\n    for (let i = PrimitiveTypes.Points; i <= PrimitiveTypes.Triangles; i++) {\n      if (prims[i].getNumberOfValues() > 0) {\n        if (!model.primitives[i]) {\n          model.primitives[i] = publicAPI.createCellArrayMapper();\n        }\n        const cellMapper = model.primitives[i];\n        cellMapper.setCellArray(prims[i]);\n        cellMapper.setCurrentInput(poly);\n        cellMapper.setCellOffset(cellOffset);\n        cellMapper.setPrimitiveType(i);\n        cellMapper.setRenderable(model.renderable);\n        cellOffset += prims[i].getNumberOfCells();\n        cellMappers.push(cellMapper);\n      } else {\n        model.primitives[i] = null;\n      }\n    }\n    if (model.WebGPUActor.getRenderable().getProperty().getEdgeVisibility()) {\n      for (let i = PrimitiveTypes.TriangleEdges; i <= PrimitiveTypes.TriangleStripEdges; i++) {\n        if (prims[i - 2].getNumberOfValues() > 0) {\n          if (!model.primitives[i]) {\n            model.primitives[i] = publicAPI.createCellArrayMapper();\n          }\n          const cellMapper = model.primitives[i];\n          cellMapper.setCellArray(prims[i - 2]);\n          cellMapper.setCurrentInput(poly);\n          cellMapper.setCellOffset(model.primitives[i - 2].getCellOffset());\n          cellMapper.setPrimitiveType(i);\n          cellMapper.setRenderable(model.renderable);\n          cellMappers.push(cellMapper);\n        } else {\n          model.primitives[i] = null;\n        }\n      }\n    }\n    publicAPI.prepareNodes();\n    publicAPI.addMissingChildren(cellMappers);\n    publicAPI.removeUnusedNodes();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  primitives: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.primitives = [];\n\n  // Object methods\n  vtkWebGPUPolyDataMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUPolyDataMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUPolyDataMapper$1 = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkMapper', newInstance);\n\nexport { vtkWebGPUPolyDataMapper$1 as default, extend, newInstance };\n", "import { n as newInstance$1 } from '../../macros2.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUCellArrayMapper from './CellArrayMapper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  PrimitiveTypes\n} = vtkWebGPUBufferManager;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPolyDataMapper2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPolyDataMapper2D');\n  publicAPI.createCellArrayMapper = () => vtkWebGPUCellArrayMapper.newInstance();\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor2D');\n      if (!model.renderable.getStatic()) {\n        model.renderable.update();\n      }\n      const poly = model.renderable.getInputData();\n      model.renderable.mapScalars(poly, 1.0);\n      publicAPI.updateCellArrayMappers(poly);\n    }\n  };\n  publicAPI.updateCellArrayMappers = poly => {\n    const prims = [poly.getVerts(), poly.getLines(), poly.getPolys(), poly.getStrips()];\n\n    // we instantiate a cell array mapper for each cellArray that has cells\n    // and they handle the rendering of that cell array\n    const cellMappers = [];\n    let cellOffset = 0;\n    for (let i = PrimitiveTypes.Points; i <= PrimitiveTypes.Triangles; i++) {\n      if (prims[i].getNumberOfValues() > 0) {\n        if (!model.primitives[i]) {\n          model.primitives[i] = publicAPI.createCellArrayMapper();\n        }\n        const cellMapper = model.primitives[i];\n        cellMapper.setCellArray(prims[i]);\n        cellMapper.setCurrentInput(poly);\n        cellMapper.setCellOffset(cellOffset);\n        cellMapper.setPrimitiveType(i);\n        cellMapper.setRenderable(model.renderable);\n        cellMapper.setIs2D(true);\n        cellOffset += prims[i].getNumberOfCells();\n        cellMappers.push(cellMapper);\n      } else {\n        model.primitives[i] = null;\n      }\n    }\n    publicAPI.prepareNodes();\n    publicAPI.addMissingChildren(cellMappers);\n    publicAPI.removeUnusedNodes();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    primitives: [],\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.primitives = [];\n\n  // Object methods\n  vtkWebGPUPolyDataMapper2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUPolyDataMapper2D');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkMapper2D', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { n as newInstance$1 } from '../../macros2.js';\nimport vtkScalarBarActor from '../Core/ScalarBarActor.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUScalarBarActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUScalarBarActor(publicAPI, model) {\n  model.classHierarchy.push('vtkWebGPUScalarBarActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\n      if (!model.scalarBarActorHelper.getRenderable()) {\n        model.scalarBarActorHelper.setRenderable(model.renderable);\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getBarActor());\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getTmActor());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      const camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\n      const tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\n      model.scalarBarActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model.WebGPURenderWindow.getRenderable());\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.scalarBarActorHelper = vtkScalarBarActor.newScalarBarActorHelper();\n\n  // Object methods\n  vtkWebGPUScalarBarActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUScalarBarActor');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkScalarBarActor', newInstance);\n\nexport { index as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\n\n/* eslint-disable no-bitwise */\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUSampler methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUSampler(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUSampler');\n  publicAPI.create = function (device) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.device = device;\n    model.options.addressModeU = options.addressModeU ? options.addressModeU : 'clamp-to-edge';\n    model.options.addressModeV = options.addressModeV ? options.addressModeV : 'clamp-to-edge';\n    model.options.addressModeW = options.addressModeW ? options.addressModeW : 'clamp-to-edge';\n    model.options.magFilter = options.magFilter ? options.magFilter : 'nearest';\n    model.options.minFilter = options.minFilter ? options.minFilter : 'nearest';\n    model.options.mipmapFilter = options.mipmapFilter ? options.mipmapFilter : 'nearest';\n    model.options.label = model.label;\n    model.handle = model.device.getHandle().createSampler(model.options);\n    model.bindGroupTime.modified();\n  };\n  publicAPI.getShaderCode = (binding, group) => {\n    const result = `@binding(${binding}) @group(${group}) var ${model.label}: sampler;`;\n    return result;\n  };\n  publicAPI.getBindGroupEntry = () => {\n    const foo = {\n      resource: model.handle\n    };\n    return foo;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  label: null,\n  options: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  model.options = {};\n  model.bindGroupLayoutEntry = {\n    /* eslint-disable no-undef */\n    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n    /* eslint-enable no-undef */\n    sampler: {\n      // type: 'filtering',\n    }\n  };\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'handle', 'options']);\n  macro.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'device', 'label']);\n  vtkWebGPUSampler(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUSampler$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUSampler$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkWebGPUSampler from './Sampler.js';\nimport vtkWebGPUTypes from './Types.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUTextureView methods\n// ----------------------------------------------------------------------------\n\n/* eslint-disable no-bitwise */\n\nfunction vtkWebGPUTextureView(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUTextureView');\n  publicAPI.create = (texture, options) => {\n    model.texture = texture;\n    model.options = options;\n    model.options.dimension = model.options.dimension || '2d';\n    model.options.label = model.label;\n    model.textureHandle = texture.getHandle();\n    model.handle = model.textureHandle.createView(model.options);\n    model.bindGroupLayoutEntry.texture.viewDimension = model.options.dimension;\n    const tDetails = vtkWebGPUTypes.getDetailsFromTextureFormat(model.texture.getFormat());\n    model.bindGroupLayoutEntry.texture.sampleType = tDetails.sampleType;\n  };\n  publicAPI.createFromTextureHandle = (textureHandle, options) => {\n    model.texture = null;\n    model.options = options;\n    model.options.dimension = model.options.dimension || '2d';\n    model.options.label = model.label;\n    model.textureHandle = textureHandle;\n    model.handle = model.textureHandle.createView(model.options);\n    model.bindGroupLayoutEntry.texture.viewDimension = model.options.dimension;\n    const tDetails = vtkWebGPUTypes.getDetailsFromTextureFormat(options.format);\n    model.bindGroupLayoutEntry.texture.sampleType = tDetails.sampleType;\n    model.bindGroupTime.modified();\n  };\n  publicAPI.getBindGroupEntry = () => {\n    const foo = {\n      resource: publicAPI.getHandle()\n    };\n    return foo;\n  };\n  publicAPI.getShaderCode = (binding, group) => {\n    let ttype = 'f32';\n    if (model.bindGroupLayoutEntry.texture.sampleType === 'sint') {\n      ttype = 'i32';\n    } else if (model.bindGroupLayoutEntry.texture.sampleType === 'uint') {\n      ttype = 'u32';\n    }\n    let result = `@binding(${binding}) @group(${group}) var ${model.label}: texture_${model.options.dimension}<${ttype}>;`;\n    if (model.bindGroupLayoutEntry.texture.sampleType === 'depth') {\n      result = `@binding(${binding}) @group(${group}) var ${model.label}: texture_depth_${model.options.dimension};`;\n    }\n    return result;\n  };\n  publicAPI.addSampler = (device, options) => {\n    const newSamp = vtkWebGPUSampler.newInstance({\n      label: `${model.label}Sampler`\n    });\n    newSamp.create(device, options);\n    publicAPI.setSampler(newSamp);\n  };\n  publicAPI.getBindGroupTime = () => {\n    // check if the handle changed\n    if (model.texture && model.texture.getHandle() !== model.textureHandle) {\n      model.textureHandle = model.texture.getHandle();\n      model.handle = model.textureHandle.createView(model.options);\n      model.bindGroupTime.modified();\n    }\n    return model.bindGroupTime;\n  };\n\n  // if the texture has changed then get a new view\n  publicAPI.getHandle = () => {\n    if (model.texture && model.texture.getHandle() !== model.textureHandle) {\n      model.textureHandle = model.texture.getHandle();\n      model.handle = model.textureHandle.createView(model.options);\n      model.bindGroupTime.modified();\n    }\n    return model.handle;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  texture: null,\n  handle: null,\n  sampler: null,\n  label: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  model.bindGroupLayoutEntry = {\n    /* eslint-disable no-undef */\n    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n    /* eslint-enable no-undef */\n    texture: {\n      sampleType: 'float',\n      viewDimension: '2d'\n      // multisampled: false,\n    }\n  };\n\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'texture']);\n  macro.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'label', 'sampler']);\n  vtkWebGPUTextureView(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUTextureView$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUTextureView$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport HalfFloat from '../../Common/Core/HalfFloat.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUTextureView from './TextureView.js';\nimport vtkWebGPUTypes from './Types.js';\nimport vtkTexture from '../Core/Texture.js';\n\nconst {\n  BufferUsage\n} = vtkWebGPUBufferManager;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUTexture');\n  publicAPI.create = (device, options) => {\n    model.device = device;\n    model.width = options.width;\n    model.height = options.height;\n    model.depth = options.depth ? options.depth : 1;\n    const dimension = model.depth === 1 ? '2d' : '3d';\n    model.format = options.format ? options.format : 'rgba8unorm';\n    model.mipLevel = options.mipLevel ? options.mipLevel : 0;\n    /* eslint-disable no-undef */\n    /* eslint-disable no-bitwise */\n    model.usage = options.usage ? options.usage : GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST;\n    /* eslint-enable no-undef */\n    /* eslint-enable no-bitwise */\n    model.handle = model.device.getHandle().createTexture({\n      size: [model.width, model.height, model.depth],\n      format: model.format,\n      // 'rgba8unorm',\n      usage: model.usage,\n      label: model.label,\n      dimension,\n      mipLevelCount: model.mipLevel + 1\n    });\n  };\n  publicAPI.assignFromHandle = (device, handle, options) => {\n    model.device = device;\n    model.handle = handle;\n    model.width = options.width;\n    model.height = options.height;\n    model.depth = options.depth ? options.depth : 1;\n    model.format = options.format ? options.format : 'rgba8unorm';\n    /* eslint-disable no-undef */\n    /* eslint-disable no-bitwise */\n    model.usage = options.usage ? options.usage : GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST;\n    /* eslint-enable no-undef */\n    /* eslint-enable no-bitwise */\n  };\n\n  publicAPI.writeImageData = req => {\n    let nativeArray = [];\n    if (req.canvas) {\n      model.device.getHandle().queue.copyExternalImageToTexture({\n        source: req.canvas,\n        flipY: req.flip\n      }, {\n        texture: model.handle,\n        premultipliedAlpha: true\n      }, [model.width, model.height, model.depth]);\n      model.ready = true;\n      return;\n    }\n    if (req.jsImageData && !req.nativeArray) {\n      req.width = req.jsImageData.width;\n      req.height = req.jsImageData.height;\n      req.depth = 1;\n      req.format = 'rgba8unorm';\n      req.flip = true;\n      req.nativeArray = req.jsImageData.data;\n    }\n    const tDetails = vtkWebGPUTypes.getDetailsFromTextureFormat(model.format);\n    let bufferBytesPerRow = model.width * tDetails.stride;\n    const fixAll = (arr, height, depth) => {\n      // bytesPerRow must be a multiple of 256 so we might need to rebuild\n      // the data here before passing to the buffer. e.g. if it is unorm8x4 then\n      // we need to have width be a multiple of 64\n      const inWidthInBytes = arr.length / (height * depth) * arr.BYTES_PER_ELEMENT;\n\n      // is this a half float texture?\n      const halfFloat = tDetails.elementSize === 2 && tDetails.sampleType === 'float';\n\n      // if we need to copy the data\n      if (halfFloat || inWidthInBytes % 256) {\n        const inArray = arr;\n        const inWidth = inWidthInBytes / inArray.BYTES_PER_ELEMENT;\n        const outBytesPerElement = tDetails.elementSize;\n        const outWidthInBytes = 256 * Math.floor((inWidth * outBytesPerElement + 255) / 256);\n        const outWidth = outWidthInBytes / outBytesPerElement;\n        const outArray = macro.newTypedArray(halfFloat ? 'Uint16Array' : inArray.constructor.name, outWidth * height * depth);\n        for (let v = 0; v < height * depth; v++) {\n          if (halfFloat) {\n            for (let i = 0; i < inWidth; i++) {\n              outArray[v * outWidth + i] = HalfFloat.toHalf(inArray[v * inWidth + i]);\n            }\n          } else {\n            outArray.set(inArray.subarray(v * inWidth, (v + 1) * inWidth), v * outWidth);\n          }\n        }\n        return [outArray, outWidthInBytes];\n      }\n      return [arr, inWidthInBytes];\n    };\n    if (req.nativeArray) {\n      nativeArray = req.nativeArray;\n    }\n    if (req.image) {\n      const canvas = document.createElement('canvas');\n      canvas.width = req.image.width;\n      canvas.height = req.image.height;\n      const ctx = canvas.getContext('2d');\n      ctx.translate(0, canvas.height);\n      ctx.scale(1, -1);\n      ctx.drawImage(req.image, 0, 0, req.image.width, req.image.height, 0, 0, canvas.width, canvas.height);\n      const imageData = ctx.getImageData(0, 0, req.image.width, req.image.height);\n      nativeArray = imageData.data;\n    }\n    const cmdEnc = model.device.createCommandEncoder();\n    if (publicAPI.getDimensionality() !== 3) {\n      // Non-3D, supports mipmaps\n      const mips = vtkTexture.generateMipmaps(nativeArray, model.width, model.height, model.mipLevel);\n      let currentWidth = model.width;\n      let currentHeight = model.height;\n      for (let m = 0; m <= model.mipLevel; m++) {\n        const fix = fixAll(mips[m], currentHeight, 1);\n        bufferBytesPerRow = fix[1];\n        const buffRequest = {\n          dataArray: req.dataArray ? req.dataArray : null,\n          nativeArray: fix[0],\n          /* eslint-disable no-undef */\n          usage: BufferUsage.Texture\n          /* eslint-enable no-undef */\n        };\n\n        const buff = model.device.getBufferManager().getBuffer(buffRequest);\n        cmdEnc.copyBufferToTexture({\n          buffer: buff.getHandle(),\n          offset: 0,\n          bytesPerRow: bufferBytesPerRow,\n          rowsPerImage: currentHeight\n        }, {\n          texture: model.handle,\n          mipLevel: m\n        }, [currentWidth, currentHeight, 1]);\n        currentWidth /= 2;\n        currentHeight /= 2;\n      }\n      model.device.submitCommandEncoder(cmdEnc);\n      model.ready = true;\n    } else {\n      // 3D, no mipmaps\n      const fix = fixAll(nativeArray, model.height, model.depth);\n      bufferBytesPerRow = fix[1];\n      const buffRequest = {\n        dataArray: req.dataArray ? req.dataArray : null,\n        /* eslint-disable no-undef */\n        usage: BufferUsage.Texture\n        /* eslint-enable no-undef */\n      };\n\n      buffRequest.nativeArray = fix[0];\n      const buff = model.device.getBufferManager().getBuffer(buffRequest);\n      cmdEnc.copyBufferToTexture({\n        buffer: buff.getHandle(),\n        offset: 0,\n        bytesPerRow: bufferBytesPerRow,\n        rowsPerImage: model.height\n      }, {\n        texture: model.handle\n      }, [model.width, model.height, model.depth]);\n      model.device.submitCommandEncoder(cmdEnc);\n      model.ready = true;\n    }\n  };\n\n  // when data is pulled out of this texture what scale must be applied to\n  // get back to the original source data. For formats such as r8unorm we\n  // have to multiply by 255.0, for formats such as r16float it is 1.0\n  publicAPI.getScale = () => {\n    const tDetails = vtkWebGPUTypes.getDetailsFromTextureFormat(model.format);\n    const halfFloat = tDetails.elementSize === 2 && tDetails.sampleType === 'float';\n    return halfFloat ? 1.0 : 255.0;\n  };\n  publicAPI.getNumberOfComponents = () => {\n    const tDetails = vtkWebGPUTypes.getDetailsFromTextureFormat(model.format);\n    return tDetails.numComponents;\n  };\n  publicAPI.getDimensionality = () => {\n    let dims = 0;\n    if (model.width > 1) dims++;\n    if (model.height > 1) dims++;\n    if (model.depth > 1) dims++;\n    return dims;\n  };\n  publicAPI.resizeToMatch = tex => {\n    if (tex.getWidth() !== model.width || tex.getHeight() !== model.height || tex.getDepth() !== model.depth) {\n      model.width = tex.getWidth();\n      model.height = tex.getHeight();\n      model.depth = tex.getDepth();\n      model.handle = model.device.getHandle().createTexture({\n        size: [model.width, model.height, model.depth],\n        format: model.format,\n        usage: model.usage,\n        label: model.label\n      });\n    }\n  };\n  publicAPI.resize = function (width, height) {\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    if (width !== model.width || height !== model.height || depth !== model.depth) {\n      model.width = width;\n      model.height = height;\n      model.depth = depth;\n      model.handle = model.device.getHandle().createTexture({\n        size: [model.width, model.height, model.depth],\n        format: model.format,\n        usage: model.usage,\n        label: model.label\n      });\n    }\n  };\n  publicAPI.createView = function (label) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // if options is missing values try to add them in\n    if (!options.dimension) {\n      options.dimension = model.depth === 1 ? '2d' : '3d';\n    }\n    const view = vtkWebGPUTextureView.newInstance({\n      label\n    });\n    view.create(publicAPI, options);\n    return view;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  buffer: null,\n  ready: false,\n  label: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['handle', 'ready', 'width', 'height', 'depth', 'format', 'usage']);\n  macro.setGet(publicAPI, model, ['device', 'label']);\n  vtkWebGPUTexture(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUTexture$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUTexture$1 as default, extend, newInstance };\n", "import { m as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUPixelSpaceCallbackMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPixelSpaceCallbackMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkWebGPUPixelSpaceCallbackMapper');\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n    model.WebGPURenderWindow = model.WebGPURenderer.getParent();\n    const aspectRatio = model.WebGPURenderer.getAspectRatio();\n    const camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\n    const tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\n    const texels = null;\n    if (model.renderable.getUseZValues()) ;\n    model.renderable.invokeCallback(model.renderable.getInputData(), camera, aspectRatio, tsize, texels);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkWebGPUPixelSpaceCallbackMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUPixelSpaceCallbackMapper');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkPixelSpaceCallbackMapper', newInstance);\n\nexport { index as default, extend, newInstance };\n"],
  "mappings": "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",
  "names": ["newInstance", "newInstance", "count", "index", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "index", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "index", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "blur", "sum", "count", "reverse", "ticks", "array", "range", "extend", "format", "extend", "min", "max", "extend", "extend", "extend", "cosh", "sinh", "t1", "t2", "t3", "color", "rgb", "zero", "i", "degrees", "identity", "identity", "hsl", "hue", "hcl", "hue", "cubehelix", "hue", "number", "identity", "normalize", "range", "i", "piecewise", "number", "map", "locale", "group", "zero", "format", "formatPrefix", "value", "max", "count", "count", "linear", "t0", "t1", "count", "range", "ticks", "count", "reverse", "step", "locale", "formats", "pad", "format", "locale", "defaultLocale", "index", "DEFAULT_VALUES", "extend", "newInstance", "ticks", "linear", "format", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "Representation", "vtkErrorMacro", "mode", "index", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "ScalarMode", "time", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "primTypes", "ScalarMode", "vtkErrorMacro", "StartEvent", "EndEvent", "point", "index", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "applyTextStyle", "defaultGenerateTicks", "linear", "ticks", "format", "range", "tmp2v3", "tmpv3", "defaultValues", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "vtkDebugMacro", "DEFAULT_VALUES", "extend", "newInstance", "newInstance", "registerOverride", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "registerOverride", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "format", "DEFAULT_VALUES", "extend", "newInstance", "re", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "Representation", "PrimitiveTypes", "Constants", "ptId", "flatId", "array", "DEFAULT_VALUES", "extend", "newInstance", "BufferUsage", "Constants", "vtkErrorMacro", "STATIC", "format", "index", "array", "DEFAULT_VALUES", "extend", "newInstance", "BufferUsage", "vtkErrorMacro", "group", "DEFAULT_VALUES", "extend", "newInstance", "BufferUsage", "vtkErrorMacro", "group", "DEFAULT_VALUES", "extend", "newInstance", "vtkDebugMacro", "count", "index", "DEFAULT_VALUES", "extend", "newInstance", "registerOverride", "newInstance", "CoordinateSystem", "DEFAULT_VALUES", "extend", "newInstance", "registerOverride", "newInstance", "CoordinateSystem", "DEFAULT_VALUES", "extend", "newInstance", "registerOverride", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "registerOverride", "newInstance", "DisplayLocation", "Constants", "DEFAULT_VALUES", "extend", "newInstance", "BufferUsage", "PrimitiveTypes", "Representation", "ScalarMode", "CoordinateSystem", "DisplayLocation", "aColor", "fDesc", "code", "DEFAULT_VALUES", "extend", "newInstance", "PrimitiveTypes", "DEFAULT_VALUES", "extend", "newInstance", "registerOverride", "newInstance", "PrimitiveTypes", "defaultValues", "extend", "newInstance", "registerOverride", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "registerOverride", "newInstance", "group", "DEFAULT_VALUES", "extend", "newInstance", "group", "DEFAULT_VALUES", "extend", "newInstance", "BufferUsage", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "registerOverride", "newInstance"]
}
